

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 21:43:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392                           
   393                           	psect	strings
   394  0800                     __pstrings:
   395  0800                     stringtab:
   396  0800                     __stringtab:
   397                           
   398                           ;	String table - string pointers are 1 byte each
   399  0800  1BFF               	btfsc	btemp+1,7
   400  0801  280A               	ljmp	stringcode
   401  0802  1383               	bcf	3,7
   402  0803  187F               	btfsc	btemp+1,0
   403  0804  1783               	bsf	3,7
   404  0805  0800               	movf	0,w
   405  0806  0A84               	incf	4,f
   406  0807  1903               	skipnz
   407  0808  0AFF               	incf	btemp+1,f
   408  0809  0008               	return
   409  080A                     stringcode:
   410  080A                     stringdir:
   411  080A  3008               	movlw	high stringdir
   412  080B  008A               	movwf	10
   413  080C  0804               	movf	4,w
   414  080D  0A84               	incf	4,f
   415  080E  0782               	addwf	2,f
   416  080F                     __stringbase:
   417  080F  3400               	retlw	0
   418  0810                     __end_of__stringtab:
   419  0810                     _dpowers:
   420  0810  3401               	retlw	1
   421  0811  3400               	retlw	0
   422  0812  3400               	retlw	0
   423  0813  3400               	retlw	0
   424  0814  340A               	retlw	10
   425  0815  3400               	retlw	0
   426  0816  3400               	retlw	0
   427  0817  3400               	retlw	0
   428  0818  3464               	retlw	100
   429  0819  3400               	retlw	0
   430  081A  3400               	retlw	0
   431  081B  3400               	retlw	0
   432  081C  34E8               	retlw	232
   433  081D  3403               	retlw	3
   434  081E  3400               	retlw	0
   435  081F  3400               	retlw	0
   436  0820  3410               	retlw	16
   437  0821  3427               	retlw	39
   438  0822  3400               	retlw	0
   439  0823  3400               	retlw	0
   440  0824  34A0               	retlw	160
   441  0825  3486               	retlw	134
   442  0826  3401               	retlw	1
   443  0827  3400               	retlw	0
   444  0828  3440               	retlw	64
   445  0829  3442               	retlw	66
   446  082A  340F               	retlw	15
   447  082B  3400               	retlw	0
   448  082C  3480               	retlw	128
   449  082D  3496               	retlw	150
   450  082E  3498               	retlw	152
   451  082F  3400               	retlw	0
   452  0830  3400               	retlw	0
   453  0831  34E1               	retlw	225
   454  0832  34F5               	retlw	245
   455  0833  3405               	retlw	5
   456  0834  3400               	retlw	0
   457  0835  34CA               	retlw	202
   458  0836  349A               	retlw	154
   459  0837  343B               	retlw	59
   460  0838                     __end_of_dpowers:
   461  0019                     _TXREG	set	25
   462  0018                     _RCSTAbits	set	24
   463  0013                     _SSPBUF	set	19
   464  0014                     _SSPCON	set	20
   465  000B                     _INTCONbits	set	11
   466  0005                     _PORTAbits	set	5
   467  001A                     _RCREG	set	26
   468  000C                     _PIR1bits	set	12
   469  0063                     _SSPIF	set	99
   470  0098                     _TXSTAbits	set	152
   471  0099                     _SPBRG	set	153
   472  0087                     _TRISCbits	set	135
   473  0093                     _SSPADD	set	147
   474  0094                     _SSPSTAT	set	148
   475  0091                     _SSPCON2	set	145
   476  0091                     _SSPCON2bits	set	145
   477  0085                     _TRISAbits	set	133
   478  008C                     _PIE1bits	set	140
   479  04A0                     _BF	set	1184
   480  048B                     _RCEN	set	1163
   481  048E                     _ACKSTAT	set	1166
   482  048C                     _ACKEN	set	1164
   483  048D                     _ACKDT	set	1165
   484  048A                     _PEN	set	1162
   485  0489                     _RSEN	set	1161
   486  0488                     _SEN	set	1160
   487  0189                     _ANSELH	set	393
   488  0188                     _ANSEL	set	392
   489  0838                     STR_3:
   490  0838  3425               	retlw	37	;'%'
   491  0839  346C               	retlw	108	;'l'
   492  083A  3475               	retlw	117	;'u'
   493  083B  342E               	retlw	46	;'.'
   494  083C  3425               	retlw	37	;'%'
   495  083D  3436               	retlw	54	;'6'
   496  083E  342E               	retlw	46	;'.'
   497  083F  3436               	retlw	54	;'6'
   498  0840  346C               	retlw	108	;'l'
   499  0841  3475               	retlw	117	;'u'
   500  0842  3400               	retlw	0
   501  0843                     STR_1:
   502  0843  3420               	retlw	32	;' '
   503  0844  3400               	retlw	0
   504  0843                     
   505                           	psect	cinit
   506  0011                     start_initialization:	
   507                           ; #config settings
   508                           
   509  0011                     __initialization:
   510                           
   511                           ; Clear objects allocated to BANK0
   512  0011  1283               	bcf	3,5	;RP0=0, select bank0
   513  0012  1303               	bcf	3,6	;RP1=0, select bank0
   514  0013  01E6               	clrf	__pbssBANK0& (0+127)
   515  0014  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   516  0015  01E8               	clrf	(__pbssBANK0+2)& (0+127)
   517                           
   518                           ; Clear objects allocated to BANK1
   519  0016  1383               	bcf	3,7	;select IRP bank0
   520  0017  30A0               	movlw	low __pbssBANK1
   521  0018  0084               	movwf	4
   522  0019  30BD               	movlw	low (__pbssBANK1+29)
   523  001A  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   524  001F                     end_of_initialization:	
   525                           ;End of C runtime variable initialization code
   526                           
   527  001F                     __end_of__initialization:
   528  001F  0183               	clrf	3
   529  0020  120A  158A  2CC3   	ljmp	_main	;jump to C main() function
   530                           
   531                           	psect	bssBANK0
   532  0066                     __pbssBANK0:
   533  0066                     _status:
   534  0066                     	ds	2
   535  0068                     _buffer:
   536  0068                     	ds	1
   537                           
   538                           	psect	bssBANK1
   539  00A0                     __pbssBANK1:
   540  00A0                     ftoa@buf:
   541  00A0                     	ds	17
   542  00B1                     _valor_arreglado:
   543  00B1                     	ds	12
   544                           
   545                           	psect	clrtext
   546  07F8                     clear_ram0:	
   547                           ;	Called with FSR containing the base address, and
   548                           ;	W with the last address+1
   549                           
   550  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   551  07F9                     clrloop0:
   552  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   553  07FA  0A84               	incf	4,f	;increment pointer
   554  07FB  0604               	xorwf	4,w	;XOR with final address
   555  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   556  07FD  3400               	retlw	0	;all done for this memory range, return
   557  07FE  0604               	xorwf	4,w	;XOR again to restore value
   558  07FF  2FF9               	goto	clrloop0	;do the next byte
   559                           
   560                           	psect	cstackCOMMON
   561  0070                     __pcstackCOMMON:
   562  0070                     ?_isdigit:
   563  0070                     ?_I2C_Master_Init:	
   564                           ; 1 bit 
   565                           
   566  0070                     ?_I2C_MPU_Init:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_I2C_Read_MPU:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_UARTSendChar:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_I2C_Master_Start:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_I2C_Master_Write:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_I2C_Master_Stop:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_I2C_Start:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_I2C_Master_RepeatedStart:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_I2C_Read:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_isr:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ??_isr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_I2C_Master_Wait:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_I2C_ACK:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_I2C_NACK:	
   609                           ; 1 bytes @ 0x0
   610                           
   611                           
   612                           ; 1 bytes @ 0x0
   613  0070                     	ds	5
   614  0075                     isr@opcionUART:
   615                           
   616                           ; 1 bytes @ 0x5
   617  0075                     	ds	1
   618  0076                     ??_I2C_Master_Init:
   619  0076                     ??_UARTSendChar:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  0076                     ??_I2C_Master_Start:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  0076                     ??_I2C_Master_Write:	
   626                           ; 1 bytes @ 0x6
   627                           
   628  0076                     ??_I2C_Master_Stop:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  0076                     ??_I2C_Master_RepeatedStart:	
   632                           ; 1 bytes @ 0x6
   633                           
   634  0076                     ??_I2C_Read:	
   635                           ; 1 bytes @ 0x6
   636                           
   637  0076                     ??_isdigit:	
   638                           ; 1 bytes @ 0x6
   639                           
   640  0076                     ??_I2C_Master_Wait:	
   641                           ; 1 bytes @ 0x6
   642                           
   643  0076                     ??_I2C_ACK:	
   644                           ; 1 bytes @ 0x6
   645                           
   646  0076                     ??_I2C_NACK:	
   647                           ; 1 bytes @ 0x6
   648                           
   649  0076                     ??___wmul:	
   650                           ; 1 bytes @ 0x6
   651                           
   652  0076                     ??___lldiv:	
   653                           ; 1 bytes @ 0x6
   654                           
   655  0076                     ??___flneg:	
   656                           ; 1 bytes @ 0x6
   657                           
   658  0076                     ??___flsub:	
   659                           ; 1 bytes @ 0x6
   660                           
   661  0076                     ?__Umul8_16:	
   662                           ; 1 bytes @ 0x6
   663                           
   664  0076                     I2C_Master_Write@data:	
   665                           ; 2 bytes @ 0x6
   666                           
   667  0076                     UARTSendChar@c:	
   668                           ; 1 bytes @ 0x6
   669                           
   670  0076                     __Umul8_16@multiplicand:	
   671                           ; 1 bytes @ 0x6
   672                           
   673  0076                     _isdigit$966:	
   674                           ; 1 bytes @ 0x6
   675                           
   676  0076                     ___wmul@product:	
   677                           ; 1 bytes @ 0x6
   678                           
   679                           
   680                           ; 2 bytes @ 0x6
   681  0076                     	ds	1
   682  0077                     ??_I2C_MPU_Init:
   683  0077                     ??_I2C_Start:	
   684                           ; 1 bytes @ 0x7
   685                           
   686  0077                     ??___llmod:	
   687                           ; 1 bytes @ 0x7
   688                           
   689  0077                     I2C_Start@add:	
   690                           ; 1 bytes @ 0x7
   691                           
   692  0077                     isdigit@c:	
   693                           ; 1 bytes @ 0x7
   694                           
   695                           
   696                           ; 1 bytes @ 0x7
   697  0077                     	ds	1
   698                           
   699                           	psect	cstackBANK0
   700  0020                     __pcstackBANK0:
   701  0020                     ?___flge:
   702  0020                     ?_UARTSendString:	
   703                           ; 1 bit 
   704                           
   705  0020                     ??__Umul8_16:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0020                     ?___wmul:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0020                     ?___lldiv:	
   712                           ; 2 bytes @ 0x0
   713                           
   714  0020                     ?___flneg:	
   715                           ; 4 bytes @ 0x0
   716                           
   717  0020                     ?___fladd:	
   718                           ; 4 bytes @ 0x0
   719                           
   720  0020                     ?___xxtofl:	
   721                           ; 4 bytes @ 0x0
   722                           
   723  0020                     I2C_Read@ACK_NACK:	
   724                           ; 4 bytes @ 0x0
   725                           
   726  0020                     UARTSendString@str:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0020                     ___wmul@multiplier:	
   730                           ; 2 bytes @ 0x0
   731                           
   732  0020                     ___lldiv@divisor:	
   733                           ; 2 bytes @ 0x0
   734                           
   735  0020                     ___flge@ff1:	
   736                           ; 4 bytes @ 0x0
   737                           
   738  0020                     ___flneg@f1:	
   739                           ; 4 bytes @ 0x0
   740                           
   741  0020                     ___fladd@b:	
   742                           ; 4 bytes @ 0x0
   743                           
   744  0020                     ___xxtofl@val:	
   745                           ; 4 bytes @ 0x0
   746                           
   747                           
   748                           ; 4 bytes @ 0x0
   749  0020                     	ds	1
   750  0021                     I2C_Read@Data:
   751                           
   752                           ; 1 bytes @ 0x1
   753  0021                     	ds	1
   754  0022                     UARTSendString@max_length:
   755  0022                     ___wmul@multiplicand:	
   756                           ; 1 bytes @ 0x2
   757                           
   758  0022                     __Umul8_16@product:	
   759                           ; 2 bytes @ 0x2
   760                           
   761                           
   762                           ; 2 bytes @ 0x2
   763  0022                     	ds	1
   764  0023                     ??_UARTSendString:
   765                           
   766                           ; 1 bytes @ 0x3
   767  0023                     	ds	1
   768  0024                     ??___xxtofl:
   769  0024                     __Umul8_16@word_mpld:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0024                     ___lldiv@dividend:	
   773                           ; 2 bytes @ 0x4
   774                           
   775  0024                     ___flge@ff2:	
   776                           ; 4 bytes @ 0x4
   777                           
   778  0024                     ___fladd@a:	
   779                           ; 4 bytes @ 0x4
   780                           
   781                           
   782                           ; 4 bytes @ 0x4
   783  0024                     	ds	2
   784  0026                     __Umul8_16@multiplier:
   785  0026                     UARTSendString@i:	
   786                           ; 1 bytes @ 0x6
   787                           
   788                           
   789                           ; 2 bytes @ 0x6
   790  0026                     	ds	2
   791  0028                     ??___flge:
   792  0028                     ??___fladd:	
   793                           ; 1 bytes @ 0x8
   794                           
   795  0028                     ___xxtofl@sign:	
   796                           ; 1 bytes @ 0x8
   797                           
   798  0028                     ___lldiv@quotient:	
   799                           ; 1 bytes @ 0x8
   800                           
   801                           
   802                           ; 4 bytes @ 0x8
   803  0028                     	ds	1
   804  0029                     ___xxtofl@exp:
   805                           
   806                           ; 1 bytes @ 0x9
   807  0029                     	ds	1
   808  002A                     ___xxtofl@arg:
   809                           
   810                           ; 4 bytes @ 0xA
   811  002A                     	ds	2
   812  002C                     ___lldiv@counter:
   813                           
   814                           ; 1 bytes @ 0xC
   815  002C                     	ds	1
   816  002D                     ?_UARTInit:
   817  002D                     ?___llmod:	
   818                           ; 1 bytes @ 0xD
   819                           
   820  002D                     UARTInit@baud_rate:	
   821                           ; 4 bytes @ 0xD
   822                           
   823  002D                     ___llmod@divisor:	
   824                           ; 4 bytes @ 0xD
   825                           
   826                           
   827                           ; 4 bytes @ 0xD
   828  002D                     	ds	1
   829  002E                     ?___flmul:
   830  002E                     ___flmul@b:	
   831                           ; 4 bytes @ 0xE
   832                           
   833                           
   834                           ; 4 bytes @ 0xE
   835  002E                     	ds	2
   836  0030                     ___fladd@signs:
   837                           
   838                           ; 1 bytes @ 0x10
   839  0030                     	ds	1
   840  0031                     UARTInit@BRGH:
   841  0031                     ___fladd@aexp:	
   842                           ; 1 bytes @ 0x11
   843                           
   844  0031                     ___llmod@dividend:	
   845                           ; 1 bytes @ 0x11
   846                           
   847                           
   848                           ; 4 bytes @ 0x11
   849  0031                     	ds	1
   850  0032                     ??_UARTInit:
   851  0032                     ___fladd@bexp:	
   852                           ; 1 bytes @ 0x12
   853                           
   854  0032                     ___flmul@a:	
   855                           ; 1 bytes @ 0x12
   856                           
   857                           
   858                           ; 4 bytes @ 0x12
   859  0032                     	ds	1
   860  0033                     ___fladd@grs:
   861                           
   862                           ; 1 bytes @ 0x13
   863  0033                     	ds	1
   864  0034                     ?___flsub:
   865  0034                     ___flsub@a:	
   866                           ; 4 bytes @ 0x14
   867                           
   868                           
   869                           ; 4 bytes @ 0x14
   870  0034                     	ds	1
   871  0035                     ___llmod@counter:
   872                           
   873                           ; 1 bytes @ 0x15
   874  0035                     	ds	1
   875  0036                     ??___flmul:
   876  0036                     ?_sprintf:	
   877                           ; 1 bytes @ 0x16
   878                           
   879  0036                     sprintf@f:	
   880                           ; 2 bytes @ 0x16
   881                           
   882                           
   883                           ; 1 bytes @ 0x16
   884  0036                     	ds	2
   885  0038                     ___flsub@b:
   886                           
   887                           ; 4 bytes @ 0x18
   888  0038                     	ds	3
   889  003B                     ___flmul@sign:
   890                           
   891                           ; 1 bytes @ 0x1B
   892  003B                     	ds	1
   893  003C                     ___flmul@grs:
   894                           
   895                           ; 4 bytes @ 0x1C
   896  003C                     	ds	3
   897  003F                     ??_sprintf:
   898                           
   899                           ; 1 bytes @ 0x1F
   900  003F                     	ds	1
   901  0040                     ___flmul@aexp:
   902                           
   903                           ; 1 bytes @ 0x20
   904  0040                     	ds	1
   905  0041                     ___flmul@bexp:
   906                           
   907                           ; 1 bytes @ 0x21
   908  0041                     	ds	1
   909  0042                     ___flmul@prod:
   910                           
   911                           ; 4 bytes @ 0x22
   912  0042                     	ds	2
   913  0044                     sprintf@flag:
   914                           
   915                           ; 1 bytes @ 0x24
   916  0044                     	ds	1
   917  0045                     sprintf@ap:
   918                           
   919                           ; 1 bytes @ 0x25
   920  0045                     	ds	1
   921  0046                     ___flmul@temp:
   922  0046                     sprintf@val:	
   923                           ; 2 bytes @ 0x26
   924                           
   925                           
   926                           ; 4 bytes @ 0x26
   927  0046                     	ds	2
   928  0048                     ??_I2C_Read_MPU:
   929  0048                     ?___fltol:	
   930                           ; 1 bytes @ 0x28
   931                           
   932  0048                     ___fltol@f1:	
   933                           ; 4 bytes @ 0x28
   934                           
   935                           
   936                           ; 4 bytes @ 0x28
   937  0048                     	ds	2
   938  004A                     sprintf@sp:
   939                           
   940                           ; 1 bytes @ 0x2A
   941  004A                     	ds	1
   942  004B                     sprintf@width:
   943                           
   944                           ; 2 bytes @ 0x2B
   945  004B                     	ds	1
   946  004C                     ??___fltol:
   947  004C                     I2C_Read_MPU@temp:	
   948                           ; 1 bytes @ 0x2C
   949                           
   950                           
   951                           ; 6 bytes @ 0x2C
   952  004C                     	ds	1
   953  004D                     sprintf@prec:
   954                           
   955                           ; 2 bytes @ 0x2D
   956  004D                     	ds	2
   957  004F                     sprintf@c:
   958                           
   959                           ; 1 bytes @ 0x2F
   960  004F                     	ds	2
   961  0051                     ___fltol@sign1:
   962                           
   963                           ; 1 bytes @ 0x31
   964  0051                     	ds	1
   965  0052                     ___fltol@exp1:
   966  0052                     I2C_Read_MPU@valor_original:	
   967                           ; 1 bytes @ 0x32
   968                           
   969                           
   970                           ; 6 bytes @ 0x32
   971  0052                     	ds	1
   972  0053                     ?_ftoa:
   973  0053                     ftoa@f:	
   974                           ; 1 bytes @ 0x33
   975                           
   976                           
   977                           ; 4 bytes @ 0x33
   978  0053                     	ds	4
   979  0057                     ftoa@status:
   980                           
   981                           ; 2 bytes @ 0x37
   982  0057                     	ds	1
   983  0058                     I2C_Read_MPU@Addr:
   984                           
   985                           ; 2 bytes @ 0x38
   986  0058                     	ds	1
   987  0059                     ??_ftoa:
   988                           
   989                           ; 1 bytes @ 0x39
   990  0059                     	ds	1
   991  005A                     I2C_Read_MPU@data_send:
   992  005A                     ftoa@rem:	
   993                           ; 1 bytes @ 0x3A
   994                           
   995                           
   996                           ; 4 bytes @ 0x3A
   997  005A                     	ds	4
   998  005E                     ftoa@l:
   999                           
  1000                           ; 4 bytes @ 0x3E
  1001  005E                     	ds	4
  1002  0062                     ftoa@cp:
  1003                           
  1004                           ; 1 bytes @ 0x42
  1005  0062                     	ds	1
  1006  0063                     ??_main:
  1007                           
  1008                           ; 1 bytes @ 0x43
  1009  0063                     	ds	3
  1010                           
  1011                           	psect	maintext
  1012  0CC3                     __pmaintext:	
  1013 ;;
  1014 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1015 ;;
  1016 ;; *************** function _main *****************
  1017 ;; Defined at:
  1018 ;;		line 73 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : B00/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0
  1034 ;;      Temps:          0       3       0       0       0
  1035 ;;      Totals:         0       3       0       0       0
  1036 ;;Total ram usage:        3 bytes
  1037 ;; Hardware stack levels required when called:    5
  1038 ;; This function calls:
  1039 ;;		_I2C_MPU_Init
  1040 ;;		_I2C_Master_Init
  1041 ;;		_I2C_Read_MPU
  1042 ;;		_UARTInit
  1043 ;;		_UARTSendChar
  1044 ;;		_UARTSendString
  1045 ;;		_ftoa
  1046 ;; This function is called by:
  1047 ;;		Startup code after reset
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function _main
  1053  0CC3                     _main:
  1054  0CC3                     l2626:	
  1055                           ;incstack = 0
  1056                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1057                           
  1058                           
  1059                           ;main.c: 74:     I2C_Master_Write(0x01);
  1060  0CC3  3006               	movlw	6
  1061  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0CC6  00E5               	movwf	??_main+2
  1064  0CC7  3013               	movlw	19
  1065  0CC8  00E4               	movwf	??_main+1
  1066  0CC9  30AD               	movlw	173
  1067  0CCA  00E3               	movwf	??_main
  1068  0CCB                     u3617:
  1069  0CCB  0BE3               	decfsz	??_main,f
  1070  0CCC  2CCB               	goto	u3617
  1071  0CCD  0BE4               	decfsz	??_main+1,f
  1072  0CCE  2CCB               	goto	u3617
  1073  0CCF  0BE5               	decfsz	??_main+2,f
  1074  0CD0  2CCB               	goto	u3617
  1075  0CD1                     l2628:
  1076                           
  1077                           ;main.c: 76: 
  1078  0CD1  1683               	bsf	3,5	;RP0=1, select bank3
  1079  0CD2  1703               	bsf	3,6	;RP1=1, select bank3
  1080  0CD3  0188               	clrf	8	;volatile
  1081  0CD4                     l2630:
  1082                           
  1083                           ;main.c: 77:     I2C_Master_Start();
  1084  0CD4  0189               	clrf	9	;volatile
  1085  0CD5                     l2632:
  1086                           
  1087                           ;main.c: 79:     I2C_Master_Write(0x19);
  1088  0CD5  3000               	movlw	0
  1089  0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0CD8  00B0               	movwf	UARTInit@baud_rate+3
  1092  0CD9  3000               	movlw	0
  1093  0CDA  00AF               	movwf	UARTInit@baud_rate+2
  1094  0CDB  3025               	movlw	37
  1095  0CDC  00AE               	movwf	UARTInit@baud_rate+1
  1096  0CDD  3080               	movlw	128
  1097  0CDE  00AD               	movwf	UARTInit@baud_rate
  1098  0CDF  01B1               	clrf	UARTInit@BRGH
  1099  0CE0  0AB1               	incf	UARTInit@BRGH,f
  1100  0CE1  120A  158A  21CE  120A  158A  	fcall	_UARTInit
  1101  0CE6                     l2634:
  1102                           
  1103                           ;main.c: 80:     I2C_Master_Write(0x07);
  1104  0CE6  178B               	bsf	11,7	;volatile
  1105  0CE7                     l2636:
  1106                           
  1107                           ;main.c: 81:     I2C_Master_Stop();
  1108  0CE7  170B               	bsf	11,6	;volatile
  1109  0CE8                     l2638:
  1110                           
  1111                           ;main.c: 82: 
  1112  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
  1113  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
  1114  0CEA  168C               	bsf	12,5	;volatile
  1115  0CEB                     l2640:
  1116                           
  1117                           ;main.c: 84:     I2C_Master_Write(0xD0);
  1118  0CEB  1005               	bcf	5,0	;volatile
  1119  0CEC                     l2642:
  1120                           
  1121                           ;main.c: 85:     I2C_Master_Write(0x1A);
  1122  0CEC  1085               	bcf	5,1	;volatile
  1123  0CED                     l2644:
  1124                           
  1125                           ;main.c: 87:     I2C_Master_Stop();
  1126  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0CEF  1005               	bcf	5,0	;volatile
  1129  0CF0                     l2646:
  1130                           
  1131                           ;main.c: 88: 
  1132  0CF0  1085               	bcf	5,1	;volatile
  1133  0CF1                     l2648:
  1134                           
  1135                           ;main.c: 90:     I2C_Master_Write(0xD0);
  1136  0CF1  160A  118A  2752  120A  158A  	fcall	_I2C_Master_Init
  1137  0CF6                     l2650:
  1138                           
  1139                           ;main.c: 91:     I2C_Master_Write(0x1B);
  1140  0CF6  120A  158A  22BD  120A  158A  	fcall	_I2C_MPU_Init
  1141  0CFB                     l2652:
  1142                           
  1143                           ;main.c: 94: 
  1144  0CFB  30B1               	movlw	(low (_valor_arreglado| 0))& (0+255)
  1145  0CFC  120A  118A  260C  120A  158A  	fcall	_I2C_Read_MPU
  1146  0D01                     l2654:
  1147                           
  1148                           ;main.c: 96:     I2C_Master_Write(0xD0);
  1149  0D01  1683               	bsf	3,5	;RP0=1, select bank1
  1150  0D02  1303               	bcf	3,6	;RP1=0, select bank1
  1151  0D03  0834               	movf	(_valor_arreglado+3)^(0+128),w
  1152  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0D06  00D6               	movwf	ftoa@f+3
  1155  0D07  1683               	bsf	3,5	;RP0=1, select bank1
  1156  0D08  1303               	bcf	3,6	;RP1=0, select bank1
  1157  0D09  0833               	movf	(_valor_arreglado+2)^(0+128),w
  1158  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0D0C  00D5               	movwf	ftoa@f+2
  1161  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0D0F  0832               	movf	(_valor_arreglado+1)^(0+128),w
  1164  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0D12  00D4               	movwf	ftoa@f+1
  1167  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0D15  0831               	movf	_valor_arreglado^(0+128),w
  1170  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0D18  00D3               	movwf	ftoa@f
  1173  0D19  3000               	movlw	0
  1174  0D1A  00D7               	movwf	ftoa@status
  1175  0D1B  3000               	movlw	0
  1176  0D1C  00D8               	movwf	ftoa@status+1
  1177  0D1D  120A  158A  23EE  120A  158A  	fcall	_ftoa
  1178  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0D24  00E3               	movwf	??_main
  1181  0D25  0863               	movf	??_main,w
  1182  0D26  00E8               	movwf	_buffer
  1183  0D27                     l2656:
  1184                           
  1185                           ;main.c: 97:     I2C_Master_Write(0x1C);
  1186  0D27  0868               	movf	_buffer,w
  1187  0D28  00A0               	movwf	UARTSendString@str
  1188  0D29  3000               	movlw	0
  1189  0D2A  00A1               	movwf	UARTSendString@str+1
  1190  0D2B  3006               	movlw	6
  1191  0D2C  00E3               	movwf	??_main
  1192  0D2D  0863               	movf	??_main,w
  1193  0D2E  00A2               	movwf	UARTSendString@max_length
  1194  0D2F  120A  158A  210F  120A  158A  	fcall	_UARTSendString
  1195  0D34                     l2658:
  1196                           
  1197                           ;main.c: 99:     I2C_Master_Stop();
  1198  0D34  3004               	movlw	4
  1199  0D35  3EB1               	addlw	(low (_valor_arreglado| 0))& (0+255)
  1200  0D36  0084               	movwf	4
  1201  0D37  1383               	bcf	3,7	;select IRP bank1
  1202  0D38  0800               	movf	0,w
  1203  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0D3B  00D3               	movwf	ftoa@f
  1206  0D3C  0A84               	incf	4,f
  1207  0D3D  0800               	movf	0,w
  1208  0D3E  00D4               	movwf	ftoa@f+1
  1209  0D3F  0A84               	incf	4,f
  1210  0D40  0800               	movf	0,w
  1211  0D41  00D5               	movwf	ftoa@f+2
  1212  0D42  0A84               	incf	4,f
  1213  0D43  0800               	movf	0,w
  1214  0D44  00D6               	movwf	ftoa@f+3
  1215  0D45  3000               	movlw	0
  1216  0D46  00D7               	movwf	ftoa@status
  1217  0D47  3000               	movlw	0
  1218  0D48  00D8               	movwf	ftoa@status+1
  1219  0D49  120A  158A  23EE  120A  158A  	fcall	_ftoa
  1220  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0D50  00E3               	movwf	??_main
  1223  0D51  0863               	movf	??_main,w
  1224  0D52  00E8               	movwf	_buffer
  1225  0D53                     l2660:
  1226                           
  1227                           ;main.c: 100:     return;
  1228  0D53  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1229  0D54  00A0               	movwf	UARTSendString@str
  1230  0D55  3080               	movlw	128
  1231  0D56  00A1               	movwf	UARTSendString@str+1
  1232  0D57  300A               	movlw	10
  1233  0D58  00E3               	movwf	??_main
  1234  0D59  0863               	movf	??_main,w
  1235  0D5A  00A2               	movwf	UARTSendString@max_length
  1236  0D5B  120A  158A  210F  120A  158A  	fcall	_UARTSendString
  1237  0D60                     l2662:
  1238                           
  1239                           ;main.c: 101: }
  1240  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0D62  0868               	movf	_buffer,w
  1243  0D63  00A0               	movwf	UARTSendString@str
  1244  0D64  3000               	movlw	0
  1245  0D65  00A1               	movwf	UARTSendString@str+1
  1246  0D66  3006               	movlw	6
  1247  0D67  00E3               	movwf	??_main
  1248  0D68  0863               	movf	??_main,w
  1249  0D69  00A2               	movwf	UARTSendString@max_length
  1250  0D6A  120A  158A  210F  120A  158A  	fcall	_UARTSendString
  1251  0D6F                     l2664:
  1252                           
  1253                           ;main.c: 103: void I2C_Read_MPU(float* data_send) {
  1254  0D6F  3008               	movlw	8
  1255  0D70  3EB1               	addlw	(low (_valor_arreglado| 0))& (0+255)
  1256  0D71  0084               	movwf	4
  1257  0D72  1383               	bcf	3,7	;select IRP bank1
  1258  0D73  0800               	movf	0,w
  1259  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0D76  00D3               	movwf	ftoa@f
  1262  0D77  0A84               	incf	4,f
  1263  0D78  0800               	movf	0,w
  1264  0D79  00D4               	movwf	ftoa@f+1
  1265  0D7A  0A84               	incf	4,f
  1266  0D7B  0800               	movf	0,w
  1267  0D7C  00D5               	movwf	ftoa@f+2
  1268  0D7D  0A84               	incf	4,f
  1269  0D7E  0800               	movf	0,w
  1270  0D7F  00D6               	movwf	ftoa@f+3
  1271  0D80  3000               	movlw	0
  1272  0D81  00D7               	movwf	ftoa@status
  1273  0D82  3000               	movlw	0
  1274  0D83  00D8               	movwf	ftoa@status+1
  1275  0D84  120A  158A  23EE  120A  158A  	fcall	_ftoa
  1276  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0D8B  00E3               	movwf	??_main
  1279  0D8C  0863               	movf	??_main,w
  1280  0D8D  00E8               	movwf	_buffer
  1281  0D8E                     l2666:
  1282                           
  1283                           ;main.c: 104: 
  1284  0D8E  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1285  0D8F  00A0               	movwf	UARTSendString@str
  1286  0D90  3080               	movlw	128
  1287  0D91  00A1               	movwf	UARTSendString@str+1
  1288  0D92  300A               	movlw	10
  1289  0D93  00E3               	movwf	??_main
  1290  0D94  0863               	movf	??_main,w
  1291  0D95  00A2               	movwf	UARTSendString@max_length
  1292  0D96  120A  158A  210F  120A  158A  	fcall	_UARTSendString
  1293  0D9B                     l2668:
  1294                           
  1295                           ;main.c: 105: 
  1296  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0D9D  0868               	movf	_buffer,w
  1299  0D9E  00A0               	movwf	UARTSendString@str
  1300  0D9F  3000               	movlw	0
  1301  0DA0  00A1               	movwf	UARTSendString@str+1
  1302  0DA1  3006               	movlw	6
  1303  0DA2  00E3               	movwf	??_main
  1304  0DA3  0863               	movf	??_main,w
  1305  0DA4  00A2               	movwf	UARTSendString@max_length
  1306  0DA5  120A  158A  210F  120A  158A  	fcall	_UARTSendString
  1307  0DAA                     l2670:
  1308                           
  1309                           ;main.c: 107:     int valor_original[3];
  1310  0DAA  300A               	movlw	10
  1311  0DAB  160A  118A  2739  120A  158A  	fcall	_UARTSendChar
  1312  0DB0  2CFB               	goto	l2652
  1313  0DB1  120A  118A  280E   	ljmp	start
  1314  0DB4                     __end_of_main:
  1315                           
  1316                           	psect	text1
  1317  0BEE                     __ptext1:	
  1318 ;; *************** function _ftoa *****************
  1319 ;; Defined at:
  1320 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  f               4   51[BANK0 ] float 
  1323 ;;  status          2   55[BANK0 ] PTR int 
  1324 ;;		 -> NULL(0), RAM(512), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  l               4   62[BANK0 ] unsigned long 
  1327 ;;  rem             4   58[BANK0 ] unsigned long 
  1328 ;;  cp              1   66[BANK0 ] PTR unsigned char 
  1329 ;;		 -> ftoa@buf(17), 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      PTR unsigned char 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       6       0       0       0
  1340 ;;      Locals:         0       9       0       0       0
  1341 ;;      Temps:          0       1       0       0       0
  1342 ;;      Totals:         0      16       0       0       0
  1343 ;;Total ram usage:       16 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		___flge
  1348 ;;		___flmul
  1349 ;;		___flneg
  1350 ;;		___flsub
  1351 ;;		___fltol
  1352 ;;		___xxtofl
  1353 ;;		_sprintf
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _ftoa
  1361  0BEE                     _ftoa:
  1362  0BEE                     l2594:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1365                           
  1366  0BEE  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  1367  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0BF1  00D9               	movwf	??_ftoa
  1370  0BF2  0859               	movf	??_ftoa,w
  1371  0BF3  00E2               	movwf	ftoa@cp
  1372  0BF4                     l2596:
  1373  0BF4  0856               	movf	ftoa@f+3,w
  1374  0BF5  00A3               	movwf	___flge@ff1+3
  1375  0BF6  0855               	movf	ftoa@f+2,w
  1376  0BF7  00A2               	movwf	___flge@ff1+2
  1377  0BF8  0854               	movf	ftoa@f+1,w
  1378  0BF9  00A1               	movwf	___flge@ff1+1
  1379  0BFA  0853               	movf	ftoa@f,w
  1380  0BFB  00A0               	movwf	___flge@ff1
  1381  0BFC  3000               	movlw	0
  1382  0BFD  00A7               	movwf	___flge@ff2+3
  1383  0BFE  3000               	movlw	0
  1384  0BFF  00A6               	movwf	___flge@ff2+2
  1385  0C00  3000               	movlw	0
  1386  0C01  00A5               	movwf	___flge@ff2+1
  1387  0C02  3000               	movlw	0
  1388  0C03  00A4               	movwf	___flge@ff2
  1389  0C04  120A  158A  234A  120A  158A  	fcall	___flge
  1390  0C09  1803               	btfsc	3,0
  1391  0C0A  2C0C               	goto	u3551
  1392  0C0B  2C0D               	goto	u3550
  1393  0C0C                     u3551:
  1394  0C0C  2C31               	goto	l2604
  1395  0C0D                     u3550:
  1396  0C0D                     l2598:
  1397  0C0D  302D               	movlw	45
  1398  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0C10  00D9               	movwf	??_ftoa
  1401  0C11  0862               	movf	ftoa@cp,w
  1402  0C12  0084               	movwf	4
  1403  0C13  0859               	movf	??_ftoa,w
  1404  0C14  1383               	bcf	3,7	;select IRP bank0
  1405  0C15  0080               	movwf	0
  1406  0C16                     l2600:
  1407  0C16  3001               	movlw	1
  1408  0C17  00D9               	movwf	??_ftoa
  1409  0C18  0859               	movf	??_ftoa,w
  1410  0C19  07E2               	addwf	ftoa@cp,f
  1411  0C1A                     l2602:
  1412  0C1A  0856               	movf	ftoa@f+3,w
  1413  0C1B  00A3               	movwf	___flneg@f1+3
  1414  0C1C  0855               	movf	ftoa@f+2,w
  1415  0C1D  00A2               	movwf	___flneg@f1+2
  1416  0C1E  0854               	movf	ftoa@f+1,w
  1417  0C1F  00A1               	movwf	___flneg@f1+1
  1418  0C20  0853               	movf	ftoa@f,w
  1419  0C21  00A0               	movwf	___flneg@f1
  1420  0C22  160A  118A  275F  120A  158A  	fcall	___flneg
  1421  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0C29  0823               	movf	?___flneg+3,w
  1424  0C2A  00D6               	movwf	ftoa@f+3
  1425  0C2B  0822               	movf	?___flneg+2,w
  1426  0C2C  00D5               	movwf	ftoa@f+2
  1427  0C2D  0821               	movf	?___flneg+1,w
  1428  0C2E  00D4               	movwf	ftoa@f+1
  1429  0C2F  0820               	movf	?___flneg,w
  1430  0C30  00D3               	movwf	ftoa@f
  1431  0C31                     l2604:
  1432  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0C33  0856               	movf	ftoa@f+3,w
  1435  0C34  00CB               	movwf	___fltol@f1+3
  1436  0C35  0855               	movf	ftoa@f+2,w
  1437  0C36  00CA               	movwf	___fltol@f1+2
  1438  0C37  0854               	movf	ftoa@f+1,w
  1439  0C38  00C9               	movwf	___fltol@f1+1
  1440  0C39  0853               	movf	ftoa@f,w
  1441  0C3A  00C8               	movwf	___fltol@f1
  1442  0C3B  120A  158A  2241  120A  158A  	fcall	___fltol
  1443  0C40  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0C41  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0C42  084B               	movf	?___fltol+3,w
  1446  0C43  00E1               	movwf	ftoa@l+3
  1447  0C44  084A               	movf	?___fltol+2,w
  1448  0C45  00E0               	movwf	ftoa@l+2
  1449  0C46  0849               	movf	?___fltol+1,w
  1450  0C47  00DF               	movwf	ftoa@l+1
  1451  0C48  0848               	movf	?___fltol,w
  1452  0C49  00DE               	movwf	ftoa@l
  1453  0C4A                     l2606:
  1454  0C4A  0861               	movf	ftoa@l+3,w
  1455  0C4B  00A3               	movwf	___xxtofl@val+3
  1456  0C4C  0860               	movf	ftoa@l+2,w
  1457  0C4D  00A2               	movwf	___xxtofl@val+2
  1458  0C4E  085F               	movf	ftoa@l+1,w
  1459  0C4F  00A1               	movwf	___xxtofl@val+1
  1460  0C50  085E               	movf	ftoa@l,w
  1461  0C51  00A0               	movwf	___xxtofl@val
  1462  0C52  3000               	movlw	0
  1463  0C53  120A  118A  273C  120A  158A  	fcall	___xxtofl
  1464  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0C5A  0823               	movf	?___xxtofl+3,w
  1467  0C5B  00B7               	movwf	___flsub@a+3
  1468  0C5C  0822               	movf	?___xxtofl+2,w
  1469  0C5D  00B6               	movwf	___flsub@a+2
  1470  0C5E  0821               	movf	?___xxtofl+1,w
  1471  0C5F  00B5               	movwf	___flsub@a+1
  1472  0C60  0820               	movf	?___xxtofl,w
  1473  0C61  00B4               	movwf	___flsub@a
  1474  0C62  0856               	movf	ftoa@f+3,w
  1475  0C63  00BB               	movwf	___flsub@b+3
  1476  0C64  0855               	movf	ftoa@f+2,w
  1477  0C65  00BA               	movwf	___flsub@b+2
  1478  0C66  0854               	movf	ftoa@f+1,w
  1479  0C67  00B9               	movwf	___flsub@b+1
  1480  0C68  0853               	movf	ftoa@f,w
  1481  0C69  00B8               	movwf	___flsub@b
  1482  0C6A  160A  118A  278C  120A  158A  	fcall	___flsub
  1483  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0C71  0837               	movf	?___flsub+3,w
  1486  0C72  00D6               	movwf	ftoa@f+3
  1487  0C73  0836               	movf	?___flsub+2,w
  1488  0C74  00D5               	movwf	ftoa@f+2
  1489  0C75  0835               	movf	?___flsub+1,w
  1490  0C76  00D4               	movwf	ftoa@f+1
  1491  0C77  0834               	movf	?___flsub,w
  1492  0C78  00D3               	movwf	ftoa@f
  1493  0C79                     l2608:
  1494  0C79  0856               	movf	ftoa@f+3,w
  1495  0C7A  00B5               	movwf	___flmul@a+3
  1496  0C7B  0855               	movf	ftoa@f+2,w
  1497  0C7C  00B4               	movwf	___flmul@a+2
  1498  0C7D  0854               	movf	ftoa@f+1,w
  1499  0C7E  00B3               	movwf	___flmul@a+1
  1500  0C7F  0853               	movf	ftoa@f,w
  1501  0C80  00B2               	movwf	___flmul@a
  1502  0C81  3049               	movlw	73
  1503  0C82  00B1               	movwf	___flmul@b+3
  1504  0C83  3074               	movlw	116
  1505  0C84  00B0               	movwf	___flmul@b+2
  1506  0C85  3024               	movlw	36
  1507  0C86  00AF               	movwf	___flmul@b+1
  1508  0C87  3000               	movlw	0
  1509  0C88  00AE               	movwf	___flmul@b
  1510  0C89  120A  118A  2023  120A  158A  	fcall	___flmul
  1511  0C8E  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0C8F  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0C90  0831               	movf	?___flmul+3,w
  1514  0C91  00CB               	movwf	___fltol@f1+3
  1515  0C92  0830               	movf	?___flmul+2,w
  1516  0C93  00CA               	movwf	___fltol@f1+2
  1517  0C94  082F               	movf	?___flmul+1,w
  1518  0C95  00C9               	movwf	___fltol@f1+1
  1519  0C96  082E               	movf	?___flmul,w
  1520  0C97  00C8               	movwf	___fltol@f1
  1521  0C98  120A  158A  2241  120A  158A  	fcall	___fltol
  1522  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0C9F  084B               	movf	?___fltol+3,w
  1525  0CA0  00DD               	movwf	ftoa@rem+3
  1526  0CA1  084A               	movf	?___fltol+2,w
  1527  0CA2  00DC               	movwf	ftoa@rem+2
  1528  0CA3  0849               	movf	?___fltol+1,w
  1529  0CA4  00DB               	movwf	ftoa@rem+1
  1530  0CA5  0848               	movf	?___fltol,w
  1531  0CA6  00DA               	movwf	ftoa@rem
  1532  0CA7                     l2610:
  1533  0CA7  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1534  0CA8  00D9               	movwf	??_ftoa
  1535  0CA9  0859               	movf	??_ftoa,w
  1536  0CAA  00B6               	movwf	sprintf@f
  1537  0CAB  0861               	movf	ftoa@l+3,w
  1538  0CAC  00BA               	movwf	?_sprintf+4
  1539  0CAD  0860               	movf	ftoa@l+2,w
  1540  0CAE  00B9               	movwf	?_sprintf+3
  1541  0CAF  085F               	movf	ftoa@l+1,w
  1542  0CB0  00B8               	movwf	?_sprintf+2
  1543  0CB1  085E               	movf	ftoa@l,w
  1544  0CB2  00B7               	movwf	?_sprintf+1
  1545  0CB3  085D               	movf	ftoa@rem+3,w
  1546  0CB4  00BE               	movwf	?_sprintf+8
  1547  0CB5  085C               	movf	ftoa@rem+2,w
  1548  0CB6  00BD               	movwf	?_sprintf+7
  1549  0CB7  085B               	movf	ftoa@rem+1,w
  1550  0CB8  00BC               	movwf	?_sprintf+6
  1551  0CB9  085A               	movf	ftoa@rem,w
  1552  0CBA  00BB               	movwf	?_sprintf+5
  1553  0CBB  0862               	movf	ftoa@cp,w
  1554  0CBC  120A  158A  25B4  120A  158A  	fcall	_sprintf
  1555  0CC1                     l2612:
  1556  0CC1  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  1557  0CC2                     l767:
  1558  0CC2  0008               	return
  1559  0CC3                     __end_of_ftoa:
  1560                           
  1561                           	psect	text2
  1562  0DB4                     __ptext2:	
  1563 ;; *************** function _sprintf *****************
  1564 ;; Defined at:
  1565 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  sp              1    wreg     PTR unsigned char 
  1568 ;;		 -> ftoa@buf(17), 
  1569 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1570 ;;		 -> STR_3(11), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  sp              1   42[BANK0 ] PTR unsigned char 
  1573 ;;		 -> ftoa@buf(17), 
  1574 ;;  val             4   38[BANK0 ] unsigned long 
  1575 ;;  tmpval          4    0        struct .
  1576 ;;  prec            2   45[BANK0 ] int 
  1577 ;;  width           2   43[BANK0 ] int 
  1578 ;;  cp              2    0        PTR const unsigned char 
  1579 ;;  len             2    0        unsigned int 
  1580 ;;  c               1   47[BANK0 ] unsigned char 
  1581 ;;  ap              1   37[BANK0 ] PTR void [1]
  1582 ;;		 -> ?_sprintf(2), 
  1583 ;;  flag            1   36[BANK0 ] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  2   22[BANK0 ] int 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1593 ;;      Params:         0       9       0       0       0
  1594 ;;      Locals:         0      12       0       0       0
  1595 ;;      Temps:          0       5       0       0       0
  1596 ;;      Totals:         0      26       0       0       0
  1597 ;;Total ram usage:       26 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:    2
  1600 ;; This function calls:
  1601 ;;		___lldiv
  1602 ;;		___llmod
  1603 ;;		___wmul
  1604 ;;		_isdigit
  1605 ;; This function is called by:
  1606 ;;		_ftoa
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _sprintf
  1612  0DB4                     _sprintf:
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1616                           ;sprintf@sp stored from wreg
  1617  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0DB6  00CA               	movwf	sprintf@sp
  1620  0DB7                     l2408:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1623  0DB7  3037               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1624  0DB8  00BF               	movwf	??_sprintf
  1625  0DB9  083F               	movf	??_sprintf,w
  1626  0DBA  00C5               	movwf	sprintf@ap
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1629  0DBB  2FE9               	goto	l2506
  1630  0DBC                     l2410:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1633  0DBC  3025               	movlw	37
  1634  0DBD  064F               	xorwf	sprintf@c,w
  1635  0DBE  1903               	btfsc	3,2
  1636  0DBF  2DC1               	goto	u3301
  1637  0DC0  2DC2               	goto	u3300
  1638  0DC1                     u3301:
  1639  0DC1  2DCE               	goto	l2416
  1640  0DC2                     u3300:
  1641  0DC2                     l2412:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1644  0DC2  084F               	movf	sprintf@c,w
  1645  0DC3  00BF               	movwf	??_sprintf
  1646  0DC4  084A               	movf	sprintf@sp,w
  1647  0DC5  0084               	movwf	4
  1648  0DC6  083F               	movf	??_sprintf,w
  1649  0DC7  1383               	bcf	3,7	;select IRP bank0
  1650  0DC8  0080               	movwf	0
  1651  0DC9                     l2414:
  1652  0DC9  3001               	movlw	1
  1653  0DCA  00BF               	movwf	??_sprintf
  1654  0DCB  083F               	movf	??_sprintf,w
  1655  0DCC  07CA               	addwf	sprintf@sp,f
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1658  0DCD  2FE9               	goto	l2506
  1659  0DCE                     l2416:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1662  0DCE  01CB               	clrf	sprintf@width
  1663  0DCF  01CC               	clrf	sprintf@width+1
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1666  0DD0  01C4               	clrf	sprintf@flag
  1667  0DD1                     l2418:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1670  0DD1  0836               	movf	sprintf@f,w
  1671  0DD2  0084               	movwf	4
  1672  0DD3  120A  158A  200A  120A  158A  	fcall	stringdir
  1673  0DD8  120A  158A  2047  120A  158A  	fcall	_isdigit
  1674  0DDD  1C03               	btfss	3,0
  1675  0DDE  2DE0               	goto	u3311
  1676  0DDF  2DE1               	goto	u3310
  1677  0DE0                     u3311:
  1678  0DE0  2E21               	goto	l2430
  1679  0DE1                     u3310:
  1680  0DE1                     l2420:
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1683  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0DE3  01CB               	clrf	sprintf@width
  1686  0DE4  01CC               	clrf	sprintf@width+1
  1687  0DE5                     l2422:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1690  0DE5  300A               	movlw	10
  1691  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0DE8  00A0               	movwf	___wmul@multiplier
  1694  0DE9  3000               	movlw	0
  1695  0DEA  00A1               	movwf	___wmul@multiplier+1
  1696  0DEB  084C               	movf	sprintf@width+1,w
  1697  0DEC  00A3               	movwf	___wmul@multiplicand+1
  1698  0DED  084B               	movf	sprintf@width,w
  1699  0DEE  00A2               	movwf	___wmul@multiplicand
  1700  0DEF  160A  118A  27B0  120A  158A  	fcall	___wmul
  1701  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0DF6  0821               	movf	?___wmul+1,w
  1704  0DF7  00CC               	movwf	sprintf@width+1
  1705  0DF8  0820               	movf	?___wmul,w
  1706  0DF9  00CB               	movwf	sprintf@width
  1707  0DFA                     l2424:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1710  0DFA  0836               	movf	sprintf@f,w
  1711  0DFB  0084               	movwf	4
  1712  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  1713  0E01  3ED0               	addlw	208
  1714  0E02  00BF               	movwf	??_sprintf
  1715  0E03  30FF               	movlw	255
  1716  0E04  1803               	skipnc
  1717  0E05  3000               	movlw	0
  1718  0E06  00C0               	movwf	??_sprintf+1
  1719  0E07  083F               	movf	??_sprintf,w
  1720  0E08  07CB               	addwf	sprintf@width,f
  1721  0E09  1803               	skipnc
  1722  0E0A  0ACC               	incf	sprintf@width+1,f
  1723  0E0B  0840               	movf	??_sprintf+1,w
  1724  0E0C  07CC               	addwf	sprintf@width+1,f
  1725  0E0D                     l2426:
  1726  0E0D  3001               	movlw	1
  1727  0E0E  00BF               	movwf	??_sprintf
  1728  0E0F  083F               	movf	??_sprintf,w
  1729  0E10  07B6               	addwf	sprintf@f,f
  1730  0E11                     l2428:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1733  0E11  0836               	movf	sprintf@f,w
  1734  0E12  0084               	movwf	4
  1735  0E13  120A  158A  200A  120A  158A  	fcall	stringdir
  1736  0E18  120A  158A  2047  120A  158A  	fcall	_isdigit
  1737  0E1D  1803               	btfsc	3,0
  1738  0E1E  2E20               	goto	u3321
  1739  0E1F  2E21               	goto	u3320
  1740  0E20                     u3321:
  1741  0E20  2DE5               	goto	l2422
  1742  0E21                     u3320:
  1743  0E21                     l2430:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1746  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0E23  0836               	movf	sprintf@f,w
  1749  0E24  0084               	movwf	4
  1750  0E25  120A  158A  200A  120A  158A  	fcall	stringdir
  1751  0E2A  3A2E               	xorlw	46
  1752  0E2B  1D03               	skipz
  1753  0E2C  2E2E               	goto	u3331
  1754  0E2D  2E2F               	goto	u3330
  1755  0E2E                     u3331:
  1756  0E2E  2E73               	goto	l2444
  1757  0E2F                     u3330:
  1758  0E2F                     l2432:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1761  0E2F  3001               	movlw	1
  1762  0E30  00BF               	movwf	??_sprintf
  1763  0E31  083F               	movf	??_sprintf,w
  1764  0E32  07B6               	addwf	sprintf@f,f
  1765  0E33                     l2434:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1768  0E33  01CD               	clrf	sprintf@prec
  1769  0E34  01CE               	clrf	sprintf@prec+1
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1772  0E35  2E62               	goto	l2442
  1773  0E36                     l2436:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1776  0E36  300A               	movlw	10
  1777  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0E39  00A0               	movwf	___wmul@multiplier
  1780  0E3A  3000               	movlw	0
  1781  0E3B  00A1               	movwf	___wmul@multiplier+1
  1782  0E3C  084E               	movf	sprintf@prec+1,w
  1783  0E3D  00A3               	movwf	___wmul@multiplicand+1
  1784  0E3E  084D               	movf	sprintf@prec,w
  1785  0E3F  00A2               	movwf	___wmul@multiplicand
  1786  0E40  160A  118A  27B0  120A  158A  	fcall	___wmul
  1787  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0E47  0821               	movf	?___wmul+1,w
  1790  0E48  00CE               	movwf	sprintf@prec+1
  1791  0E49  0820               	movf	?___wmul,w
  1792  0E4A  00CD               	movwf	sprintf@prec
  1793  0E4B                     l2438:
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1796  0E4B  0836               	movf	sprintf@f,w
  1797  0E4C  0084               	movwf	4
  1798  0E4D  120A  158A  200A  120A  158A  	fcall	stringdir
  1799  0E52  3ED0               	addlw	208
  1800  0E53  00BF               	movwf	??_sprintf
  1801  0E54  30FF               	movlw	255
  1802  0E55  1803               	skipnc
  1803  0E56  3000               	movlw	0
  1804  0E57  00C0               	movwf	??_sprintf+1
  1805  0E58  083F               	movf	??_sprintf,w
  1806  0E59  07CD               	addwf	sprintf@prec,f
  1807  0E5A  1803               	skipnc
  1808  0E5B  0ACE               	incf	sprintf@prec+1,f
  1809  0E5C  0840               	movf	??_sprintf+1,w
  1810  0E5D  07CE               	addwf	sprintf@prec+1,f
  1811  0E5E                     l2440:
  1812  0E5E  3001               	movlw	1
  1813  0E5F  00BF               	movwf	??_sprintf
  1814  0E60  083F               	movf	??_sprintf,w
  1815  0E61  07B6               	addwf	sprintf@f,f
  1816  0E62                     l2442:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1819  0E62  0836               	movf	sprintf@f,w
  1820  0E63  0084               	movwf	4
  1821  0E64  120A  158A  200A  120A  158A  	fcall	stringdir
  1822  0E69  120A  158A  2047  120A  158A  	fcall	_isdigit
  1823  0E6E  1803               	btfsc	3,0
  1824  0E6F  2E71               	goto	u3341
  1825  0E70  2E72               	goto	u3340
  1826  0E71                     u3341:
  1827  0E71  2E36               	goto	l2436
  1828  0E72                     u3340:
  1829  0E72  2E7D               	goto	l2450
  1830  0E73                     l2444:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1833  0E73  01CD               	clrf	sprintf@prec
  1834  0E74  01CE               	clrf	sprintf@prec+1
  1835  0E75  2E7D               	goto	l2450
  1836  0E76                     l793:	
  1837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  1838                           
  1839                           
  1840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  1841  0E76  1644               	bsf	sprintf@flag,4
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  1844  0E77  2E7D               	goto	l2450
  1845  0E78                     l2446:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1848  0E78  30C0               	movlw	192
  1849  0E79  00BF               	movwf	??_sprintf
  1850  0E7A  083F               	movf	??_sprintf,w
  1851  0E7B  04C4               	iorwf	sprintf@flag,f
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  1854  0E7C  2E9C               	goto	l796
  1855  0E7D                     l2450:
  1856  0E7D  3001               	movlw	1
  1857  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0E80  07B6               	addwf	sprintf@f,f
  1860  0E81  30FF               	movlw	-1
  1861  0E82  0736               	addwf	sprintf@f,w
  1862  0E83  0084               	movwf	4
  1863  0E84  120A  158A  200A  120A  158A  	fcall	stringdir
  1864  0E89  00CF               	movwf	sprintf@c
  1865  0E8A  00BF               	movwf	??_sprintf
  1866  0E8B  01C0               	clrf	??_sprintf+1
  1867                           
  1868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1869                           ; Switch size 1, requested type "simple"
  1870                           ; Number of cases is 1, Range of values is 0 to 0
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte            4     3 (average)
  1874                           ; direct_byte           11     8 (fixed)
  1875                           ; jumptable            260     6 (fixed)
  1876                           ;	Chosen strategy is simple_byte
  1877  0E8C  0840               	movf	??_sprintf+1,w
  1878  0E8D  3A00               	xorlw	0	; case 0
  1879  0E8E  1903               	skipnz
  1880  0E8F  2E91               	goto	l2722
  1881  0E90  2FE9               	goto	l2506
  1882  0E91                     l2722:
  1883                           
  1884                           ; Switch size 1, requested type "simple"
  1885                           ; Number of cases is 3, Range of values is 0 to 117
  1886                           ; switch strategies available:
  1887                           ; Name         Instructions Cycles
  1888                           ; simple_byte           10     6 (average)
  1889                           ; jumptable            260     6 (fixed)
  1890                           ;	Chosen strategy is simple_byte
  1891  0E91  083F               	movf	??_sprintf,w
  1892  0E92  3A00               	xorlw	0	; case 0
  1893  0E93  1903               	skipnz
  1894  0E94  2FFB               	goto	l2508
  1895  0E95  3A6C               	xorlw	108	; case 108
  1896  0E96  1903               	skipnz
  1897  0E97  2E76               	goto	l793
  1898  0E98  3A19               	xorlw	25	; case 117
  1899  0E99  1903               	skipnz
  1900  0E9A  2E78               	goto	l2446
  1901  0E9B  2FE9               	goto	l2506
  1902  0E9C                     l796:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  1905  0E9C  1E44               	btfss	sprintf@flag,4
  1906  0E9D  2E9F               	goto	u3351
  1907  0E9E  2EA0               	goto	u3350
  1908  0E9F                     u3351:
  1909  0E9F  2EB3               	goto	l2456
  1910  0EA0                     u3350:
  1911  0EA0                     l2452:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  1914  0EA0  0845               	movf	sprintf@ap,w
  1915  0EA1  0084               	movwf	4
  1916  0EA2  1383               	bcf	3,7	;select IRP bank0
  1917  0EA3  0800               	movf	0,w
  1918  0EA4  00C6               	movwf	sprintf@val
  1919  0EA5  0A84               	incf	4,f
  1920  0EA6  0800               	movf	0,w
  1921  0EA7  00C7               	movwf	sprintf@val+1
  1922  0EA8  0A84               	incf	4,f
  1923  0EA9  0800               	movf	0,w
  1924  0EAA  00C8               	movwf	sprintf@val+2
  1925  0EAB  0A84               	incf	4,f
  1926  0EAC  0800               	movf	0,w
  1927  0EAD  00C9               	movwf	sprintf@val+3
  1928  0EAE                     l2454:
  1929  0EAE  3004               	movlw	4
  1930  0EAF  00BF               	movwf	??_sprintf
  1931  0EB0  083F               	movf	??_sprintf,w
  1932  0EB1  07C5               	addwf	sprintf@ap,f
  1933  0EB2  2EC5               	goto	l2460
  1934  0EB3                     l2456:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1937  0EB3  0845               	movf	sprintf@ap,w
  1938  0EB4  0084               	movwf	4
  1939  0EB5  1383               	bcf	3,7	;select IRP bank0
  1940  0EB6  0800               	movf	0,w
  1941  0EB7  00BF               	movwf	??_sprintf
  1942  0EB8  0A84               	incf	4,f
  1943  0EB9  0800               	movf	0,w
  1944  0EBA  00C0               	movwf	??_sprintf+1
  1945  0EBB  083F               	movf	??_sprintf,w
  1946  0EBC  00C6               	movwf	sprintf@val
  1947  0EBD  0840               	movf	??_sprintf+1,w
  1948  0EBE  00C7               	movwf	sprintf@val+1
  1949  0EBF  01C8               	clrf	sprintf@val+2
  1950  0EC0  01C9               	clrf	sprintf@val+3
  1951  0EC1                     l2458:
  1952  0EC1  3002               	movlw	2
  1953  0EC2  00BF               	movwf	??_sprintf
  1954  0EC3  083F               	movf	??_sprintf,w
  1955  0EC4  07C5               	addwf	sprintf@ap,f
  1956  0EC5                     l2460:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1959  0EC5  084D               	movf	sprintf@prec,w
  1960  0EC6  044E               	iorwf	sprintf@prec+1,w
  1961  0EC7  1D03               	btfss	3,2
  1962  0EC8  2ECA               	goto	u3361
  1963  0EC9  2ECB               	goto	u3360
  1964  0ECA                     u3361:
  1965  0ECA  2ED9               	goto	l2466
  1966  0ECB                     u3360:
  1967  0ECB                     l2462:
  1968  0ECB  0849               	movf	sprintf@val+3,w
  1969  0ECC  0448               	iorwf	sprintf@val+2,w
  1970  0ECD  0447               	iorwf	sprintf@val+1,w
  1971  0ECE  0446               	iorwf	sprintf@val,w
  1972  0ECF  1D03               	skipz
  1973  0ED0  2ED2               	goto	u3371
  1974  0ED1  2ED3               	goto	u3370
  1975  0ED2                     u3371:
  1976  0ED2  2ED9               	goto	l2466
  1977  0ED3                     u3370:
  1978  0ED3                     l2464:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1981  0ED3  3001               	movlw	1
  1982  0ED4  07CD               	addwf	sprintf@prec,f
  1983  0ED5  1803               	skipnc
  1984  0ED6  0ACE               	incf	sprintf@prec+1,f
  1985  0ED7  3000               	movlw	0
  1986  0ED8  07CE               	addwf	sprintf@prec+1,f
  1987  0ED9                     l2466:
  1988                           
  1989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1990  0ED9  01CF               	clrf	sprintf@c
  1991  0EDA  0ACF               	incf	sprintf@c,f
  1992  0EDB                     l2472:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1995  0EDB  084F               	movf	sprintf@c,w
  1996  0EDC  00BF               	movwf	??_sprintf
  1997  0EDD  3001               	movlw	1
  1998  0EDE                     u3385:
  1999  0EDE  1003               	clrc
  2000  0EDF  0DBF               	rlf	??_sprintf,f
  2001  0EE0  3EFF               	addlw	-1
  2002  0EE1  1D03               	skipz
  2003  0EE2  2EDE               	goto	u3385
  2004  0EE3  1003               	clrc
  2005  0EE4  0D3F               	rlf	??_sprintf,w
  2006  0EE5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2007  0EE6  0084               	movwf	4
  2008  0EE7  120A  158A  200A  120A  158A  	fcall	stringdir
  2009  0EEC  00C0               	movwf	??_sprintf+1
  2010  0EED  120A  158A  200A  120A  158A  	fcall	stringdir
  2011  0EF2  00C1               	movwf	??_sprintf+2
  2012  0EF3  120A  158A  200A  120A  158A  	fcall	stringdir
  2013  0EF8  00C2               	movwf	??_sprintf+3
  2014  0EF9  120A  158A  200A  120A  158A  	fcall	stringdir
  2015  0EFE  00C3               	movwf	??_sprintf+4
  2016  0EFF  0843               	movf	??_sprintf+4,w
  2017  0F00  0249               	subwf	sprintf@val+3,w
  2018  0F01  1D03               	skipz
  2019  0F02  2F0D               	goto	u3395
  2020  0F03  0842               	movf	??_sprintf+3,w
  2021  0F04  0248               	subwf	sprintf@val+2,w
  2022  0F05  1D03               	skipz
  2023  0F06  2F0D               	goto	u3395
  2024  0F07  0841               	movf	??_sprintf+2,w
  2025  0F08  0247               	subwf	sprintf@val+1,w
  2026  0F09  1D03               	skipz
  2027  0F0A  2F0D               	goto	u3395
  2028  0F0B  0840               	movf	??_sprintf+1,w
  2029  0F0C  0246               	subwf	sprintf@val,w
  2030  0F0D                     u3395:
  2031  0F0D  1803               	skipnc
  2032  0F0E  2F10               	goto	u3391
  2033  0F0F  2F11               	goto	u3390
  2034  0F10                     u3391:
  2035  0F10  2F12               	goto	l2476
  2036  0F11                     u3390:
  2037  0F11  2F1C               	goto	l2478
  2038  0F12                     l2476:
  2039  0F12  3001               	movlw	1
  2040  0F13  00BF               	movwf	??_sprintf
  2041  0F14  083F               	movf	??_sprintf,w
  2042  0F15  07CF               	addwf	sprintf@c,f
  2043  0F16  300A               	movlw	10
  2044  0F17  064F               	xorwf	sprintf@c,w
  2045  0F18  1D03               	btfss	3,2
  2046  0F19  2F1B               	goto	u3401
  2047  0F1A  2F1C               	goto	u3400
  2048  0F1B                     u3401:
  2049  0F1B  2EDB               	goto	l2472
  2050  0F1C                     u3400:
  2051  0F1C                     l2478:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2054  0F1C  084E               	movf	sprintf@prec+1,w
  2055  0F1D  3A80               	xorlw	128
  2056  0F1E  3C80               	sublw	128
  2057  0F1F  1D03               	skipz
  2058  0F20  2F23               	goto	u3415
  2059  0F21  084D               	movf	sprintf@prec,w
  2060  0F22  024F               	subwf	sprintf@c,w
  2061  0F23                     u3415:
  2062  0F23  1803               	skipnc
  2063  0F24  2F26               	goto	u3411
  2064  0F25  2F27               	goto	u3410
  2065  0F26                     u3411:
  2066  0F26  2F2E               	goto	l2482
  2067  0F27                     u3410:
  2068  0F27                     l2480:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  2071  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0F29  084D               	movf	sprintf@prec,w
  2074  0F2A  00BF               	movwf	??_sprintf
  2075  0F2B  083F               	movf	??_sprintf,w
  2076  0F2C  00CF               	movwf	sprintf@c
  2077  0F2D  2F46               	goto	l804
  2078  0F2E                     l2482:
  2079  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0F30  084E               	movf	sprintf@prec+1,w
  2082  0F31  3A80               	xorlw	128
  2083  0F32  00BF               	movwf	??_sprintf
  2084  0F33  3080               	movlw	128
  2085  0F34  023F               	subwf	??_sprintf,w
  2086  0F35  1D03               	skipz
  2087  0F36  2F39               	goto	u3425
  2088  0F37  084F               	movf	sprintf@c,w
  2089  0F38  024D               	subwf	sprintf@prec,w
  2090  0F39                     u3425:
  2091  0F39  1803               	skipnc
  2092  0F3A  2F3C               	goto	u3421
  2093  0F3B  2F3D               	goto	u3420
  2094  0F3C                     u3421:
  2095  0F3C  2F46               	goto	l804
  2096  0F3D                     u3420:
  2097  0F3D                     l2484:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2100  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0F3F  084F               	movf	sprintf@c,w
  2103  0F40  00BF               	movwf	??_sprintf
  2104  0F41  01C0               	clrf	??_sprintf+1
  2105  0F42  083F               	movf	??_sprintf,w
  2106  0F43  00CD               	movwf	sprintf@prec
  2107  0F44  0840               	movf	??_sprintf+1,w
  2108  0F45  00CE               	movwf	sprintf@prec+1
  2109  0F46                     l804:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2112  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0F48  084C               	movf	sprintf@width+1,w
  2115  0F49  3A80               	xorlw	128
  2116  0F4A  3C80               	sublw	128
  2117  0F4B  1D03               	skipz
  2118  0F4C  2F4F               	goto	u3435
  2119  0F4D  084B               	movf	sprintf@width,w
  2120  0F4E  024F               	subwf	sprintf@c,w
  2121  0F4F                     u3435:
  2122  0F4F  1803               	skipnc
  2123  0F50  2F52               	goto	u3431
  2124  0F51  2F53               	goto	u3430
  2125  0F52                     u3431:
  2126  0F52  2F5F               	goto	l2488
  2127  0F53                     u3430:
  2128  0F53                     l2486:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2131  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0F55  084F               	movf	sprintf@c,w
  2134  0F56  00BF               	movwf	??_sprintf
  2135  0F57  01C0               	clrf	??_sprintf+1
  2136  0F58  083F               	movf	??_sprintf,w
  2137  0F59  02CB               	subwf	sprintf@width,f
  2138  0F5A  0840               	movf	??_sprintf+1,w
  2139  0F5B  1C03               	skipc
  2140  0F5C  03CC               	decf	sprintf@width+1,f
  2141  0F5D  02CC               	subwf	sprintf@width+1,f
  2142  0F5E  2F63               	goto	l2490
  2143  0F5F                     l2488:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2146  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0F61  01CB               	clrf	sprintf@width
  2149  0F62  01CC               	clrf	sprintf@width+1
  2150  0F63                     l2490:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2153  0F63  084B               	movf	sprintf@width,w
  2154  0F64  044C               	iorwf	sprintf@width+1,w
  2155  0F65  1903               	btfsc	3,2
  2156  0F66  2F68               	goto	u3441
  2157  0F67  2F69               	goto	u3440
  2158  0F68                     u3441:
  2159  0F68  2FDB               	goto	l2504
  2160  0F69                     u3440:
  2161  0F69                     l2492:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2164  0F69  3020               	movlw	32
  2165  0F6A  00BF               	movwf	??_sprintf
  2166  0F6B  084A               	movf	sprintf@sp,w
  2167  0F6C  0084               	movwf	4
  2168  0F6D  083F               	movf	??_sprintf,w
  2169  0F6E  1383               	bcf	3,7	;select IRP bank0
  2170  0F6F  0080               	movwf	0
  2171  0F70                     l2494:
  2172  0F70  3001               	movlw	1
  2173  0F71  00BF               	movwf	??_sprintf
  2174  0F72  083F               	movf	??_sprintf,w
  2175  0F73  07CA               	addwf	sprintf@sp,f
  2176  0F74                     l2496:
  2177  0F74  30FF               	movlw	255
  2178  0F75  07CB               	addwf	sprintf@width,f
  2179  0F76  1803               	skipnc
  2180  0F77  0ACC               	incf	sprintf@width+1,f
  2181  0F78  30FF               	movlw	255
  2182  0F79  07CC               	addwf	sprintf@width+1,f
  2183  0F7A  084B               	movf	sprintf@width,w
  2184  0F7B  044C               	iorwf	sprintf@width+1,w
  2185  0F7C  1D03               	btfss	3,2
  2186  0F7D  2F7F               	goto	u3451
  2187  0F7E  2F80               	goto	u3450
  2188  0F7F                     u3451:
  2189  0F7F  2F69               	goto	l2492
  2190  0F80                     u3450:
  2191  0F80  2FDB               	goto	l2504
  2192  0F81                     l2498:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  2195  0F81  3000               	movlw	0
  2196  0F82  00B0               	movwf	___llmod@divisor+3
  2197  0F83  3000               	movlw	0
  2198  0F84  00AF               	movwf	___llmod@divisor+2
  2199  0F85  3000               	movlw	0
  2200  0F86  00AE               	movwf	___llmod@divisor+1
  2201  0F87  300A               	movlw	10
  2202  0F88  00AD               	movwf	___llmod@divisor
  2203  0F89  084D               	movf	sprintf@prec,w
  2204  0F8A  00BF               	movwf	??_sprintf
  2205  0F8B  3001               	movlw	1
  2206  0F8C                     u3465:
  2207  0F8C  1003               	clrc
  2208  0F8D  0DBF               	rlf	??_sprintf,f
  2209  0F8E  3EFF               	addlw	-1
  2210  0F8F  1D03               	skipz
  2211  0F90  2F8C               	goto	u3465
  2212  0F91  1003               	clrc
  2213  0F92  0D3F               	rlf	??_sprintf,w
  2214  0F93  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2215  0F94  0084               	movwf	4
  2216  0F95  120A  158A  200A  120A  158A  	fcall	stringdir
  2217  0F9A  00A0               	movwf	___lldiv@divisor
  2218  0F9B  120A  158A  200A  120A  158A  	fcall	stringdir
  2219  0FA0  00A1               	movwf	___lldiv@divisor+1
  2220  0FA1  120A  158A  200A  120A  158A  	fcall	stringdir
  2221  0FA6  00A2               	movwf	___lldiv@divisor+2
  2222  0FA7  120A  158A  200A  120A  158A  	fcall	stringdir
  2223  0FAC  00A3               	movwf	___lldiv@divisor+3
  2224  0FAD  0849               	movf	sprintf@val+3,w
  2225  0FAE  00A7               	movwf	___lldiv@dividend+3
  2226  0FAF  0848               	movf	sprintf@val+2,w
  2227  0FB0  00A6               	movwf	___lldiv@dividend+2
  2228  0FB1  0847               	movf	sprintf@val+1,w
  2229  0FB2  00A5               	movwf	___lldiv@dividend+1
  2230  0FB3  0846               	movf	sprintf@val,w
  2231  0FB4  00A4               	movwf	___lldiv@dividend
  2232  0FB5  120A  158A  2166  120A  158A  	fcall	___lldiv
  2233  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0FBC  0823               	movf	?___lldiv+3,w
  2236  0FBD  00B4               	movwf	___llmod@dividend+3
  2237  0FBE  0822               	movf	?___lldiv+2,w
  2238  0FBF  00B3               	movwf	___llmod@dividend+2
  2239  0FC0  0821               	movf	?___lldiv+1,w
  2240  0FC1  00B2               	movwf	___llmod@dividend+1
  2241  0FC2  0820               	movf	?___lldiv,w
  2242  0FC3  00B1               	movwf	___llmod@dividend
  2243  0FC4  120A  158A  20B9  120A  158A  	fcall	___llmod
  2244  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0FCB  082D               	movf	?___llmod,w
  2247  0FCC  3E30               	addlw	48
  2248  0FCD  00C0               	movwf	??_sprintf+1
  2249  0FCE  0840               	movf	??_sprintf+1,w
  2250  0FCF  00CF               	movwf	sprintf@c
  2251  0FD0                     l2500:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2254  0FD0  084F               	movf	sprintf@c,w
  2255  0FD1  00BF               	movwf	??_sprintf
  2256  0FD2  084A               	movf	sprintf@sp,w
  2257  0FD3  0084               	movwf	4
  2258  0FD4  083F               	movf	??_sprintf,w
  2259  0FD5  1383               	bcf	3,7	;select IRP bank0
  2260  0FD6  0080               	movwf	0
  2261  0FD7                     l2502:
  2262  0FD7  3001               	movlw	1
  2263  0FD8  00BF               	movwf	??_sprintf
  2264  0FD9  083F               	movf	??_sprintf,w
  2265  0FDA  07CA               	addwf	sprintf@sp,f
  2266  0FDB                     l2504:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2269  0FDB  30FF               	movlw	255
  2270  0FDC  07CD               	addwf	sprintf@prec,f
  2271  0FDD  1803               	skipnc
  2272  0FDE  0ACE               	incf	sprintf@prec+1,f
  2273  0FDF  30FF               	movlw	255
  2274  0FE0  07CE               	addwf	sprintf@prec+1,f
  2275  0FE1  0A4D               	incf	sprintf@prec,w
  2276  0FE2  1D03               	skipz
  2277  0FE3  2FE8               	goto	u3471
  2278  0FE4  0A4E               	incf	sprintf@prec+1,w
  2279  0FE5  1D03               	btfss	3,2
  2280  0FE6  2FE8               	goto	u3471
  2281  0FE7  2FE9               	goto	u3470
  2282  0FE8                     u3471:
  2283  0FE8  2F81               	goto	l2498
  2284  0FE9                     u3470:
  2285  0FE9                     l2506:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2288  0FE9  3001               	movlw	1
  2289  0FEA  07B6               	addwf	sprintf@f,f
  2290  0FEB  30FF               	movlw	-1
  2291  0FEC  0736               	addwf	sprintf@f,w
  2292  0FED  0084               	movwf	4
  2293  0FEE  120A  158A  200A  120A  158A  	fcall	stringdir
  2294  0FF3  00BF               	movwf	??_sprintf
  2295  0FF4  083F               	movf	??_sprintf,w
  2296  0FF5  00CF               	movwf	sprintf@c
  2297  0FF6  084F               	movf	sprintf@c,w
  2298  0FF7  1D03               	btfss	3,2
  2299  0FF8  2FFA               	goto	u3481
  2300  0FF9  2FFB               	goto	u3480
  2301  0FFA                     u3481:
  2302  0FFA  2DBC               	goto	l2410
  2303  0FFB                     u3480:
  2304  0FFB                     l2508:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2307  0FFB  084A               	movf	sprintf@sp,w
  2308  0FFC  0084               	movwf	4
  2309  0FFD  1383               	bcf	3,7	;select IRP bank0
  2310  0FFE  0180               	clrf	0
  2311  0FFF                     l815:
  2312  0FFF  0008               	return
  2313  1000                     __end_of_sprintf:
  2314                           
  2315                           	psect	text3
  2316  0847                     __ptext3:	
  2317 ;; *************** function _isdigit *****************
  2318 ;; Defined at:
  2319 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  c               1    wreg     unsigned char 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  c               1    7[COMMON] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;		None               void
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2333 ;;      Params:         0       0       0       0       0
  2334 ;;      Locals:         2       0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0
  2336 ;;      Totals:         2       0       0       0       0
  2337 ;;Total ram usage:        2 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_sprintf
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function _isdigit
  2349  0847                     _isdigit:
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2353                           ;isdigit@c stored from wreg
  2354  0847  00F7               	movwf	isdigit@c
  2355  0848                     l2106:
  2356  0848  01F6               	clrf	_isdigit$966
  2357  0849                     l2108:
  2358  0849  303A               	movlw	58
  2359  084A  0277               	subwf	isdigit@c,w
  2360  084B  1803               	skipnc
  2361  084C  284E               	goto	u2551
  2362  084D  284F               	goto	u2550
  2363  084E                     u2551:
  2364  084E  2857               	goto	l2114
  2365  084F                     u2550:
  2366  084F                     l2110:
  2367  084F  3030               	movlw	48
  2368  0850  0277               	subwf	isdigit@c,w
  2369  0851  1C03               	skipc
  2370  0852  2854               	goto	u2561
  2371  0853  2855               	goto	u2560
  2372  0854                     u2561:
  2373  0854  2857               	goto	l2114
  2374  0855                     u2560:
  2375  0855                     l2112:
  2376  0855  01F6               	clrf	_isdigit$966
  2377  0856  0AF6               	incf	_isdigit$966,f
  2378  0857                     l2114:
  2379  0857  0C76               	rrf	_isdigit$966,w
  2380  0858                     l820:
  2381  0858  0008               	return
  2382  0859                     __end_of_isdigit:
  2383                           
  2384                           	psect	text4
  2385  17B0                     __ptext4:	
  2386 ;; *************** function ___wmul *****************
  2387 ;; Defined at:
  2388 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2391 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  product         2    6[COMMON] unsigned int 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2    0[BANK0 ] unsigned int 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       4       0       0       0
  2404 ;;      Locals:         2       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0
  2406 ;;      Totals:         2       4       0       0       0
  2407 ;;Total ram usage:        6 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_sprintf
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function ___wmul
  2419  17B0                     ___wmul:
  2420  17B0                     l1840:	
  2421                           ;incstack = 0
  2422                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2423                           
  2424  17B0  01F6               	clrf	___wmul@product
  2425  17B1  01F7               	clrf	___wmul@product+1
  2426  17B2                     l1842:
  2427  17B2  1283               	bcf	3,5	;RP0=0, select bank0
  2428  17B3  1303               	bcf	3,6	;RP1=0, select bank0
  2429  17B4  1C20               	btfss	___wmul@multiplier,0
  2430  17B5  2FB7               	goto	u1891
  2431  17B6  2FB8               	goto	u1890
  2432  17B7                     u1891:
  2433  17B7  2FBE               	goto	l311
  2434  17B8                     u1890:
  2435  17B8                     l1844:
  2436  17B8  0822               	movf	___wmul@multiplicand,w
  2437  17B9  07F6               	addwf	___wmul@product,f
  2438  17BA  1803               	skipnc
  2439  17BB  0AF7               	incf	___wmul@product+1,f
  2440  17BC  0823               	movf	___wmul@multiplicand+1,w
  2441  17BD  07F7               	addwf	___wmul@product+1,f
  2442  17BE                     l311:
  2443  17BE  3001               	movlw	1
  2444  17BF                     u1905:
  2445  17BF  1003               	clrc
  2446  17C0  0DA2               	rlf	___wmul@multiplicand,f
  2447  17C1  0DA3               	rlf	___wmul@multiplicand+1,f
  2448  17C2  3EFF               	addlw	-1
  2449  17C3  1D03               	skipz
  2450  17C4  2FBF               	goto	u1905
  2451  17C5                     l1846:
  2452  17C5  3001               	movlw	1
  2453  17C6                     u1915:
  2454  17C6  1003               	clrc
  2455  17C7  0CA1               	rrf	___wmul@multiplier+1,f
  2456  17C8  0CA0               	rrf	___wmul@multiplier,f
  2457  17C9  3EFF               	addlw	-1
  2458  17CA  1D03               	skipz
  2459  17CB  2FC6               	goto	u1915
  2460  17CC                     l1848:
  2461  17CC  0820               	movf	___wmul@multiplier,w
  2462  17CD  0421               	iorwf	___wmul@multiplier+1,w
  2463  17CE  1D03               	btfss	3,2
  2464  17CF  2FD1               	goto	u1921
  2465  17D0  2FD2               	goto	u1920
  2466  17D1                     u1921:
  2467  17D1  2FB2               	goto	l1842
  2468  17D2                     u1920:
  2469  17D2                     l1850:
  2470  17D2  0877               	movf	___wmul@product+1,w
  2471  17D3  00A1               	movwf	?___wmul+1
  2472  17D4  0876               	movf	___wmul@product,w
  2473  17D5  00A0               	movwf	?___wmul
  2474  17D6                     l313:
  2475  17D6  0008               	return
  2476  17D7                     __end_of___wmul:
  2477                           
  2478                           	psect	text5
  2479  08B9                     __ptext5:	
  2480 ;; *************** function ___llmod *****************
  2481 ;; Defined at:
  2482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  divisor         4   13[BANK0 ] unsigned long 
  2485 ;;  dividend        4   17[BANK0 ] unsigned long 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  counter         1   21[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  4   13[BANK0 ] unsigned long 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2497 ;;      Params:         0       8       0       0       0
  2498 ;;      Locals:         0       1       0       0       0
  2499 ;;      Temps:          1       0       0       0       0
  2500 ;;      Totals:         1       9       0       0       0
  2501 ;;Total ram usage:       10 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    1
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_sprintf
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function ___llmod
  2513  08B9                     ___llmod:
  2514  08B9                     l1878:	
  2515                           ;incstack = 0
  2516                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2517                           
  2518  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  2519  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  2520  08BB  0830               	movf	___llmod@divisor+3,w
  2521  08BC  042F               	iorwf	___llmod@divisor+2,w
  2522  08BD  042E               	iorwf	___llmod@divisor+1,w
  2523  08BE  042D               	iorwf	___llmod@divisor,w
  2524  08BF  1903               	skipnz
  2525  08C0  28C2               	goto	u2001
  2526  08C1  28C3               	goto	u2000
  2527  08C2                     u2001:
  2528  08C2  2906               	goto	l1894
  2529  08C3                     u2000:
  2530  08C3                     l1880:
  2531  08C3  01B5               	clrf	___llmod@counter
  2532  08C4  0AB5               	incf	___llmod@counter,f
  2533  08C5  28D3               	goto	l1884
  2534  08C6                     l1882:
  2535  08C6  3001               	movlw	1
  2536  08C7  00F7               	movwf	??___llmod
  2537  08C8                     u2015:
  2538  08C8  1003               	clrc
  2539  08C9  0DAD               	rlf	___llmod@divisor,f
  2540  08CA  0DAE               	rlf	___llmod@divisor+1,f
  2541  08CB  0DAF               	rlf	___llmod@divisor+2,f
  2542  08CC  0DB0               	rlf	___llmod@divisor+3,f
  2543  08CD  0BF7               	decfsz	??___llmod,f
  2544  08CE  28C8               	goto	u2015
  2545  08CF  3001               	movlw	1
  2546  08D0  00F7               	movwf	??___llmod
  2547  08D1  0877               	movf	??___llmod,w
  2548  08D2  07B5               	addwf	___llmod@counter,f
  2549  08D3                     l1884:
  2550  08D3  1FB0               	btfss	___llmod@divisor+3,7
  2551  08D4  28D6               	goto	u2021
  2552  08D5  28D7               	goto	u2020
  2553  08D6                     u2021:
  2554  08D6  28C6               	goto	l1882
  2555  08D7                     u2020:
  2556  08D7                     l1886:
  2557  08D7  0830               	movf	___llmod@divisor+3,w
  2558  08D8  0234               	subwf	___llmod@dividend+3,w
  2559  08D9  1D03               	skipz
  2560  08DA  28E5               	goto	u2035
  2561  08DB  082F               	movf	___llmod@divisor+2,w
  2562  08DC  0233               	subwf	___llmod@dividend+2,w
  2563  08DD  1D03               	skipz
  2564  08DE  28E5               	goto	u2035
  2565  08DF  082E               	movf	___llmod@divisor+1,w
  2566  08E0  0232               	subwf	___llmod@dividend+1,w
  2567  08E1  1D03               	skipz
  2568  08E2  28E5               	goto	u2035
  2569  08E3  082D               	movf	___llmod@divisor,w
  2570  08E4  0231               	subwf	___llmod@dividend,w
  2571  08E5                     u2035:
  2572  08E5  1C03               	skipc
  2573  08E6  28E8               	goto	u2031
  2574  08E7  28E9               	goto	u2030
  2575  08E8                     u2031:
  2576  08E8  28F7               	goto	l1890
  2577  08E9                     u2030:
  2578  08E9                     l1888:
  2579  08E9  082D               	movf	___llmod@divisor,w
  2580  08EA  02B1               	subwf	___llmod@dividend,f
  2581  08EB  082E               	movf	___llmod@divisor+1,w
  2582  08EC  1C03               	skipc
  2583  08ED  0F2E               	incfsz	___llmod@divisor+1,w
  2584  08EE  02B2               	subwf	___llmod@dividend+1,f
  2585  08EF  082F               	movf	___llmod@divisor+2,w
  2586  08F0  1C03               	skipc
  2587  08F1  0F2F               	incfsz	___llmod@divisor+2,w
  2588  08F2  02B3               	subwf	___llmod@dividend+2,f
  2589  08F3  0830               	movf	___llmod@divisor+3,w
  2590  08F4  1C03               	skipc
  2591  08F5  0F30               	incfsz	___llmod@divisor+3,w
  2592  08F6  02B4               	subwf	___llmod@dividend+3,f
  2593  08F7                     l1890:
  2594  08F7  3001               	movlw	1
  2595  08F8                     u2045:
  2596  08F8  1003               	clrc
  2597  08F9  0CB0               	rrf	___llmod@divisor+3,f
  2598  08FA  0CAF               	rrf	___llmod@divisor+2,f
  2599  08FB  0CAE               	rrf	___llmod@divisor+1,f
  2600  08FC  0CAD               	rrf	___llmod@divisor,f
  2601  08FD  3EFF               	addlw	-1
  2602  08FE  1D03               	skipz
  2603  08FF  28F8               	goto	u2045
  2604  0900                     l1892:
  2605  0900  3001               	movlw	1
  2606  0901  02B5               	subwf	___llmod@counter,f
  2607  0902  1D03               	btfss	3,2
  2608  0903  2905               	goto	u2051
  2609  0904  2906               	goto	u2050
  2610  0905                     u2051:
  2611  0905  28D7               	goto	l1886
  2612  0906                     u2050:
  2613  0906                     l1894:
  2614  0906  0834               	movf	___llmod@dividend+3,w
  2615  0907  00B0               	movwf	?___llmod+3
  2616  0908  0833               	movf	___llmod@dividend+2,w
  2617  0909  00AF               	movwf	?___llmod+2
  2618  090A  0832               	movf	___llmod@dividend+1,w
  2619  090B  00AE               	movwf	?___llmod+1
  2620  090C  0831               	movf	___llmod@dividend,w
  2621  090D  00AD               	movwf	?___llmod
  2622  090E                     l533:
  2623  090E  0008               	return
  2624  090F                     __end_of___llmod:
  2625                           
  2626                           	psect	text6
  2627  0A41                     __ptext6:	
  2628 ;; *************** function ___fltol *****************
  2629 ;; Defined at:
  2630 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  f1              4   40[BANK0 ] unsigned long 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  exp1            1   50[BANK0 ] unsigned char 
  2635 ;;  sign1           1   49[BANK0 ] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  4   40[BANK0 ] long 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       4       0       0       0
  2646 ;;      Locals:         0       2       0       0       0
  2647 ;;      Temps:          0       5       0       0       0
  2648 ;;      Totals:         0      11       0       0       0
  2649 ;;Total ram usage:       11 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_ftoa
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function ___fltol
  2661  0A41                     ___fltol:
  2662  0A41                     l2182:	
  2663                           ;incstack = 0
  2664                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2665                           
  2666  0A41  1003               	clrc
  2667  0A42  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0A43  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0A44  0D4A               	rlf	___fltol@f1+2,w
  2670  0A45  0D4B               	rlf	___fltol@f1+3,w
  2671  0A46  00CC               	movwf	??___fltol
  2672  0A47  084C               	movf	??___fltol,w
  2673  0A48  00D2               	movwf	___fltol@exp1
  2674  0A49  0852               	movf	___fltol@exp1,w
  2675  0A4A  1D03               	btfss	3,2
  2676  0A4B  2A4D               	goto	u2691
  2677  0A4C  2A4E               	goto	u2690
  2678  0A4D                     u2691:
  2679  0A4D  2A57               	goto	l2188
  2680  0A4E                     u2690:
  2681  0A4E                     l2184:
  2682  0A4E  3000               	movlw	0
  2683  0A4F  00CB               	movwf	?___fltol+3
  2684  0A50  3000               	movlw	0
  2685  0A51  00CA               	movwf	?___fltol+2
  2686  0A52  3000               	movlw	0
  2687  0A53  00C9               	movwf	?___fltol+1
  2688  0A54  3000               	movlw	0
  2689  0A55  00C8               	movwf	?___fltol
  2690  0A56  2ABC               	goto	l497
  2691  0A57                     l2188:
  2692  0A57  0848               	movf	___fltol@f1,w
  2693  0A58  00CC               	movwf	??___fltol
  2694  0A59  0849               	movf	___fltol@f1+1,w
  2695  0A5A  00CD               	movwf	??___fltol+1
  2696  0A5B  084A               	movf	___fltol@f1+2,w
  2697  0A5C  00CE               	movwf	??___fltol+2
  2698  0A5D  084B               	movf	___fltol@f1+3,w
  2699  0A5E  00CF               	movwf	??___fltol+3
  2700  0A5F  301F               	movlw	31
  2701  0A60                     u2705:
  2702  0A60  1003               	clrc
  2703  0A61  0CCF               	rrf	??___fltol+3,f
  2704  0A62  0CCE               	rrf	??___fltol+2,f
  2705  0A63  0CCD               	rrf	??___fltol+1,f
  2706  0A64  0CCC               	rrf	??___fltol,f
  2707  0A65                     u2700:
  2708  0A65  3EFF               	addlw	-1
  2709  0A66  1D03               	skipz
  2710  0A67  2A60               	goto	u2705
  2711  0A68  084C               	movf	??___fltol,w
  2712  0A69  00D0               	movwf	??___fltol+4
  2713  0A6A  0850               	movf	??___fltol+4,w
  2714  0A6B  00D1               	movwf	___fltol@sign1
  2715  0A6C                     l2190:
  2716  0A6C  17CA               	bsf	___fltol@f1+2,7
  2717  0A6D                     l2192:
  2718  0A6D  30FF               	movlw	255
  2719  0A6E  05C8               	andwf	___fltol@f1,f
  2720  0A6F  30FF               	movlw	255
  2721  0A70  05C9               	andwf	___fltol@f1+1,f
  2722  0A71  30FF               	movlw	255
  2723  0A72  05CA               	andwf	___fltol@f1+2,f
  2724  0A73  3000               	movlw	0
  2725  0A74  05CB               	andwf	___fltol@f1+3,f
  2726  0A75                     l2194:
  2727  0A75  3096               	movlw	150
  2728  0A76  02D2               	subwf	___fltol@exp1,f
  2729  0A77                     l2196:
  2730  0A77  1FD2               	btfss	___fltol@exp1,7
  2731  0A78  2A7A               	goto	u2711
  2732  0A79  2A7B               	goto	u2710
  2733  0A7A                     u2711:
  2734  0A7A  2A95               	goto	l2206
  2735  0A7B                     u2710:
  2736  0A7B                     l2198:
  2737  0A7B  0852               	movf	___fltol@exp1,w
  2738  0A7C  3A80               	xorlw	128
  2739  0A7D  3E97               	addlw	151
  2740  0A7E  1803               	skipnc
  2741  0A7F  2A81               	goto	u2721
  2742  0A80  2A82               	goto	u2720
  2743  0A81                     u2721:
  2744  0A81  2A83               	goto	l2204
  2745  0A82                     u2720:
  2746  0A82  2A4E               	goto	l2184
  2747  0A83                     l2204:
  2748  0A83  3001               	movlw	1
  2749  0A84                     u2735:
  2750  0A84  1003               	clrc
  2751  0A85  0CCB               	rrf	___fltol@f1+3,f
  2752  0A86  0CCA               	rrf	___fltol@f1+2,f
  2753  0A87  0CC9               	rrf	___fltol@f1+1,f
  2754  0A88  0CC8               	rrf	___fltol@f1,f
  2755  0A89  3EFF               	addlw	-1
  2756  0A8A  1D03               	skipz
  2757  0A8B  2A84               	goto	u2735
  2758  0A8C  3001               	movlw	1
  2759  0A8D  00CC               	movwf	??___fltol
  2760  0A8E  084C               	movf	??___fltol,w
  2761  0A8F  07D2               	addwf	___fltol@exp1,f
  2762  0A90  1D03               	btfss	3,2
  2763  0A91  2A93               	goto	u2741
  2764  0A92  2A94               	goto	u2740
  2765  0A93                     u2741:
  2766  0A93  2A83               	goto	l2204
  2767  0A94                     u2740:
  2768  0A94  2AAC               	goto	l2214
  2769  0A95                     l2206:
  2770  0A95  3020               	movlw	32
  2771  0A96  0252               	subwf	___fltol@exp1,w
  2772  0A97  1C03               	skipc
  2773  0A98  2A9A               	goto	u2751
  2774  0A99  2A9B               	goto	u2750
  2775  0A9A                     u2751:
  2776  0A9A  2AA7               	goto	l504
  2777  0A9B                     u2750:
  2778  0A9B  2A4E               	goto	l2184
  2779  0A9C                     l2212:
  2780  0A9C  3001               	movlw	1
  2781  0A9D  00CC               	movwf	??___fltol
  2782  0A9E                     u2765:
  2783  0A9E  1003               	clrc
  2784  0A9F  0DC8               	rlf	___fltol@f1,f
  2785  0AA0  0DC9               	rlf	___fltol@f1+1,f
  2786  0AA1  0DCA               	rlf	___fltol@f1+2,f
  2787  0AA2  0DCB               	rlf	___fltol@f1+3,f
  2788  0AA3  0BCC               	decfsz	??___fltol,f
  2789  0AA4  2A9E               	goto	u2765
  2790  0AA5  3001               	movlw	1
  2791  0AA6  02D2               	subwf	___fltol@exp1,f
  2792  0AA7                     l504:
  2793  0AA7  0852               	movf	___fltol@exp1,w
  2794  0AA8  1D03               	btfss	3,2
  2795  0AA9  2AAB               	goto	u2771
  2796  0AAA  2AAC               	goto	u2770
  2797  0AAB                     u2771:
  2798  0AAB  2A9C               	goto	l2212
  2799  0AAC                     u2770:
  2800  0AAC                     l2214:
  2801  0AAC  0851               	movf	___fltol@sign1,w
  2802  0AAD  1903               	btfsc	3,2
  2803  0AAE  2AB0               	goto	u2781
  2804  0AAF  2AB1               	goto	u2780
  2805  0AB0                     u2781:
  2806  0AB0  2ABC               	goto	l507
  2807  0AB1                     u2780:
  2808  0AB1                     l2216:
  2809  0AB1  09C8               	comf	___fltol@f1,f
  2810  0AB2  09C9               	comf	___fltol@f1+1,f
  2811  0AB3  09CA               	comf	___fltol@f1+2,f
  2812  0AB4  09CB               	comf	___fltol@f1+3,f
  2813  0AB5  0AC8               	incf	___fltol@f1,f
  2814  0AB6  1903               	skipnz
  2815  0AB7  0AC9               	incf	___fltol@f1+1,f
  2816  0AB8  1903               	skipnz
  2817  0AB9  0ACA               	incf	___fltol@f1+2,f
  2818  0ABA  1903               	skipnz
  2819  0ABB  0ACB               	incf	___fltol@f1+3,f
  2820  0ABC                     l507:
  2821  0ABC                     l497:
  2822  0ABC  0008               	return
  2823  0ABD                     __end_of___fltol:
  2824                           
  2825                           	psect	text7
  2826  178C                     __ptext7:	
  2827 ;; *************** function ___flsub *****************
  2828 ;; Defined at:
  2829 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  a               4   20[BANK0 ] long 
  2832 ;;  b               4   24[BANK0 ] long 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  4   20[BANK0 ] long 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2844 ;;      Params:         0       8       0       0       0
  2845 ;;      Locals:         0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0
  2847 ;;      Totals:         0       8       0       0       0
  2848 ;;Total ram usage:        8 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    2
  2851 ;; This function calls:
  2852 ;;		___fladd
  2853 ;; This function is called by:
  2854 ;;		_ftoa
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function ___flsub
  2860  178C                     ___flsub:
  2861  178C                     l2218:	
  2862                           ;incstack = 0
  2863                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2864                           
  2865  178C  3080               	movlw	128
  2866  178D  1283               	bcf	3,5	;RP0=0, select bank0
  2867  178E  1303               	bcf	3,6	;RP1=0, select bank0
  2868  178F  06B7               	xorwf	___flsub@a+3,f
  2869  1790                     l2220:
  2870  1790  083B               	movf	___flsub@b+3,w
  2871  1791  00A3               	movwf	___fladd@b+3
  2872  1792  083A               	movf	___flsub@b+2,w
  2873  1793  00A2               	movwf	___fladd@b+2
  2874  1794  0839               	movf	___flsub@b+1,w
  2875  1795  00A1               	movwf	___fladd@b+1
  2876  1796  0838               	movf	___flsub@b,w
  2877  1797  00A0               	movwf	___fladd@b
  2878  1798  0837               	movf	___flsub@a+3,w
  2879  1799  00A7               	movwf	___fladd@a+3
  2880  179A  0836               	movf	___flsub@a+2,w
  2881  179B  00A6               	movwf	___fladd@a+2
  2882  179C  0835               	movf	___flsub@a+1,w
  2883  179D  00A5               	movwf	___fladd@a+1
  2884  179E  0834               	movf	___flsub@a,w
  2885  179F  00A4               	movwf	___fladd@a
  2886  17A0  120A  118A  2384  160A  118A  	fcall	___fladd
  2887  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  2888  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  2889  17A7  0823               	movf	?___fladd+3,w
  2890  17A8  00B7               	movwf	?___flsub+3
  2891  17A9  0822               	movf	?___fladd+2,w
  2892  17AA  00B6               	movwf	?___flsub+2
  2893  17AB  0821               	movf	?___fladd+1,w
  2894  17AC  00B5               	movwf	?___flsub+1
  2895  17AD  0820               	movf	?___fladd,w
  2896  17AE  00B4               	movwf	?___flsub
  2897  17AF                     l650:
  2898  17AF  0008               	return
  2899  17B0                     __end_of___flsub:
  2900                           
  2901                           	psect	text8
  2902  0384                     __ptext8:	
  2903 ;; *************** function ___fladd *****************
  2904 ;; Defined at:
  2905 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  b               4    0[BANK0 ] long 
  2908 ;;  a               4    4[BANK0 ] long 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  grs             1   19[BANK0 ] unsigned char 
  2911 ;;  bexp            1   18[BANK0 ] unsigned char 
  2912 ;;  aexp            1   17[BANK0 ] unsigned char 
  2913 ;;  signs           1   16[BANK0 ] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  4    0[BANK0 ] unsigned char 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, btemp+1
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       8       0       0       0
  2924 ;;      Locals:         0       4       0       0       0
  2925 ;;      Temps:          0       8       0       0       0
  2926 ;;      Totals:         0      20       0       0       0
  2927 ;;Total ram usage:       20 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		___flsub
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function ___fladd
  2939  0384                     ___fladd:
  2940  0384                     l1898:	
  2941                           ;incstack = 0
  2942                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2943                           
  2944  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0386  0823               	movf	___fladd@b+3,w
  2947  0387  3980               	andlw	128
  2948  0388  00A8               	movwf	??___fladd
  2949  0389  0828               	movf	??___fladd,w
  2950  038A  00B0               	movwf	___fladd@signs
  2951  038B                     l1900:
  2952  038B  0823               	movf	___fladd@b+3,w
  2953  038C  00A8               	movwf	??___fladd
  2954  038D  0728               	addwf	??___fladd,w
  2955  038E  00A9               	movwf	??___fladd+1
  2956  038F  0829               	movf	??___fladd+1,w
  2957  0390  00B2               	movwf	___fladd@bexp
  2958  0391                     l1902:
  2959  0391  1FA2               	btfss	___fladd@b+2,7
  2960  0392  2B94               	goto	u2061
  2961  0393  2B95               	goto	u2060
  2962  0394                     u2061:
  2963  0394  2B96               	goto	l1906
  2964  0395                     u2060:
  2965  0395                     l1904:
  2966  0395  1432               	bsf	___fladd@bexp,0
  2967  0396                     l1906:
  2968  0396  0832               	movf	___fladd@bexp,w
  2969  0397  1903               	btfsc	3,2
  2970  0398  2B9A               	goto	u2071
  2971  0399  2B9B               	goto	u2070
  2972  039A                     u2071:
  2973  039A  2BAB               	goto	l1916
  2974  039B                     u2070:
  2975  039B                     l1908:
  2976  039B  0A32               	incf	___fladd@bexp,w
  2977  039C  1D03               	btfss	3,2
  2978  039D  2B9F               	goto	u2081
  2979  039E  2BA0               	goto	u2080
  2980  039F                     u2081:
  2981  039F  2BA8               	goto	l1912
  2982  03A0                     u2080:
  2983  03A0                     l1910:
  2984  03A0  3000               	movlw	0
  2985  03A1  00A3               	movwf	___fladd@b+3
  2986  03A2  3000               	movlw	0
  2987  03A3  00A2               	movwf	___fladd@b+2
  2988  03A4  3000               	movlw	0
  2989  03A5  00A1               	movwf	___fladd@b+1
  2990  03A6  3000               	movlw	0
  2991  03A7  00A0               	movwf	___fladd@b
  2992  03A8                     l1912:
  2993  03A8  17A2               	bsf	___fladd@b+2,7
  2994  03A9                     l1914:
  2995  03A9  01A3               	clrf	___fladd@b+3
  2996  03AA  2BB3               	goto	l1918
  2997  03AB                     l1916:
  2998  03AB  3000               	movlw	0
  2999  03AC  00A3               	movwf	___fladd@b+3
  3000  03AD  3000               	movlw	0
  3001  03AE  00A2               	movwf	___fladd@b+2
  3002  03AF  3000               	movlw	0
  3003  03B0  00A1               	movwf	___fladd@b+1
  3004  03B1  3000               	movlw	0
  3005  03B2  00A0               	movwf	___fladd@b
  3006  03B3                     l1918:
  3007  03B3  0827               	movf	___fladd@a+3,w
  3008  03B4  3980               	andlw	128
  3009  03B5  00A8               	movwf	??___fladd
  3010  03B6  0828               	movf	??___fladd,w
  3011  03B7  00B1               	movwf	___fladd@aexp
  3012  03B8                     l1920:
  3013  03B8  0831               	movf	___fladd@aexp,w
  3014  03B9  0630               	xorwf	___fladd@signs,w
  3015  03BA  1903               	skipnz
  3016  03BB  2BBD               	goto	u2091
  3017  03BC  2BBE               	goto	u2090
  3018  03BD                     u2091:
  3019  03BD  2BBF               	goto	l1924
  3020  03BE                     u2090:
  3021  03BE                     l1922:
  3022  03BE  1730               	bsf	___fladd@signs,6
  3023  03BF                     l1924:
  3024  03BF  0827               	movf	___fladd@a+3,w
  3025  03C0  00A8               	movwf	??___fladd
  3026  03C1  0728               	addwf	??___fladd,w
  3027  03C2  00A9               	movwf	??___fladd+1
  3028  03C3  0829               	movf	??___fladd+1,w
  3029  03C4  00B1               	movwf	___fladd@aexp
  3030  03C5                     l1926:
  3031  03C5  1FA6               	btfss	___fladd@a+2,7
  3032  03C6  2BC8               	goto	u2101
  3033  03C7  2BC9               	goto	u2100
  3034  03C8                     u2101:
  3035  03C8  2BCA               	goto	l1930
  3036  03C9                     u2100:
  3037  03C9                     l1928:
  3038  03C9  1431               	bsf	___fladd@aexp,0
  3039  03CA                     l1930:
  3040  03CA  0831               	movf	___fladd@aexp,w
  3041  03CB  1903               	btfsc	3,2
  3042  03CC  2BCE               	goto	u2111
  3043  03CD  2BCF               	goto	u2110
  3044  03CE                     u2111:
  3045  03CE  2BDF               	goto	l1940
  3046  03CF                     u2110:
  3047  03CF                     l1932:
  3048  03CF  0A31               	incf	___fladd@aexp,w
  3049  03D0  1D03               	btfss	3,2
  3050  03D1  2BD3               	goto	u2121
  3051  03D2  2BD4               	goto	u2120
  3052  03D3                     u2121:
  3053  03D3  2BDC               	goto	l1936
  3054  03D4                     u2120:
  3055  03D4                     l1934:
  3056  03D4  3000               	movlw	0
  3057  03D5  00A7               	movwf	___fladd@a+3
  3058  03D6  3000               	movlw	0
  3059  03D7  00A6               	movwf	___fladd@a+2
  3060  03D8  3000               	movlw	0
  3061  03D9  00A5               	movwf	___fladd@a+1
  3062  03DA  3000               	movlw	0
  3063  03DB  00A4               	movwf	___fladd@a
  3064  03DC                     l1936:
  3065  03DC  17A6               	bsf	___fladd@a+2,7
  3066  03DD                     l1938:
  3067  03DD  01A7               	clrf	___fladd@a+3
  3068  03DE  2BE7               	goto	l604
  3069  03DF                     l1940:
  3070  03DF  3000               	movlw	0
  3071  03E0  00A7               	movwf	___fladd@a+3
  3072  03E1  3000               	movlw	0
  3073  03E2  00A6               	movwf	___fladd@a+2
  3074  03E3  3000               	movlw	0
  3075  03E4  00A5               	movwf	___fladd@a+1
  3076  03E5  3000               	movlw	0
  3077  03E6  00A4               	movwf	___fladd@a
  3078  03E7                     l604:
  3079  03E7  0832               	movf	___fladd@bexp,w
  3080  03E8  0231               	subwf	___fladd@aexp,w
  3081  03E9  1803               	skipnc
  3082  03EA  2BEC               	goto	u2131
  3083  03EB  2BED               	goto	u2130
  3084  03EC                     u2131:
  3085  03EC  2C31               	goto	l1976
  3086  03ED                     u2130:
  3087  03ED                     l1942:
  3088  03ED  1F30               	btfss	___fladd@signs,6
  3089  03EE  2BF0               	goto	u2141
  3090  03EF  2BF1               	goto	u2140
  3091  03F0                     u2141:
  3092  03F0  2BF5               	goto	l1946
  3093  03F1                     u2140:
  3094  03F1                     l1944:
  3095  03F1  3080               	movlw	128
  3096  03F2  00A8               	movwf	??___fladd
  3097  03F3  0828               	movf	??___fladd,w
  3098  03F4  06B0               	xorwf	___fladd@signs,f
  3099  03F5                     l1946:
  3100  03F5  0832               	movf	___fladd@bexp,w
  3101  03F6  00A8               	movwf	??___fladd
  3102  03F7  0828               	movf	??___fladd,w
  3103  03F8  00B3               	movwf	___fladd@grs
  3104  03F9                     l1948:
  3105  03F9  0831               	movf	___fladd@aexp,w
  3106  03FA  00A8               	movwf	??___fladd
  3107  03FB  0828               	movf	??___fladd,w
  3108  03FC  00B2               	movwf	___fladd@bexp
  3109  03FD                     l1950:
  3110  03FD  0833               	movf	___fladd@grs,w
  3111  03FE  00A8               	movwf	??___fladd
  3112  03FF  0828               	movf	??___fladd,w
  3113  0400  00B1               	movwf	___fladd@aexp
  3114  0401                     l1952:
  3115  0401  0820               	movf	___fladd@b,w
  3116  0402  00A8               	movwf	??___fladd
  3117  0403  0828               	movf	??___fladd,w
  3118  0404  00B3               	movwf	___fladd@grs
  3119  0405                     l1954:
  3120  0405  0824               	movf	___fladd@a,w
  3121  0406  00A8               	movwf	??___fladd
  3122  0407  0828               	movf	??___fladd,w
  3123  0408  00A0               	movwf	___fladd@b
  3124  0409                     l1956:
  3125  0409  0833               	movf	___fladd@grs,w
  3126  040A  00A8               	movwf	??___fladd
  3127  040B  0828               	movf	??___fladd,w
  3128  040C  00A4               	movwf	___fladd@a
  3129  040D                     l1958:
  3130  040D  0821               	movf	___fladd@b+1,w
  3131  040E  00A8               	movwf	??___fladd
  3132  040F  0828               	movf	??___fladd,w
  3133  0410  00B3               	movwf	___fladd@grs
  3134  0411                     l1960:
  3135  0411  0825               	movf	___fladd@a+1,w
  3136  0412  00A8               	movwf	??___fladd
  3137  0413  0828               	movf	??___fladd,w
  3138  0414  00A1               	movwf	___fladd@b+1
  3139  0415                     l1962:
  3140  0415  0833               	movf	___fladd@grs,w
  3141  0416  00A8               	movwf	??___fladd
  3142  0417  0828               	movf	??___fladd,w
  3143  0418  00A5               	movwf	___fladd@a+1
  3144  0419                     l1964:
  3145  0419  0822               	movf	___fladd@b+2,w
  3146  041A  00A8               	movwf	??___fladd
  3147  041B  0828               	movf	??___fladd,w
  3148  041C  00B3               	movwf	___fladd@grs
  3149  041D                     l1966:
  3150  041D  0826               	movf	___fladd@a+2,w
  3151  041E  00A8               	movwf	??___fladd
  3152  041F  0828               	movf	??___fladd,w
  3153  0420  00A2               	movwf	___fladd@b+2
  3154  0421                     l1968:
  3155  0421  0833               	movf	___fladd@grs,w
  3156  0422  00A8               	movwf	??___fladd
  3157  0423  0828               	movf	??___fladd,w
  3158  0424  00A6               	movwf	___fladd@a+2
  3159  0425                     l1970:
  3160  0425  0823               	movf	___fladd@b+3,w
  3161  0426  00A8               	movwf	??___fladd
  3162  0427  0828               	movf	??___fladd,w
  3163  0428  00B3               	movwf	___fladd@grs
  3164  0429                     l1972:
  3165  0429  0827               	movf	___fladd@a+3,w
  3166  042A  00A8               	movwf	??___fladd
  3167  042B  0828               	movf	??___fladd,w
  3168  042C  00A3               	movwf	___fladd@b+3
  3169  042D                     l1974:
  3170  042D  0833               	movf	___fladd@grs,w
  3171  042E  00A8               	movwf	??___fladd
  3172  042F  0828               	movf	??___fladd,w
  3173  0430  00A7               	movwf	___fladd@a+3
  3174  0431                     l1976:
  3175  0431  01B3               	clrf	___fladd@grs
  3176  0432                     l1978:
  3177  0432  0831               	movf	___fladd@aexp,w
  3178  0433  00A8               	movwf	??___fladd
  3179  0434  01A9               	clrf	??___fladd+1
  3180  0435  0829               	movf	??___fladd+1,w
  3181  0436  00AB               	movwf	??___fladd+3
  3182  0437  0832               	movf	___fladd@bexp,w
  3183  0438  0228               	subwf	??___fladd,w
  3184  0439  00AA               	movwf	??___fladd+2
  3185  043A  1C03               	skipc
  3186  043B  03AB               	decf	??___fladd+3,f
  3187  043C  082B               	movf	??___fladd+3,w
  3188  043D  3A80               	xorlw	128
  3189  043E  00FF               	movwf	btemp+1
  3190  043F  3080               	movlw	128
  3191  0440  027F               	subwf	btemp+1,w
  3192  0441  1D03               	skipz
  3193  0442  2C45               	goto	u2155
  3194  0443  301A               	movlw	26
  3195  0444  022A               	subwf	??___fladd+2,w
  3196  0445                     u2155:
  3197  0445  1C03               	skipc
  3198  0446  2C48               	goto	u2151
  3199  0447  2C49               	goto	u2150
  3200  0448                     u2151:
  3201  0448  2C86               	goto	l1994
  3202  0449                     u2150:
  3203  0449                     l1980:
  3204  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3205  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3206  044B  0823               	movf	___fladd@b+3,w
  3207  044C  0422               	iorwf	___fladd@b+2,w
  3208  044D  0421               	iorwf	___fladd@b+1,w
  3209  044E  0420               	iorwf	___fladd@b,w
  3210  044F  1D03               	skipz
  3211  0450  2C52               	goto	u2161
  3212  0451  2C54               	goto	u2160
  3213  0452                     u2161:
  3214  0452  3001               	movlw	1
  3215  0453  2C55               	goto	u2170
  3216  0454                     u2160:
  3217  0454  3000               	movlw	0
  3218  0455                     u2170:
  3219  0455  00A8               	movwf	??___fladd
  3220  0456  0828               	movf	??___fladd,w
  3221  0457  00B3               	movwf	___fladd@grs
  3222  0458  3000               	movlw	0
  3223  0459  00A3               	movwf	___fladd@b+3
  3224  045A  3000               	movlw	0
  3225  045B  00A2               	movwf	___fladd@b+2
  3226  045C  3000               	movlw	0
  3227  045D  00A1               	movwf	___fladd@b+1
  3228  045E  3000               	movlw	0
  3229  045F  00A0               	movwf	___fladd@b
  3230  0460  0831               	movf	___fladd@aexp,w
  3231  0461  00A8               	movwf	??___fladd
  3232  0462  0828               	movf	??___fladd,w
  3233  0463  00B2               	movwf	___fladd@bexp
  3234  0464  2C8E               	goto	l608
  3235  0465                     l610:
  3236  0465  1C33               	btfss	___fladd@grs,0
  3237  0466  2C68               	goto	u2181
  3238  0467  2C69               	goto	u2180
  3239  0468                     u2181:
  3240  0468  2C72               	goto	l1984
  3241  0469                     u2180:
  3242  0469                     l1982:
  3243  0469  0833               	movf	___fladd@grs,w
  3244  046A  00A8               	movwf	??___fladd
  3245  046B  1003               	clrc
  3246  046C  0C28               	rrf	??___fladd,w
  3247  046D  3801               	iorlw	1
  3248  046E  00A9               	movwf	??___fladd+1
  3249  046F  0829               	movf	??___fladd+1,w
  3250  0470  00B3               	movwf	___fladd@grs
  3251  0471  2C74               	goto	l1986
  3252  0472                     l1984:
  3253  0472  1003               	clrc
  3254  0473  0CB3               	rrf	___fladd@grs,f
  3255  0474                     l1986:
  3256  0474  1C20               	btfss	___fladd@b,0
  3257  0475  2C77               	goto	u2191
  3258  0476  2C78               	goto	u2190
  3259  0477                     u2191:
  3260  0477  2C79               	goto	l1990
  3261  0478                     u2190:
  3262  0478                     l1988:
  3263  0478  17B3               	bsf	___fladd@grs,7
  3264  0479                     l1990:
  3265  0479  3001               	movlw	1
  3266  047A  00A8               	movwf	??___fladd
  3267  047B                     u2205:
  3268  047B  0D23               	rlf	___fladd@b+3,w
  3269  047C  0CA3               	rrf	___fladd@b+3,f
  3270  047D  0CA2               	rrf	___fladd@b+2,f
  3271  047E  0CA1               	rrf	___fladd@b+1,f
  3272  047F  0CA0               	rrf	___fladd@b,f
  3273  0480  0BA8               	decfsz	??___fladd& (0+127),f
  3274  0481  2C7B               	goto	u2205
  3275  0482                     l1992:
  3276  0482  3001               	movlw	1
  3277  0483  00A8               	movwf	??___fladd
  3278  0484  0828               	movf	??___fladd,w
  3279  0485  07B2               	addwf	___fladd@bexp,f
  3280  0486                     l1994:
  3281  0486  1283               	bcf	3,5	;RP0=0, select bank0
  3282  0487  1303               	bcf	3,6	;RP1=0, select bank0
  3283  0488  0831               	movf	___fladd@aexp,w
  3284  0489  0232               	subwf	___fladd@bexp,w
  3285  048A  1C03               	skipc
  3286  048B  2C8D               	goto	u2211
  3287  048C  2C8E               	goto	u2210
  3288  048D                     u2211:
  3289  048D  2C65               	goto	l610
  3290  048E                     u2210:
  3291  048E                     l608:
  3292  048E  1B30               	btfsc	___fladd@signs,6
  3293  048F  2C91               	goto	u2221
  3294  0490  2C92               	goto	u2220
  3295  0491                     u2221:
  3296  0491  2CDD               	goto	l2020
  3297  0492                     u2220:
  3298  0492                     l1996:
  3299  0492  0832               	movf	___fladd@bexp,w
  3300  0493  1D03               	btfss	3,2
  3301  0494  2C96               	goto	u2231
  3302  0495  2C97               	goto	u2230
  3303  0496                     u2231:
  3304  0496  2CA0               	goto	l2002
  3305  0497                     u2230:
  3306  0497                     l1998:
  3307  0497  3000               	movlw	0
  3308  0498  00A3               	movwf	?___fladd+3
  3309  0499  3000               	movlw	0
  3310  049A  00A2               	movwf	?___fladd+2
  3311  049B  3000               	movlw	0
  3312  049C  00A1               	movwf	?___fladd+1
  3313  049D  3000               	movlw	0
  3314  049E  00A0               	movwf	?___fladd
  3315  049F  2E0B               	goto	l617
  3316  04A0                     l2002:
  3317  04A0  0824               	movf	___fladd@a,w
  3318  04A1  07A0               	addwf	___fladd@b,f
  3319  04A2  0825               	movf	___fladd@a+1,w
  3320  04A3  1103               	clrz
  3321  04A4  1803               	skipnc
  3322  04A5  3E01               	addlw	1
  3323  04A6  1903               	skipnz
  3324  04A7  2CA9               	goto	u2241
  3325  04A8  07A1               	addwf	___fladd@b+1,f
  3326  04A9                     u2241:
  3327  04A9  0826               	movf	___fladd@a+2,w
  3328  04AA  1103               	clrz
  3329  04AB  1803               	skipnc
  3330  04AC  3E01               	addlw	1
  3331  04AD  1903               	skipnz
  3332  04AE  2CB0               	goto	u2242
  3333  04AF  07A2               	addwf	___fladd@b+2,f
  3334  04B0                     u2242:
  3335  04B0  0827               	movf	___fladd@a+3,w
  3336  04B1  1103               	clrz
  3337  04B2  1803               	skipnc
  3338  04B3  3E01               	addlw	1
  3339  04B4  1903               	skipnz
  3340  04B5  2CB7               	goto	u2243
  3341  04B6  07A3               	addwf	___fladd@b+3,f
  3342  04B7                     u2243:
  3343  04B7                     l2004:
  3344  04B7  1C23               	btfss	___fladd@b+3,0
  3345  04B8  2CBA               	goto	u2251
  3346  04B9  2CBB               	goto	u2250
  3347  04BA                     u2251:
  3348  04BA  2D91               	goto	l2054
  3349  04BB                     u2250:
  3350  04BB                     l2006:
  3351  04BB  1C33               	btfss	___fladd@grs,0
  3352  04BC  2CBE               	goto	u2261
  3353  04BD  2CBF               	goto	u2260
  3354  04BE                     u2261:
  3355  04BE  2CC8               	goto	l2010
  3356  04BF                     u2260:
  3357  04BF                     l2008:
  3358  04BF  0833               	movf	___fladd@grs,w
  3359  04C0  00A8               	movwf	??___fladd
  3360  04C1  1003               	clrc
  3361  04C2  0C28               	rrf	??___fladd,w
  3362  04C3  3801               	iorlw	1
  3363  04C4  00A9               	movwf	??___fladd+1
  3364  04C5  0829               	movf	??___fladd+1,w
  3365  04C6  00B3               	movwf	___fladd@grs
  3366  04C7  2CCA               	goto	l2012
  3367  04C8                     l2010:
  3368  04C8  1003               	clrc
  3369  04C9  0CB3               	rrf	___fladd@grs,f
  3370  04CA                     l2012:
  3371  04CA  1C20               	btfss	___fladd@b,0
  3372  04CB  2CCD               	goto	u2271
  3373  04CC  2CCE               	goto	u2270
  3374  04CD                     u2271:
  3375  04CD  2CCF               	goto	l2016
  3376  04CE                     u2270:
  3377  04CE                     l2014:
  3378  04CE  17B3               	bsf	___fladd@grs,7
  3379  04CF                     l2016:
  3380  04CF  3001               	movlw	1
  3381  04D0  00A8               	movwf	??___fladd
  3382  04D1                     u2285:
  3383  04D1  0D23               	rlf	___fladd@b+3,w
  3384  04D2  0CA3               	rrf	___fladd@b+3,f
  3385  04D3  0CA2               	rrf	___fladd@b+2,f
  3386  04D4  0CA1               	rrf	___fladd@b+1,f
  3387  04D5  0CA0               	rrf	___fladd@b,f
  3388  04D6  0BA8               	decfsz	??___fladd& (0+127),f
  3389  04D7  2CD1               	goto	u2285
  3390  04D8                     l2018:
  3391  04D8  3001               	movlw	1
  3392  04D9  00A8               	movwf	??___fladd
  3393  04DA  0828               	movf	??___fladd,w
  3394  04DB  07B2               	addwf	___fladd@bexp,f
  3395  04DC  2D91               	goto	l2054
  3396  04DD                     l2020:
  3397  04DD  0823               	movf	___fladd@b+3,w
  3398  04DE  3A80               	xorlw	128
  3399  04DF  00FF               	movwf	btemp+1
  3400  04E0  0827               	movf	___fladd@a+3,w
  3401  04E1  3A80               	xorlw	128
  3402  04E2  027F               	subwf	btemp+1,w
  3403  04E3  1D03               	skipz
  3404  04E4  2CEF               	goto	u2293
  3405  04E5  0826               	movf	___fladd@a+2,w
  3406  04E6  0222               	subwf	___fladd@b+2,w
  3407  04E7  1D03               	skipz
  3408  04E8  2CEF               	goto	u2293
  3409  04E9  0825               	movf	___fladd@a+1,w
  3410  04EA  0221               	subwf	___fladd@b+1,w
  3411  04EB  1D03               	skipz
  3412  04EC  2CEF               	goto	u2293
  3413  04ED  0824               	movf	___fladd@a,w
  3414  04EE  0220               	subwf	___fladd@b,w
  3415  04EF                     u2293:
  3416  04EF  1803               	skipnc
  3417  04F0  2CF2               	goto	u2291
  3418  04F1  2CF3               	goto	u2290
  3419  04F2                     u2291:
  3420  04F2  2D4B               	goto	l2030
  3421  04F3                     u2290:
  3422  04F3                     l2022:
  3423  04F3  30FF               	movlw	255
  3424  04F4  00A8               	movwf	??___fladd
  3425  04F5  30FF               	movlw	255
  3426  04F6  00A9               	movwf	??___fladd+1
  3427  04F7  30FF               	movlw	255
  3428  04F8  00AA               	movwf	??___fladd+2
  3429  04F9  30FF               	movlw	255
  3430  04FA  00AB               	movwf	??___fladd+3
  3431  04FB  0824               	movf	___fladd@a,w
  3432  04FC  00AC               	movwf	??___fladd+4
  3433  04FD  0825               	movf	___fladd@a+1,w
  3434  04FE  00AD               	movwf	??___fladd+5
  3435  04FF  0826               	movf	___fladd@a+2,w
  3436  0500  00AE               	movwf	??___fladd+6
  3437  0501  0827               	movf	___fladd@a+3,w
  3438  0502  00AF               	movwf	??___fladd+7
  3439  0503  0820               	movf	___fladd@b,w
  3440  0504  02AC               	subwf	??___fladd+4,f
  3441  0505  0821               	movf	___fladd@b+1,w
  3442  0506  1C03               	skipc
  3443  0507  0F21               	incfsz	___fladd@b+1,w
  3444  0508  2D0A               	goto	u2301
  3445  0509  2D0B               	goto	u2302
  3446  050A                     u2301:
  3447  050A  02AD               	subwf	??___fladd+5,f
  3448  050B                     u2302:
  3449  050B  0822               	movf	___fladd@b+2,w
  3450  050C  1C03               	skipc
  3451  050D  0F22               	incfsz	___fladd@b+2,w
  3452  050E  2D10               	goto	u2303
  3453  050F  2D11               	goto	u2304
  3454  0510                     u2303:
  3455  0510  02AE               	subwf	??___fladd+6,f
  3456  0511                     u2304:
  3457  0511  0823               	movf	___fladd@b+3,w
  3458  0512  1C03               	skipc
  3459  0513  0F23               	incfsz	___fladd@b+3,w
  3460  0514  2D16               	goto	u2305
  3461  0515  2D17               	goto	u2306
  3462  0516                     u2305:
  3463  0516  02AF               	subwf	??___fladd+7,f
  3464  0517                     u2306:
  3465  0517  082C               	movf	??___fladd+4,w
  3466  0518  07A8               	addwf	??___fladd,f
  3467  0519  082D               	movf	??___fladd+5,w
  3468  051A  1803               	skipnc
  3469  051B  0F2D               	incfsz	??___fladd+5,w
  3470  051C  2D1E               	goto	u2310
  3471  051D  2D1F               	goto	u2311
  3472  051E                     u2310:
  3473  051E  07A9               	addwf	??___fladd+1,f
  3474  051F                     u2311:
  3475  051F  082E               	movf	??___fladd+6,w
  3476  0520  1803               	skipnc
  3477  0521  0F2E               	incfsz	??___fladd+6,w
  3478  0522  2D24               	goto	u2312
  3479  0523  2D25               	goto	u2313
  3480  0524                     u2312:
  3481  0524  07AA               	addwf	??___fladd+2,f
  3482  0525                     u2313:
  3483  0525  082F               	movf	??___fladd+7,w
  3484  0526  1803               	skipnc
  3485  0527  0A2F               	incf	??___fladd+7,w
  3486  0528  07AB               	addwf	??___fladd+3,f
  3487  0529  082B               	movf	??___fladd+3,w
  3488  052A  00A3               	movwf	___fladd@b+3
  3489  052B  082A               	movf	??___fladd+2,w
  3490  052C  00A2               	movwf	___fladd@b+2
  3491  052D  0829               	movf	??___fladd+1,w
  3492  052E  00A1               	movwf	___fladd@b+1
  3493  052F  0828               	movf	??___fladd,w
  3494  0530  00A0               	movwf	___fladd@b
  3495  0531                     l2024:
  3496  0531  3080               	movlw	128
  3497  0532  00A8               	movwf	??___fladd
  3498  0533  0828               	movf	??___fladd,w
  3499  0534  06B0               	xorwf	___fladd@signs,f
  3500  0535  09B3               	comf	___fladd@grs,f
  3501  0536  0AB3               	incf	___fladd@grs,f
  3502  0537                     l2026:
  3503  0537  0833               	movf	___fladd@grs,w
  3504  0538  1D03               	btfss	3,2
  3505  0539  2D3B               	goto	u2321
  3506  053A  2D3C               	goto	u2320
  3507  053B                     u2321:
  3508  053B  2D59               	goto	l625
  3509  053C                     u2320:
  3510  053C                     l2028:
  3511  053C  3001               	movlw	1
  3512  053D  07A0               	addwf	___fladd@b,f
  3513  053E  3000               	movlw	0
  3514  053F  1803               	skipnc
  3515  0540  3001               	movlw	1
  3516  0541  07A1               	addwf	___fladd@b+1,f
  3517  0542  3000               	movlw	0
  3518  0543  1803               	skipnc
  3519  0544  3001               	movlw	1
  3520  0545  07A2               	addwf	___fladd@b+2,f
  3521  0546  3000               	movlw	0
  3522  0547  1803               	skipnc
  3523  0548  3001               	movlw	1
  3524  0549  07A3               	addwf	___fladd@b+3,f
  3525  054A  2D59               	goto	l625
  3526  054B                     l2030:
  3527  054B  0824               	movf	___fladd@a,w
  3528  054C  02A0               	subwf	___fladd@b,f
  3529  054D  0825               	movf	___fladd@a+1,w
  3530  054E  1C03               	skipc
  3531  054F  0F25               	incfsz	___fladd@a+1,w
  3532  0550  02A1               	subwf	___fladd@b+1,f
  3533  0551  0826               	movf	___fladd@a+2,w
  3534  0552  1C03               	skipc
  3535  0553  0F26               	incfsz	___fladd@a+2,w
  3536  0554  02A2               	subwf	___fladd@b+2,f
  3537  0555  0827               	movf	___fladd@a+3,w
  3538  0556  1C03               	skipc
  3539  0557  0F27               	incfsz	___fladd@a+3,w
  3540  0558  02A3               	subwf	___fladd@b+3,f
  3541  0559                     l625:
  3542  0559  0823               	movf	___fladd@b+3,w
  3543  055A  0422               	iorwf	___fladd@b+2,w
  3544  055B  0421               	iorwf	___fladd@b+1,w
  3545  055C  0420               	iorwf	___fladd@b,w
  3546  055D  1D03               	skipz
  3547  055E  2D60               	goto	u2331
  3548  055F  2D61               	goto	u2330
  3549  0560                     u2331:
  3550  0560  2D8D               	goto	l2052
  3551  0561                     u2330:
  3552  0561                     l2032:
  3553  0561  0833               	movf	___fladd@grs,w
  3554  0562  1D03               	btfss	3,2
  3555  0563  2D65               	goto	u2341
  3556  0564  2D66               	goto	u2340
  3557  0565                     u2341:
  3558  0565  2D8D               	goto	l2052
  3559  0566                     u2340:
  3560  0566                     l2034:
  3561  0566  3000               	movlw	0
  3562  0567  00A3               	movwf	?___fladd+3
  3563  0568  3000               	movlw	0
  3564  0569  00A2               	movwf	?___fladd+2
  3565  056A  3000               	movlw	0
  3566  056B  00A1               	movwf	?___fladd+1
  3567  056C  3000               	movlw	0
  3568  056D  00A0               	movwf	?___fladd
  3569  056E  2E0B               	goto	l617
  3570  056F                     l2038:
  3571  056F  3001               	movlw	1
  3572  0570  00A8               	movwf	??___fladd
  3573  0571                     u2355:
  3574  0571  1003               	clrc
  3575  0572  0DA0               	rlf	___fladd@b,f
  3576  0573  0DA1               	rlf	___fladd@b+1,f
  3577  0574  0DA2               	rlf	___fladd@b+2,f
  3578  0575  0DA3               	rlf	___fladd@b+3,f
  3579  0576  0BA8               	decfsz	??___fladd,f
  3580  0577  2D71               	goto	u2355
  3581  0578                     l2040:
  3582  0578  1FB3               	btfss	___fladd@grs,7
  3583  0579  2D7B               	goto	u2361
  3584  057A  2D7C               	goto	u2360
  3585  057B                     u2361:
  3586  057B  2D7D               	goto	l629
  3587  057C                     u2360:
  3588  057C                     l2042:
  3589  057C  1420               	bsf	___fladd@b,0
  3590  057D                     l629:
  3591  057D  1C33               	btfss	___fladd@grs,0
  3592  057E  2D80               	goto	u2371
  3593  057F  2D81               	goto	u2370
  3594  0580                     u2371:
  3595  0580  2D84               	goto	l2046
  3596  0581                     u2370:
  3597  0581                     l2044:
  3598  0581  1403               	setc
  3599  0582  0DB3               	rlf	___fladd@grs,f
  3600  0583  2D86               	goto	l2048
  3601  0584                     l2046:
  3602  0584  1003               	clrc
  3603  0585  0DB3               	rlf	___fladd@grs,f
  3604  0586                     l2048:
  3605  0586  0832               	movf	___fladd@bexp,w
  3606  0587  1903               	btfsc	3,2
  3607  0588  2D8A               	goto	u2381
  3608  0589  2D8B               	goto	u2380
  3609  058A                     u2381:
  3610  058A  2D8D               	goto	l2052
  3611  058B                     u2380:
  3612  058B                     l2050:
  3613  058B  3001               	movlw	1
  3614  058C  02B2               	subwf	___fladd@bexp,f
  3615  058D                     l2052:
  3616  058D  1FA2               	btfss	___fladd@b+2,7
  3617  058E  2D90               	goto	u2391
  3618  058F  2D91               	goto	u2390
  3619  0590                     u2391:
  3620  0590  2D6F               	goto	l2038
  3621  0591                     u2390:
  3622  0591                     l2054:
  3623  0591  01B1               	clrf	___fladd@aexp
  3624  0592                     l2056:
  3625  0592  1FB3               	btfss	___fladd@grs,7
  3626  0593  2D95               	goto	u2401
  3627  0594  2D96               	goto	u2400
  3628  0595                     u2401:
  3629  0595  2DA4               	goto	l2064
  3630  0596                     u2400:
  3631  0596                     l2058:
  3632  0596  0833               	movf	___fladd@grs,w
  3633  0597  397F               	andlw	127
  3634  0598  1903               	btfsc	3,2
  3635  0599  2D9B               	goto	u2411
  3636  059A  2D9C               	goto	u2410
  3637  059B                     u2411:
  3638  059B  2D9F               	goto	l635
  3639  059C                     u2410:
  3640  059C                     l2060:
  3641  059C  01B1               	clrf	___fladd@aexp
  3642  059D  0AB1               	incf	___fladd@aexp,f
  3643  059E  2DA4               	goto	l2064
  3644  059F                     l635:
  3645  059F  1C20               	btfss	___fladd@b,0
  3646  05A0  2DA2               	goto	u2421
  3647  05A1  2DA3               	goto	u2420
  3648  05A2                     u2421:
  3649  05A2  2DA4               	goto	l2064
  3650  05A3                     u2420:
  3651  05A3  2D9C               	goto	l2060
  3652  05A4                     l2064:
  3653  05A4  0831               	movf	___fladd@aexp,w
  3654  05A5  1903               	btfsc	3,2
  3655  05A6  2DA8               	goto	u2431
  3656  05A7  2DA9               	goto	u2430
  3657  05A8                     u2431:
  3658  05A8  2DDD               	goto	l638
  3659  05A9                     u2430:
  3660  05A9                     l2066:
  3661  05A9  3001               	movlw	1
  3662  05AA  07A0               	addwf	___fladd@b,f
  3663  05AB  3000               	movlw	0
  3664  05AC  1803               	skipnc
  3665  05AD  3001               	movlw	1
  3666  05AE  07A1               	addwf	___fladd@b+1,f
  3667  05AF  3000               	movlw	0
  3668  05B0  1803               	skipnc
  3669  05B1  3001               	movlw	1
  3670  05B2  07A2               	addwf	___fladd@b+2,f
  3671  05B3  3000               	movlw	0
  3672  05B4  1803               	skipnc
  3673  05B5  3001               	movlw	1
  3674  05B6  07A3               	addwf	___fladd@b+3,f
  3675  05B7                     l2068:
  3676  05B7  1C23               	btfss	___fladd@b+3,0
  3677  05B8  2DBA               	goto	u2441
  3678  05B9  2DBB               	goto	u2440
  3679  05BA                     u2441:
  3680  05BA  2DDD               	goto	l638
  3681  05BB                     u2440:
  3682  05BB                     l2070:
  3683  05BB  0820               	movf	___fladd@b,w
  3684  05BC  00A8               	movwf	??___fladd
  3685  05BD  0821               	movf	___fladd@b+1,w
  3686  05BE  00A9               	movwf	??___fladd+1
  3687  05BF  0822               	movf	___fladd@b+2,w
  3688  05C0  00AA               	movwf	??___fladd+2
  3689  05C1  0823               	movf	___fladd@b+3,w
  3690  05C2  00AB               	movwf	??___fladd+3
  3691  05C3  3001               	movlw	1
  3692  05C4  00AC               	movwf	??___fladd+4
  3693  05C5                     u2455:
  3694  05C5  0D2B               	rlf	??___fladd+3,w
  3695  05C6  0CAB               	rrf	??___fladd+3,f
  3696  05C7  0CAA               	rrf	??___fladd+2,f
  3697  05C8  0CA9               	rrf	??___fladd+1,f
  3698  05C9  0CA8               	rrf	??___fladd,f
  3699  05CA                     u2450:
  3700  05CA  0BAC               	decfsz	??___fladd+4,f
  3701  05CB  2DC5               	goto	u2455
  3702  05CC  082B               	movf	??___fladd+3,w
  3703  05CD  00A3               	movwf	___fladd@b+3
  3704  05CE  082A               	movf	??___fladd+2,w
  3705  05CF  00A2               	movwf	___fladd@b+2
  3706  05D0  0829               	movf	??___fladd+1,w
  3707  05D1  00A1               	movwf	___fladd@b+1
  3708  05D2  0828               	movf	??___fladd,w
  3709  05D3  00A0               	movwf	___fladd@b
  3710  05D4  0A32               	incf	___fladd@bexp,w
  3711  05D5  1903               	btfsc	3,2
  3712  05D6  2DD8               	goto	u2461
  3713  05D7  2DD9               	goto	u2460
  3714  05D8                     u2461:
  3715  05D8  2DDD               	goto	l638
  3716  05D9                     u2460:
  3717  05D9                     l2072:
  3718  05D9  3001               	movlw	1
  3719  05DA  00A8               	movwf	??___fladd
  3720  05DB  0828               	movf	??___fladd,w
  3721  05DC  07B2               	addwf	___fladd@bexp,f
  3722  05DD                     l638:
  3723  05DD  0A32               	incf	___fladd@bexp,w
  3724  05DE  1903               	btfsc	3,2
  3725  05DF  2DE1               	goto	u2471
  3726  05E0  2DE2               	goto	u2470
  3727  05E1                     u2471:
  3728  05E1  2DE7               	goto	l2076
  3729  05E2                     u2470:
  3730  05E2                     l2074:
  3731  05E2  0832               	movf	___fladd@bexp,w
  3732  05E3  1D03               	btfss	3,2
  3733  05E4  2DE6               	goto	u2481
  3734  05E5  2DE7               	goto	u2480
  3735  05E6                     u2481:
  3736  05E6  2DF5               	goto	l2082
  3737  05E7                     u2480:
  3738  05E7                     l2076:
  3739  05E7  3000               	movlw	0
  3740  05E8  00A3               	movwf	___fladd@b+3
  3741  05E9  3000               	movlw	0
  3742  05EA  00A2               	movwf	___fladd@b+2
  3743  05EB  3000               	movlw	0
  3744  05EC  00A1               	movwf	___fladd@b+1
  3745  05ED  3000               	movlw	0
  3746  05EE  00A0               	movwf	___fladd@b
  3747  05EF                     l2078:
  3748  05EF  0832               	movf	___fladd@bexp,w
  3749  05F0  1D03               	btfss	3,2
  3750  05F1  2DF3               	goto	u2491
  3751  05F2  2DF4               	goto	u2490
  3752  05F3                     u2491:
  3753  05F3  2DF5               	goto	l2082
  3754  05F4                     u2490:
  3755  05F4                     l2080:
  3756  05F4  01B0               	clrf	___fladd@signs
  3757  05F5                     l2082:
  3758  05F5  1C32               	btfss	___fladd@bexp,0
  3759  05F6  2DF8               	goto	u2501
  3760  05F7  2DF9               	goto	u2500
  3761  05F8                     u2501:
  3762  05F8  2DFB               	goto	l2086
  3763  05F9                     u2500:
  3764  05F9                     l2084:
  3765  05F9  17A2               	bsf	___fladd@b+2,7
  3766  05FA  2DFF               	goto	l646
  3767  05FB                     l2086:
  3768  05FB  307F               	movlw	127
  3769  05FC  00A8               	movwf	??___fladd
  3770  05FD  0828               	movf	??___fladd,w
  3771  05FE  05A2               	andwf	___fladd@b+2,f
  3772  05FF                     l646:
  3773  05FF  0832               	movf	___fladd@bexp,w
  3774  0600  00A8               	movwf	??___fladd
  3775  0601  1003               	clrc
  3776  0602  0C28               	rrf	??___fladd,w
  3777  0603  00A9               	movwf	??___fladd+1
  3778  0604  0829               	movf	??___fladd+1,w
  3779  0605  00A3               	movwf	___fladd@b+3
  3780  0606                     l2088:
  3781  0606  1FB0               	btfss	___fladd@signs,7
  3782  0607  2E09               	goto	u2511
  3783  0608  2E0A               	goto	u2510
  3784  0609                     u2511:
  3785  0609  2E0B               	goto	l647
  3786  060A                     u2510:
  3787  060A                     l2090:
  3788  060A  17A3               	bsf	___fladd@b+3,7
  3789  060B                     l647:
  3790  060B                     l617:
  3791  060B  0008               	return
  3792  060C                     __end_of___fladd:
  3793                           
  3794                           	psect	text9
  3795  175F                     __ptext9:	
  3796 ;; *************** function ___flneg *****************
  3797 ;; Defined at:
  3798 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  f1              4    0[BANK0 ] unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  4    0[BANK0 ] unsigned char 
  3805 ;; Registers used:
  3806 ;;		wreg
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       4       0       0       0
  3813 ;;      Locals:         0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0
  3815 ;;      Totals:         0       4       0       0       0
  3816 ;;Total ram usage:        4 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    1
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_ftoa
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function ___flneg
  3828  175F                     ___flneg:
  3829  175F                     l2174:	
  3830                           ;incstack = 0
  3831                           ; Regs used in ___flneg: [wreg]
  3832                           
  3833  175F  1283               	bcf	3,5	;RP0=0, select bank0
  3834  1760  1303               	bcf	3,6	;RP1=0, select bank0
  3835  1761  0823               	movf	___flneg@f1+3,w
  3836  1762  0422               	iorwf	___flneg@f1+2,w
  3837  1763  0421               	iorwf	___flneg@f1+1,w
  3838  1764  0420               	iorwf	___flneg@f1,w
  3839  1765  1903               	skipnz
  3840  1766  2F68               	goto	u2681
  3841  1767  2F69               	goto	u2680
  3842  1768                     u2681:
  3843  1768  2F6B               	goto	l2178
  3844  1769                     u2680:
  3845  1769                     l2176:
  3846  1769  3080               	movlw	128
  3847  176A  06A3               	xorwf	___flneg@f1+3,f
  3848  176B                     l2178:
  3849  176B                     l493:
  3850  176B  0008               	return
  3851  176C                     __end_of___flneg:
  3852                           
  3853                           	psect	text10
  3854  0B4A                     __ptext10:	
  3855 ;; *************** function ___flge *****************
  3856 ;; Defined at:
  3857 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  ff1             4    0[BANK0 ] unsigned char 
  3860 ;;  ff2             4    4[BANK0 ] unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;		None               void
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3872 ;;      Params:         0       8       0       0       0
  3873 ;;      Locals:         0       0       0       0       0
  3874 ;;      Temps:          0       4       0       0       0
  3875 ;;      Totals:         0      12       0       0       0
  3876 ;;Total ram usage:       12 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    1
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_ftoa
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           
  3887                           ;psect for function ___flge
  3888  0B4A                     ___flge:
  3889  0B4A                     l2154:	
  3890                           ;incstack = 0
  3891                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3892                           
  3893  0B4A  3000               	movlw	0
  3894  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0B4D  0520               	andwf	___flge@ff1,w
  3897  0B4E  00A8               	movwf	??___flge
  3898  0B4F  3000               	movlw	0
  3899  0B50  0521               	andwf	___flge@ff1+1,w
  3900  0B51  00A9               	movwf	??___flge+1
  3901  0B52  3080               	movlw	128
  3902  0B53  0522               	andwf	___flge@ff1+2,w
  3903  0B54  00AA               	movwf	??___flge+2
  3904  0B55  307F               	movlw	127
  3905  0B56  0523               	andwf	___flge@ff1+3,w
  3906  0B57  00AB               	movwf	??___flge+3
  3907  0B58  082B               	movf	??___flge+3,w
  3908  0B59  042A               	iorwf	??___flge+2,w
  3909  0B5A  0429               	iorwf	??___flge+1,w
  3910  0B5B  0428               	iorwf	??___flge,w
  3911  0B5C  1D03               	skipz
  3912  0B5D  2B5F               	goto	u2611
  3913  0B5E  2B60               	goto	u2610
  3914  0B5F                     u2611:
  3915  0B5F  2B68               	goto	l485
  3916  0B60                     u2610:
  3917  0B60                     l2156:
  3918  0B60  3000               	movlw	0
  3919  0B61  00A3               	movwf	___flge@ff1+3
  3920  0B62  3000               	movlw	0
  3921  0B63  00A2               	movwf	___flge@ff1+2
  3922  0B64  3000               	movlw	0
  3923  0B65  00A1               	movwf	___flge@ff1+1
  3924  0B66  3000               	movlw	0
  3925  0B67  00A0               	movwf	___flge@ff1
  3926  0B68                     l485:
  3927  0B68  3000               	movlw	0
  3928  0B69  0524               	andwf	___flge@ff2,w
  3929  0B6A  00A8               	movwf	??___flge
  3930  0B6B  3000               	movlw	0
  3931  0B6C  0525               	andwf	___flge@ff2+1,w
  3932  0B6D  00A9               	movwf	??___flge+1
  3933  0B6E  3080               	movlw	128
  3934  0B6F  0526               	andwf	___flge@ff2+2,w
  3935  0B70  00AA               	movwf	??___flge+2
  3936  0B71  307F               	movlw	127
  3937  0B72  0527               	andwf	___flge@ff2+3,w
  3938  0B73  00AB               	movwf	??___flge+3
  3939  0B74  082B               	movf	??___flge+3,w
  3940  0B75  042A               	iorwf	??___flge+2,w
  3941  0B76  0429               	iorwf	??___flge+1,w
  3942  0B77  0428               	iorwf	??___flge,w
  3943  0B78  1D03               	skipz
  3944  0B79  2B7B               	goto	u2621
  3945  0B7A  2B7C               	goto	u2620
  3946  0B7B                     u2621:
  3947  0B7B  2B84               	goto	l2160
  3948  0B7C                     u2620:
  3949  0B7C                     l2158:
  3950  0B7C  3000               	movlw	0
  3951  0B7D  00A7               	movwf	___flge@ff2+3
  3952  0B7E  3000               	movlw	0
  3953  0B7F  00A6               	movwf	___flge@ff2+2
  3954  0B80  3000               	movlw	0
  3955  0B81  00A5               	movwf	___flge@ff2+1
  3956  0B82  3000               	movlw	0
  3957  0B83  00A4               	movwf	___flge@ff2
  3958  0B84                     l2160:
  3959  0B84  1FA3               	btfss	___flge@ff1+3,7
  3960  0B85  2B87               	goto	u2631
  3961  0B86  2B88               	goto	u2630
  3962  0B87                     u2631:
  3963  0B87  2BAC               	goto	l2164
  3964  0B88                     u2630:
  3965  0B88                     l2162:
  3966  0B88  3000               	movlw	0
  3967  0B89  00A8               	movwf	??___flge
  3968  0B8A  3000               	movlw	0
  3969  0B8B  00A9               	movwf	??___flge+1
  3970  0B8C  3000               	movlw	0
  3971  0B8D  00AA               	movwf	??___flge+2
  3972  0B8E  3080               	movlw	128
  3973  0B8F  00AB               	movwf	??___flge+3
  3974  0B90  0820               	movf	___flge@ff1,w
  3975  0B91  02A8               	subwf	??___flge,f
  3976  0B92  0821               	movf	___flge@ff1+1,w
  3977  0B93  1C03               	skipc
  3978  0B94  0F21               	incfsz	___flge@ff1+1,w
  3979  0B95  2B97               	goto	u2641
  3980  0B96  2B98               	goto	u2642
  3981  0B97                     u2641:
  3982  0B97  02A9               	subwf	??___flge+1,f
  3983  0B98                     u2642:
  3984  0B98  0822               	movf	___flge@ff1+2,w
  3985  0B99  1C03               	skipc
  3986  0B9A  0F22               	incfsz	___flge@ff1+2,w
  3987  0B9B  2B9D               	goto	u2643
  3988  0B9C  2B9E               	goto	u2644
  3989  0B9D                     u2643:
  3990  0B9D  02AA               	subwf	??___flge+2,f
  3991  0B9E                     u2644:
  3992  0B9E  0823               	movf	___flge@ff1+3,w
  3993  0B9F  1C03               	skipc
  3994  0BA0  0F23               	incfsz	___flge@ff1+3,w
  3995  0BA1  2BA3               	goto	u2645
  3996  0BA2  2BA4               	goto	u2646
  3997  0BA3                     u2645:
  3998  0BA3  02AB               	subwf	??___flge+3,f
  3999  0BA4                     u2646:
  4000  0BA4  082B               	movf	??___flge+3,w
  4001  0BA5  00A3               	movwf	___flge@ff1+3
  4002  0BA6  082A               	movf	??___flge+2,w
  4003  0BA7  00A2               	movwf	___flge@ff1+2
  4004  0BA8  0829               	movf	??___flge+1,w
  4005  0BA9  00A1               	movwf	___flge@ff1+1
  4006  0BAA  0828               	movf	??___flge,w
  4007  0BAB  00A0               	movwf	___flge@ff1
  4008  0BAC                     l2164:
  4009  0BAC  1FA7               	btfss	___flge@ff2+3,7
  4010  0BAD  2BAF               	goto	u2651
  4011  0BAE  2BB0               	goto	u2650
  4012  0BAF                     u2651:
  4013  0BAF  2BD4               	goto	l488
  4014  0BB0                     u2650:
  4015  0BB0                     l2166:
  4016  0BB0  3000               	movlw	0
  4017  0BB1  00A8               	movwf	??___flge
  4018  0BB2  3000               	movlw	0
  4019  0BB3  00A9               	movwf	??___flge+1
  4020  0BB4  3000               	movlw	0
  4021  0BB5  00AA               	movwf	??___flge+2
  4022  0BB6  3080               	movlw	128
  4023  0BB7  00AB               	movwf	??___flge+3
  4024  0BB8  0824               	movf	___flge@ff2,w
  4025  0BB9  02A8               	subwf	??___flge,f
  4026  0BBA  0825               	movf	___flge@ff2+1,w
  4027  0BBB  1C03               	skipc
  4028  0BBC  0F25               	incfsz	___flge@ff2+1,w
  4029  0BBD  2BBF               	goto	u2661
  4030  0BBE  2BC0               	goto	u2662
  4031  0BBF                     u2661:
  4032  0BBF  02A9               	subwf	??___flge+1,f
  4033  0BC0                     u2662:
  4034  0BC0  0826               	movf	___flge@ff2+2,w
  4035  0BC1  1C03               	skipc
  4036  0BC2  0F26               	incfsz	___flge@ff2+2,w
  4037  0BC3  2BC5               	goto	u2663
  4038  0BC4  2BC6               	goto	u2664
  4039  0BC5                     u2663:
  4040  0BC5  02AA               	subwf	??___flge+2,f
  4041  0BC6                     u2664:
  4042  0BC6  0827               	movf	___flge@ff2+3,w
  4043  0BC7  1C03               	skipc
  4044  0BC8  0F27               	incfsz	___flge@ff2+3,w
  4045  0BC9  2BCB               	goto	u2665
  4046  0BCA  2BCC               	goto	u2666
  4047  0BCB                     u2665:
  4048  0BCB  02AB               	subwf	??___flge+3,f
  4049  0BCC                     u2666:
  4050  0BCC  082B               	movf	??___flge+3,w
  4051  0BCD  00A7               	movwf	___flge@ff2+3
  4052  0BCE  082A               	movf	??___flge+2,w
  4053  0BCF  00A6               	movwf	___flge@ff2+2
  4054  0BD0  0829               	movf	??___flge+1,w
  4055  0BD1  00A5               	movwf	___flge@ff2+1
  4056  0BD2  0828               	movf	??___flge,w
  4057  0BD3  00A4               	movwf	___flge@ff2
  4058  0BD4                     l488:
  4059  0BD4  3080               	movlw	128
  4060  0BD5  06A3               	xorwf	___flge@ff1+3,f
  4061  0BD6  3080               	movlw	128
  4062  0BD7  06A7               	xorwf	___flge@ff2+3,f
  4063  0BD8  0827               	movf	___flge@ff2+3,w
  4064  0BD9  0223               	subwf	___flge@ff1+3,w
  4065  0BDA  1D03               	skipz
  4066  0BDB  2BE6               	goto	u2675
  4067  0BDC  0826               	movf	___flge@ff2+2,w
  4068  0BDD  0222               	subwf	___flge@ff1+2,w
  4069  0BDE  1D03               	skipz
  4070  0BDF  2BE6               	goto	u2675
  4071  0BE0  0825               	movf	___flge@ff2+1,w
  4072  0BE1  0221               	subwf	___flge@ff1+1,w
  4073  0BE2  1D03               	skipz
  4074  0BE3  2BE6               	goto	u2675
  4075  0BE4  0824               	movf	___flge@ff2,w
  4076  0BE5  0220               	subwf	___flge@ff1,w
  4077  0BE6                     u2675:
  4078  0BE6  1803               	skipnc
  4079  0BE7  2BE9               	goto	u2671
  4080  0BE8  2BEA               	goto	u2670
  4081  0BE9                     u2671:
  4082  0BE9  2BEC               	goto	l2170
  4083  0BEA                     u2670:
  4084  0BEA                     l2168:
  4085  0BEA  1003               	clrc
  4086  0BEB  2BED               	goto	l489
  4087  0BEC                     l2170:
  4088  0BEC  1403               	setc
  4089  0BED                     l489:
  4090  0BED  0008               	return
  4091  0BEE                     __end_of___flge:
  4092                           
  4093                           	psect	text11
  4094  090F                     __ptext11:	
  4095 ;; *************** function _UARTSendString *****************
  4096 ;; Defined at:
  4097 ;;		line 55 in file "UART.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  4100 ;;		 -> NULL(0), ftoa@buf(17), STR_2(2), STR_1(2), 
  4101 ;;  max_length      1    2[BANK0 ] const unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  i               2    6[BANK0 ] int 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       3       0       0       0
  4114 ;;      Locals:         0       2       0       0       0
  4115 ;;      Temps:          0       3       0       0       0
  4116 ;;      Totals:         0       8       0       0       0
  4117 ;;Total ram usage:        8 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    2
  4120 ;; This function calls:
  4121 ;;		_UARTSendChar
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function _UARTSendString
  4129  090F                     _UARTSendString:
  4130  090F                     l2616:	
  4131                           ;incstack = 0
  4132                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4133                           
  4134                           
  4135                           ;UART.c: 56:     int i = 0;
  4136  090F  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0910  1303               	bcf	3,6	;RP1=0, select bank0
  4138  0911  01A6               	clrf	UARTSendString@i
  4139  0912  01A7               	clrf	UARTSendString@i+1
  4140                           
  4141                           ;UART.c: 57:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  4142  0913  01A6               	clrf	UARTSendString@i
  4143  0914  01A7               	clrf	UARTSendString@i+1
  4144  0915  293A               	goto	l2622
  4145  0916                     l2618:
  4146                           
  4147                           ;UART.c: 58:         UARTSendChar(str[i]);
  4148  0916  0826               	movf	UARTSendString@i,w
  4149  0917  0720               	addwf	UARTSendString@str,w
  4150  0918  00A4               	movwf	??_UARTSendString+1
  4151  0919  0821               	movf	UARTSendString@str+1,w
  4152  091A  00A3               	movwf	??_UARTSendString
  4153  091B  1803               	skipnc
  4154  091C  0AA3               	incf	??_UARTSendString,f
  4155  091D  1FA6               	btfss	UARTSendString@i,7
  4156  091E  2920               	goto	u3560
  4157  091F  03A3               	decf	??_UARTSendString,f
  4158  0920                     u3560:
  4159  0920  1283               	bcf	3,5	;RP0=0, select bank0
  4160  0921  1303               	bcf	3,6	;RP1=0, select bank0
  4161  0922  0823               	movf	??_UARTSendString,w
  4162  0923  00A5               	movwf	??_UARTSendString+2
  4163  0924  0825               	movf	??_UARTSendString+2,w
  4164  0925  00FF               	movwf	btemp+1
  4165  0926  0824               	movf	??_UARTSendString+1,w
  4166  0927  0084               	movwf	4
  4167  0928  120A  158A  2000  120A  158A  	fcall	stringtab
  4168  092D  160A  118A  2739  120A  158A  	fcall	_UARTSendChar
  4169  0932                     l2620:
  4170                           
  4171                           ;UART.c: 59:     }
  4172  0932  3001               	movlw	1
  4173  0933  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0934  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0935  07A6               	addwf	UARTSendString@i,f
  4176  0936  1803               	skipnc
  4177  0937  0AA7               	incf	UARTSendString@i+1,f
  4178  0938  3000               	movlw	0
  4179  0939  07A7               	addwf	UARTSendString@i+1,f
  4180  093A                     l2622:
  4181  093A  0827               	movf	UARTSendString@i+1,w
  4182  093B  3A80               	xorlw	128
  4183  093C  00A3               	movwf	??_UARTSendString
  4184  093D  3080               	movlw	128
  4185  093E  0223               	subwf	??_UARTSendString,w
  4186  093F  1D03               	skipz
  4187  0940  2943               	goto	u3575
  4188  0941  0822               	movf	UARTSendString@max_length,w
  4189  0942  0226               	subwf	UARTSendString@i,w
  4190  0943                     u3575:
  4191  0943  1803               	skipnc
  4192  0944  2946               	goto	u3571
  4193  0945  2947               	goto	u3570
  4194  0946                     u3571:
  4195  0946  2965               	goto	l207
  4196  0947                     u3570:
  4197  0947                     l2624:
  4198  0947  1283               	bcf	3,5	;RP0=0, select bank0
  4199  0948  1303               	bcf	3,6	;RP1=0, select bank0
  4200  0949  0826               	movf	UARTSendString@i,w
  4201  094A  0720               	addwf	UARTSendString@str,w
  4202  094B  00A4               	movwf	??_UARTSendString+1
  4203  094C  0821               	movf	UARTSendString@str+1,w
  4204  094D  00A3               	movwf	??_UARTSendString
  4205  094E  1803               	skipnc
  4206  094F  0AA3               	incf	??_UARTSendString,f
  4207  0950  1FA6               	btfss	UARTSendString@i,7
  4208  0951  2953               	goto	u3580
  4209  0952  03A3               	decf	??_UARTSendString,f
  4210  0953                     u3580:
  4211  0953  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0954  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0955  0823               	movf	??_UARTSendString,w
  4214  0956  00A5               	movwf	??_UARTSendString+2
  4215  0957  0825               	movf	??_UARTSendString+2,w
  4216  0958  00FF               	movwf	btemp+1
  4217  0959  0824               	movf	??_UARTSendString+1,w
  4218  095A  0084               	movwf	4
  4219  095B  120A  158A  2000  120A  158A  	fcall	stringtab
  4220  0960  3A00               	xorlw	0
  4221  0961  1D03               	skipz
  4222  0962  2964               	goto	u3591
  4223  0963  2965               	goto	u3590
  4224  0964                     u3591:
  4225  0964  2916               	goto	l2618
  4226  0965                     u3590:
  4227  0965                     l207:
  4228  0965  0008               	return
  4229  0966                     __end_of_UARTSendString:
  4230                           
  4231                           	psect	text12
  4232  1739                     __ptext12:	
  4233 ;; *************** function _UARTSendChar *****************
  4234 ;; Defined at:
  4235 ;;		line 45 in file "UART.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  c               1    wreg     const unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  c               1    6[COMMON] const unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         0       0       0       0       0
  4250 ;;      Locals:         1       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0
  4252 ;;      Totals:         1       0       0       0       0
  4253 ;;Total ram usage:        1 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    1
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_main
  4260 ;;		_UARTSendString
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           
  4265                           ;psect for function _UARTSendChar
  4266  1739                     _UARTSendChar:
  4267                           
  4268                           ;incstack = 0
  4269                           ; Regs used in _UARTSendChar: [wreg]
  4270                           ;UARTSendChar@c stored from wreg
  4271  1739  00F6               	movwf	UARTSendChar@c
  4272  173A                     l2118:
  4273  173A                     l196:	
  4274                           ;UART.c: 46:     while (TXSTAbits.TRMT == 0);
  4275                           
  4276  173A  1683               	bsf	3,5	;RP0=1, select bank1
  4277  173B  1303               	bcf	3,6	;RP1=0, select bank1
  4278  173C  1C98               	btfss	24,1	;volatile
  4279  173D  2F3F               	goto	u2571
  4280  173E  2F40               	goto	u2570
  4281  173F                     u2571:
  4282  173F  2F3A               	goto	l196
  4283  1740                     u2570:
  4284  1740                     l2120:
  4285                           
  4286                           ;UART.c: 47:     TXREG = c;
  4287  1740  0876               	movf	UARTSendChar@c,w
  4288  1741  1283               	bcf	3,5	;RP0=0, select bank0
  4289  1742  1303               	bcf	3,6	;RP1=0, select bank0
  4290  1743  0099               	movwf	25	;volatile
  4291  1744                     l199:
  4292  1744  0008               	return
  4293  1745                     __end_of_UARTSendChar:
  4294                           
  4295                           	psect	text13
  4296  09CE                     __ptext13:	
  4297 ;; *************** function _UARTInit *****************
  4298 ;; Defined at:
  4299 ;;		line 14 in file "UART.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  4302 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4314 ;;      Params:         0       5       0       0       0
  4315 ;;      Locals:         0       0       0       0       0
  4316 ;;      Temps:          0       4       0       0       0
  4317 ;;      Totals:         0       9       0       0       0
  4318 ;;Total ram usage:        9 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    2
  4321 ;; This function calls:
  4322 ;;		___lldiv
  4323 ;; This function is called by:
  4324 ;;		_main
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           
  4329                           ;psect for function _UARTInit
  4330  09CE                     _UARTInit:
  4331  09CE                     l2516:	
  4332                           ;incstack = 0
  4333                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  4334                           
  4335                           
  4336                           ;UART.c: 16:     if (BRGH == 0) {
  4337  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  4338  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  4339  09D0  0831               	movf	UARTInit@BRGH,w
  4340  09D1  1D03               	btfss	3,2
  4341  09D2  29D4               	goto	u3491
  4342  09D3  29D5               	goto	u3490
  4343  09D4                     u3491:
  4344  09D4  2A04               	goto	l2522
  4345  09D5                     u3490:
  4346  09D5                     l2518:
  4347                           
  4348                           ;UART.c: 17:         SPBRG = 4000000/(64*baud_rate) - 1;
  4349  09D5  082D               	movf	UARTInit@baud_rate,w
  4350  09D6  00B2               	movwf	??_UARTInit
  4351  09D7  082E               	movf	UARTInit@baud_rate+1,w
  4352  09D8  00B3               	movwf	??_UARTInit+1
  4353  09D9  082F               	movf	UARTInit@baud_rate+2,w
  4354  09DA  00B4               	movwf	??_UARTInit+2
  4355  09DB  0830               	movf	UARTInit@baud_rate+3,w
  4356  09DC  00B5               	movwf	??_UARTInit+3
  4357  09DD  3006               	movlw	6
  4358  09DE                     u3505:
  4359  09DE  1003               	clrc
  4360  09DF  0DB2               	rlf	??_UARTInit,f
  4361  09E0  0DB3               	rlf	??_UARTInit+1,f
  4362  09E1  0DB4               	rlf	??_UARTInit+2,f
  4363  09E2  0DB5               	rlf	??_UARTInit+3,f
  4364  09E3                     u3500:
  4365  09E3  3EFF               	addlw	-1
  4366  09E4  1D03               	skipz
  4367  09E5  29DE               	goto	u3505
  4368  09E6  0835               	movf	??_UARTInit+3,w
  4369  09E7  00A3               	movwf	___lldiv@divisor+3
  4370  09E8  0834               	movf	??_UARTInit+2,w
  4371  09E9  00A2               	movwf	___lldiv@divisor+2
  4372  09EA  0833               	movf	??_UARTInit+1,w
  4373  09EB  00A1               	movwf	___lldiv@divisor+1
  4374  09EC  0832               	movf	??_UARTInit,w
  4375  09ED  00A0               	movwf	___lldiv@divisor
  4376  09EE  3000               	movlw	0
  4377  09EF  00A7               	movwf	___lldiv@dividend+3
  4378  09F0  303D               	movlw	61
  4379  09F1  00A6               	movwf	___lldiv@dividend+2
  4380  09F2  3009               	movlw	9
  4381  09F3  00A5               	movwf	___lldiv@dividend+1
  4382  09F4  3000               	movlw	0
  4383  09F5  00A4               	movwf	___lldiv@dividend
  4384  09F6  120A  158A  2166  120A  158A  	fcall	___lldiv
  4385  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  4386  09FC  1303               	bcf	3,6	;RP1=0, select bank0
  4387  09FD  0820               	movf	?___lldiv,w
  4388  09FE  3EFF               	addlw	255
  4389  09FF  1683               	bsf	3,5	;RP0=1, select bank1
  4390  0A00  1303               	bcf	3,6	;RP1=0, select bank1
  4391  0A01  0099               	movwf	25	;volatile
  4392  0A02                     l2520:
  4393                           
  4394                           ;UART.c: 18:         TXSTAbits.BRGH = 0;
  4395  0A02  1118               	bcf	24,2	;volatile
  4396                           
  4397                           ;UART.c: 19:     } else {
  4398  0A03  2A32               	goto	l2526
  4399  0A04                     l2522:
  4400                           
  4401                           ;UART.c: 20:         SPBRG = 4000000/(16*baud_rate) - 1;
  4402  0A04  082D               	movf	UARTInit@baud_rate,w
  4403  0A05  00B2               	movwf	??_UARTInit
  4404  0A06  082E               	movf	UARTInit@baud_rate+1,w
  4405  0A07  00B3               	movwf	??_UARTInit+1
  4406  0A08  082F               	movf	UARTInit@baud_rate+2,w
  4407  0A09  00B4               	movwf	??_UARTInit+2
  4408  0A0A  0830               	movf	UARTInit@baud_rate+3,w
  4409  0A0B  00B5               	movwf	??_UARTInit+3
  4410  0A0C  3004               	movlw	4
  4411  0A0D                     u3515:
  4412  0A0D  1003               	clrc
  4413  0A0E  0DB2               	rlf	??_UARTInit,f
  4414  0A0F  0DB3               	rlf	??_UARTInit+1,f
  4415  0A10  0DB4               	rlf	??_UARTInit+2,f
  4416  0A11  0DB5               	rlf	??_UARTInit+3,f
  4417  0A12                     u3510:
  4418  0A12  3EFF               	addlw	-1
  4419  0A13  1D03               	skipz
  4420  0A14  2A0D               	goto	u3515
  4421  0A15  0835               	movf	??_UARTInit+3,w
  4422  0A16  00A3               	movwf	___lldiv@divisor+3
  4423  0A17  0834               	movf	??_UARTInit+2,w
  4424  0A18  00A2               	movwf	___lldiv@divisor+2
  4425  0A19  0833               	movf	??_UARTInit+1,w
  4426  0A1A  00A1               	movwf	___lldiv@divisor+1
  4427  0A1B  0832               	movf	??_UARTInit,w
  4428  0A1C  00A0               	movwf	___lldiv@divisor
  4429  0A1D  3000               	movlw	0
  4430  0A1E  00A7               	movwf	___lldiv@dividend+3
  4431  0A1F  303D               	movlw	61
  4432  0A20  00A6               	movwf	___lldiv@dividend+2
  4433  0A21  3009               	movlw	9
  4434  0A22  00A5               	movwf	___lldiv@dividend+1
  4435  0A23  3000               	movlw	0
  4436  0A24  00A4               	movwf	___lldiv@dividend
  4437  0A25  120A  158A  2166  120A  158A  	fcall	___lldiv
  4438  0A2A  1283               	bcf	3,5	;RP0=0, select bank0
  4439  0A2B  1303               	bcf	3,6	;RP1=0, select bank0
  4440  0A2C  0820               	movf	?___lldiv,w
  4441  0A2D  3EFF               	addlw	255
  4442  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  4443  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  4444  0A30  0099               	movwf	25	;volatile
  4445  0A31                     l2524:
  4446                           
  4447                           ;UART.c: 21:         TXSTAbits.BRGH = 1;
  4448  0A31  1518               	bsf	24,2	;volatile
  4449  0A32                     l2526:
  4450                           
  4451                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  4452  0A32  1318               	bcf	24,6	;volatile
  4453  0A33                     l2528:
  4454                           
  4455                           ;UART.c: 26:     TXSTAbits.TXEN = 1;
  4456  0A33  1698               	bsf	24,5	;volatile
  4457  0A34                     l2530:
  4458                           
  4459                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  4460  0A34  1218               	bcf	24,4	;volatile
  4461  0A35                     l2532:
  4462                           
  4463                           ;UART.c: 30:     RCSTAbits.SPEN = 1;
  4464  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0A37  1798               	bsf	24,7	;volatile
  4467  0A38                     l2534:
  4468                           
  4469                           ;UART.c: 31:     RCSTAbits.RX9 = 0;
  4470  0A38  1318               	bcf	24,6	;volatile
  4471  0A39                     l2536:
  4472                           
  4473                           ;UART.c: 32:     RCSTAbits.CREN = 1;
  4474  0A39  1618               	bsf	24,4	;volatile
  4475  0A3A                     l2538:
  4476                           
  4477                           ;UART.c: 33:     RCSTAbits.FERR = 0;
  4478  0A3A  1118               	bcf	24,2	;volatile
  4479  0A3B                     l2540:
  4480                           
  4481                           ;UART.c: 34:     RCSTAbits.OERR = 0;
  4482  0A3B  1098               	bcf	24,1	;volatile
  4483  0A3C                     l2542:
  4484                           
  4485                           ;UART.c: 37:     TRISCbits.TRISC7 = 1;
  4486  0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  4487  0A3D  1303               	bcf	3,6	;RP1=0, select bank1
  4488  0A3E  1787               	bsf	7,7	;volatile
  4489  0A3F                     l2544:
  4490                           
  4491                           ;UART.c: 38:     TRISCbits.TRISC6 = 0;
  4492  0A3F  1307               	bcf	7,6	;volatile
  4493  0A40                     l193:
  4494  0A40  0008               	return
  4495  0A41                     __end_of_UARTInit:
  4496                           
  4497                           	psect	text14
  4498  0966                     __ptext14:	
  4499 ;; *************** function ___lldiv *****************
  4500 ;; Defined at:
  4501 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  divisor         4    0[BANK0 ] unsigned long 
  4504 ;;  dividend        4    4[BANK0 ] unsigned long 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  quotient        4    8[BANK0 ] unsigned long 
  4507 ;;  counter         1   12[BANK0 ] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  4    0[BANK0 ] unsigned long 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4517 ;;      Params:         0       8       0       0       0
  4518 ;;      Locals:         0       5       0       0       0
  4519 ;;      Temps:          1       0       0       0       0
  4520 ;;      Totals:         1      13       0       0       0
  4521 ;;Total ram usage:       14 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    1
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_UARTInit
  4528 ;;		_sprintf
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           
  4533                           ;psect for function ___lldiv
  4534  0966                     ___lldiv:
  4535  0966                     l1854:	
  4536                           ;incstack = 0
  4537                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4538                           
  4539  0966  3000               	movlw	0
  4540  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0968  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0969  00AB               	movwf	___lldiv@quotient+3
  4543  096A  3000               	movlw	0
  4544  096B  00AA               	movwf	___lldiv@quotient+2
  4545  096C  3000               	movlw	0
  4546  096D  00A9               	movwf	___lldiv@quotient+1
  4547  096E  3000               	movlw	0
  4548  096F  00A8               	movwf	___lldiv@quotient
  4549  0970  0823               	movf	___lldiv@divisor+3,w
  4550  0971  0422               	iorwf	___lldiv@divisor+2,w
  4551  0972  0421               	iorwf	___lldiv@divisor+1,w
  4552  0973  0420               	iorwf	___lldiv@divisor,w
  4553  0974  1903               	skipnz
  4554  0975  2977               	goto	u1931
  4555  0976  2978               	goto	u1930
  4556  0977                     u1931:
  4557  0977  29C5               	goto	l1874
  4558  0978                     u1930:
  4559  0978                     l1856:
  4560  0978  01AC               	clrf	___lldiv@counter
  4561  0979  0AAC               	incf	___lldiv@counter,f
  4562  097A  2988               	goto	l1860
  4563  097B                     l1858:
  4564  097B  3001               	movlw	1
  4565  097C  00F6               	movwf	??___lldiv
  4566  097D                     u1945:
  4567  097D  1003               	clrc
  4568  097E  0DA0               	rlf	___lldiv@divisor,f
  4569  097F  0DA1               	rlf	___lldiv@divisor+1,f
  4570  0980  0DA2               	rlf	___lldiv@divisor+2,f
  4571  0981  0DA3               	rlf	___lldiv@divisor+3,f
  4572  0982  0BF6               	decfsz	??___lldiv,f
  4573  0983  297D               	goto	u1945
  4574  0984  3001               	movlw	1
  4575  0985  00F6               	movwf	??___lldiv
  4576  0986  0876               	movf	??___lldiv,w
  4577  0987  07AC               	addwf	___lldiv@counter,f
  4578  0988                     l1860:
  4579  0988  1FA3               	btfss	___lldiv@divisor+3,7
  4580  0989  298B               	goto	u1951
  4581  098A  298C               	goto	u1950
  4582  098B                     u1951:
  4583  098B  297B               	goto	l1858
  4584  098C                     u1950:
  4585  098C                     l1862:
  4586  098C  3001               	movlw	1
  4587  098D  00F6               	movwf	??___lldiv
  4588  098E                     u1965:
  4589  098E  1003               	clrc
  4590  098F  0DA8               	rlf	___lldiv@quotient,f
  4591  0990  0DA9               	rlf	___lldiv@quotient+1,f
  4592  0991  0DAA               	rlf	___lldiv@quotient+2,f
  4593  0992  0DAB               	rlf	___lldiv@quotient+3,f
  4594  0993  0BF6               	decfsz	??___lldiv,f
  4595  0994  298E               	goto	u1965
  4596  0995                     l1864:
  4597  0995  0823               	movf	___lldiv@divisor+3,w
  4598  0996  0227               	subwf	___lldiv@dividend+3,w
  4599  0997  1D03               	skipz
  4600  0998  29A3               	goto	u1975
  4601  0999  0822               	movf	___lldiv@divisor+2,w
  4602  099A  0226               	subwf	___lldiv@dividend+2,w
  4603  099B  1D03               	skipz
  4604  099C  29A3               	goto	u1975
  4605  099D  0821               	movf	___lldiv@divisor+1,w
  4606  099E  0225               	subwf	___lldiv@dividend+1,w
  4607  099F  1D03               	skipz
  4608  09A0  29A3               	goto	u1975
  4609  09A1  0820               	movf	___lldiv@divisor,w
  4610  09A2  0224               	subwf	___lldiv@dividend,w
  4611  09A3                     u1975:
  4612  09A3  1C03               	skipc
  4613  09A4  29A6               	goto	u1971
  4614  09A5  29A7               	goto	u1970
  4615  09A6                     u1971:
  4616  09A6  29B6               	goto	l1870
  4617  09A7                     u1970:
  4618  09A7                     l1866:
  4619  09A7  0820               	movf	___lldiv@divisor,w
  4620  09A8  02A4               	subwf	___lldiv@dividend,f
  4621  09A9  0821               	movf	___lldiv@divisor+1,w
  4622  09AA  1C03               	skipc
  4623  09AB  0F21               	incfsz	___lldiv@divisor+1,w
  4624  09AC  02A5               	subwf	___lldiv@dividend+1,f
  4625  09AD  0822               	movf	___lldiv@divisor+2,w
  4626  09AE  1C03               	skipc
  4627  09AF  0F22               	incfsz	___lldiv@divisor+2,w
  4628  09B0  02A6               	subwf	___lldiv@dividend+2,f
  4629  09B1  0823               	movf	___lldiv@divisor+3,w
  4630  09B2  1C03               	skipc
  4631  09B3  0F23               	incfsz	___lldiv@divisor+3,w
  4632  09B4  02A7               	subwf	___lldiv@dividend+3,f
  4633  09B5                     l1868:
  4634  09B5  1428               	bsf	___lldiv@quotient,0
  4635  09B6                     l1870:
  4636  09B6  3001               	movlw	1
  4637  09B7                     u1985:
  4638  09B7  1003               	clrc
  4639  09B8  0CA3               	rrf	___lldiv@divisor+3,f
  4640  09B9  0CA2               	rrf	___lldiv@divisor+2,f
  4641  09BA  0CA1               	rrf	___lldiv@divisor+1,f
  4642  09BB  0CA0               	rrf	___lldiv@divisor,f
  4643  09BC  3EFF               	addlw	-1
  4644  09BD  1D03               	skipz
  4645  09BE  29B7               	goto	u1985
  4646  09BF                     l1872:
  4647  09BF  3001               	movlw	1
  4648  09C0  02AC               	subwf	___lldiv@counter,f
  4649  09C1  1D03               	btfss	3,2
  4650  09C2  29C4               	goto	u1991
  4651  09C3  29C5               	goto	u1990
  4652  09C4                     u1991:
  4653  09C4  298C               	goto	l1862
  4654  09C5                     u1990:
  4655  09C5                     l1874:
  4656  09C5  082B               	movf	___lldiv@quotient+3,w
  4657  09C6  00A3               	movwf	?___lldiv+3
  4658  09C7  082A               	movf	___lldiv@quotient+2,w
  4659  09C8  00A2               	movwf	?___lldiv+2
  4660  09C9  0829               	movf	___lldiv@quotient+1,w
  4661  09CA  00A1               	movwf	?___lldiv+1
  4662  09CB  0828               	movf	___lldiv@quotient,w
  4663  09CC  00A0               	movwf	?___lldiv
  4664  09CD                     l347:
  4665  09CD  0008               	return
  4666  09CE                     __end_of___lldiv:
  4667                           
  4668                           	psect	text15
  4669  060C                     __ptext15:	
  4670 ;; *************** function _I2C_Read_MPU *****************
  4671 ;; Defined at:
  4672 ;;		line 145 in file "main.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  data_send       1    wreg     PTR float 
  4675 ;;		 -> valor_arreglado(12), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  data_send       1   58[BANK0 ] PTR float 
  4678 ;;		 -> valor_arreglado(12), 
  4679 ;;  Addr            2   56[BANK0 ] int 
  4680 ;;  temp            6   44[BANK0 ] unsigned char [6]
  4681 ;;  valor_origin    6   50[BANK0 ] int [3]
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4691 ;;      Params:         0       0       0       0       0
  4692 ;;      Locals:         0      15       0       0       0
  4693 ;;      Temps:          0       4       0       0       0
  4694 ;;      Totals:         0      19       0       0       0
  4695 ;;Total ram usage:       19 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    4
  4698 ;; This function calls:
  4699 ;;		_I2C_Master_RepeatedStart
  4700 ;;		_I2C_Master_Stop
  4701 ;;		_I2C_Master_Write
  4702 ;;		_I2C_Read
  4703 ;;		_I2C_Start
  4704 ;;		___flmul
  4705 ;;		___xxtofl
  4706 ;; This function is called by:
  4707 ;;		_main
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           
  4712                           ;psect for function _I2C_Read_MPU
  4713  060C                     _I2C_Read_MPU:
  4714                           
  4715                           ;incstack = 0
  4716                           ; Regs used in _I2C_Read_MPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4717                           ;I2C_Read_MPU@data_send stored from wreg
  4718  060C  1283               	bcf	3,5	;RP0=0, select bank0
  4719  060D  1303               	bcf	3,6	;RP1=0, select bank0
  4720  060E  00DA               	movwf	I2C_Read_MPU@data_send
  4721  060F                     l2560:
  4722  060F  30D0               	movlw	208
  4723  0610  160A  118A  277C  120A  118A  	fcall	_I2C_Start
  4724  0615                     l78:
  4725  0615  1683               	bsf	3,5	;RP0=1, select bank1
  4726  0616  1303               	bcf	3,6	;RP1=0, select bank1
  4727  0617  1B11               	btfsc	17,6	;volatile
  4728  0618  2E1A               	goto	u3521
  4729  0619  2E1B               	goto	u3520
  4730  061A                     u3521:
  4731  061A  2E15               	goto	l78
  4732  061B                     u3520:
  4733  061B                     l2562:
  4734  061B  303B               	movlw	59
  4735  061C  160A  118A  276C  120A  118A  	fcall	_I2C_Master_Write
  4736  0621                     l81:
  4737  0621  1683               	bsf	3,5	;RP0=1, select bank1
  4738  0622  1303               	bcf	3,6	;RP1=0, select bank1
  4739  0623  1B11               	btfsc	17,6	;volatile
  4740  0624  2E26               	goto	u3531
  4741  0625  2E27               	goto	u3530
  4742  0626                     u3531:
  4743  0626  2E21               	goto	l81
  4744  0627                     u3530:
  4745  0627                     l2564:
  4746  0627  160A  118A  271E  120A  118A  	fcall	_I2C_Master_RepeatedStart
  4747  062C  30D1               	movlw	209
  4748  062D  160A  118A  276C  120A  118A  	fcall	_I2C_Master_Write
  4749  0632                     l2566:
  4750  0632  1283               	bcf	3,5	;RP0=0, select bank0
  4751  0633  1303               	bcf	3,6	;RP1=0, select bank0
  4752  0634  01D8               	clrf	I2C_Read_MPU@Addr
  4753  0635  01D9               	clrf	I2C_Read_MPU@Addr+1
  4754  0636                     l2572:
  4755  0636  3000               	movlw	0
  4756  0637  120A  158A  2059  120A  118A  	fcall	_I2C_Read
  4757  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4758  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4759  063E  00C8               	movwf	??_I2C_Read_MPU
  4760  063F  0858               	movf	I2C_Read_MPU@Addr,w
  4761  0640  3E4C               	addlw	(low (I2C_Read_MPU@temp| 0))& (0+255)
  4762  0641  0084               	movwf	4
  4763  0642  0848               	movf	??_I2C_Read_MPU,w
  4764  0643  1383               	bcf	3,7	;select IRP bank0
  4765  0644  0080               	movwf	0
  4766  0645                     l2574:
  4767  0645  3001               	movlw	1
  4768  0646  07D8               	addwf	I2C_Read_MPU@Addr,f
  4769  0647  1803               	skipnc
  4770  0648  0AD9               	incf	I2C_Read_MPU@Addr+1,f
  4771  0649  3000               	movlw	0
  4772  064A  07D9               	addwf	I2C_Read_MPU@Addr+1,f
  4773  064B                     l2576:
  4774  064B  0859               	movf	I2C_Read_MPU@Addr+1,w
  4775  064C  3A80               	xorlw	128
  4776  064D  00FF               	movwf	btemp+1
  4777  064E  3080               	movlw	128
  4778  064F  027F               	subwf	btemp+1,w
  4779  0650  1D03               	skipz
  4780  0651  2E54               	goto	u3545
  4781  0652  3005               	movlw	5
  4782  0653  0258               	subwf	I2C_Read_MPU@Addr,w
  4783  0654                     u3545:
  4784  0654  1C03               	skipc
  4785  0655  2E57               	goto	u3541
  4786  0656  2E58               	goto	u3540
  4787  0657                     u3541:
  4788  0657  2E36               	goto	l2572
  4789  0658                     u3540:
  4790  0658                     l2578:
  4791  0658  3001               	movlw	1
  4792  0659  120A  158A  2059  120A  118A  	fcall	_I2C_Read
  4793  065E  1283               	bcf	3,5	;RP0=0, select bank0
  4794  065F  1303               	bcf	3,6	;RP1=0, select bank0
  4795  0660  00C8               	movwf	??_I2C_Read_MPU
  4796  0661  0848               	movf	??_I2C_Read_MPU,w
  4797  0662  00D1               	movwf	I2C_Read_MPU@temp+5
  4798  0663  160A  118A  2715  120A  118A  	fcall	_I2C_Master_Stop
  4799  0668                     l2580:
  4800  0668  1283               	bcf	3,5	;RP0=0, select bank0
  4801  0669  1303               	bcf	3,6	;RP1=0, select bank0
  4802  066A  084D               	movf	I2C_Read_MPU@temp+1,w
  4803  066B  00C8               	movwf	??_I2C_Read_MPU
  4804  066C  01C9               	clrf	??_I2C_Read_MPU+1
  4805  066D  084C               	movf	I2C_Read_MPU@temp,w
  4806  066E  00CA               	movwf	??_I2C_Read_MPU+2
  4807  066F  01CB               	clrf	??_I2C_Read_MPU+3
  4808  0670  084A               	movf	??_I2C_Read_MPU+2,w
  4809  0671  00CB               	movwf	??_I2C_Read_MPU+3
  4810  0672  01CA               	clrf	??_I2C_Read_MPU+2
  4811  0673  0848               	movf	??_I2C_Read_MPU,w
  4812  0674  044A               	iorwf	??_I2C_Read_MPU+2,w
  4813  0675  00D2               	movwf	I2C_Read_MPU@valor_original
  4814  0676  0849               	movf	??_I2C_Read_MPU+1,w
  4815  0677  044B               	iorwf	??_I2C_Read_MPU+3,w
  4816  0678  00D3               	movwf	I2C_Read_MPU@valor_original+1
  4817  0679                     l2582:
  4818  0679  084F               	movf	I2C_Read_MPU@temp+3,w
  4819  067A  00C8               	movwf	??_I2C_Read_MPU
  4820  067B  01C9               	clrf	??_I2C_Read_MPU+1
  4821  067C  084E               	movf	I2C_Read_MPU@temp+2,w
  4822  067D  00CA               	movwf	??_I2C_Read_MPU+2
  4823  067E  01CB               	clrf	??_I2C_Read_MPU+3
  4824  067F  084A               	movf	??_I2C_Read_MPU+2,w
  4825  0680  00CB               	movwf	??_I2C_Read_MPU+3
  4826  0681  01CA               	clrf	??_I2C_Read_MPU+2
  4827  0682  0848               	movf	??_I2C_Read_MPU,w
  4828  0683  044A               	iorwf	??_I2C_Read_MPU+2,w
  4829  0684  00D4               	movwf	I2C_Read_MPU@valor_original+2
  4830  0685  0849               	movf	??_I2C_Read_MPU+1,w
  4831  0686  044B               	iorwf	??_I2C_Read_MPU+3,w
  4832  0687  00D5               	movwf	I2C_Read_MPU@valor_original+3
  4833  0688                     l2584:
  4834  0688  0851               	movf	I2C_Read_MPU@temp+5,w
  4835  0689  00C8               	movwf	??_I2C_Read_MPU
  4836  068A  01C9               	clrf	??_I2C_Read_MPU+1
  4837  068B  0850               	movf	I2C_Read_MPU@temp+4,w
  4838  068C  00CA               	movwf	??_I2C_Read_MPU+2
  4839  068D  01CB               	clrf	??_I2C_Read_MPU+3
  4840  068E  084A               	movf	??_I2C_Read_MPU+2,w
  4841  068F  00CB               	movwf	??_I2C_Read_MPU+3
  4842  0690  01CA               	clrf	??_I2C_Read_MPU+2
  4843  0691  0848               	movf	??_I2C_Read_MPU,w
  4844  0692  044A               	iorwf	??_I2C_Read_MPU+2,w
  4845  0693  00D6               	movwf	I2C_Read_MPU@valor_original+4
  4846  0694  0849               	movf	??_I2C_Read_MPU+1,w
  4847  0695  044B               	iorwf	??_I2C_Read_MPU+3,w
  4848  0696  00D7               	movwf	I2C_Read_MPU@valor_original+5
  4849  0697                     l2586:
  4850  0697  303A               	movlw	58
  4851  0698  00B1               	movwf	___flmul@b+3
  4852  0699  301C               	movlw	28
  4853  069A  00B0               	movwf	___flmul@b+2
  4854  069B  30D0               	movlw	208
  4855  069C  00AF               	movwf	___flmul@b+1
  4856  069D  3086               	movlw	134
  4857  069E  00AE               	movwf	___flmul@b
  4858  069F  0852               	movf	I2C_Read_MPU@valor_original,w
  4859  06A0  00A0               	movwf	___xxtofl@val
  4860  06A1  0853               	movf	I2C_Read_MPU@valor_original+1,w
  4861  06A2  00A1               	movwf	___xxtofl@val+1
  4862  06A3  3000               	movlw	0
  4863  06A4  1BA1               	btfsc	___xxtofl@val+1,7
  4864  06A5  30FF               	movlw	255
  4865  06A6  00A2               	movwf	___xxtofl@val+2
  4866  06A7  00A3               	movwf	___xxtofl@val+3
  4867  06A8  3001               	movlw	1
  4868  06A9  120A  118A  273C  120A  118A  	fcall	___xxtofl
  4869  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  4870  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  4871  06B0  0823               	movf	?___xxtofl+3,w
  4872  06B1  00B5               	movwf	___flmul@a+3
  4873  06B2  0822               	movf	?___xxtofl+2,w
  4874  06B3  00B4               	movwf	___flmul@a+2
  4875  06B4  0821               	movf	?___xxtofl+1,w
  4876  06B5  00B3               	movwf	___flmul@a+1
  4877  06B6  0820               	movf	?___xxtofl,w
  4878  06B7  00B2               	movwf	___flmul@a
  4879  06B8  120A  118A  2023  120A  118A  	fcall	___flmul
  4880  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  4881  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  4882  06BF  085A               	movf	I2C_Read_MPU@data_send,w
  4883  06C0  0084               	movwf	4
  4884  06C1  082E               	movf	?___flmul,w
  4885  06C2  1383               	bcf	3,7	;select IRP bank0
  4886  06C3  0080               	movwf	0
  4887  06C4  0A84               	incf	4,f
  4888  06C5  082F               	movf	?___flmul+1,w
  4889  06C6  0080               	movwf	0
  4890  06C7  0A84               	incf	4,f
  4891  06C8  0830               	movf	?___flmul+2,w
  4892  06C9  0080               	movwf	0
  4893  06CA  0A84               	incf	4,f
  4894  06CB  0831               	movf	?___flmul+3,w
  4895  06CC  0080               	movwf	0
  4896  06CD                     l2588:
  4897  06CD  303A               	movlw	58
  4898  06CE  00B1               	movwf	___flmul@b+3
  4899  06CF  301C               	movlw	28
  4900  06D0  00B0               	movwf	___flmul@b+2
  4901  06D1  30D0               	movlw	208
  4902  06D2  00AF               	movwf	___flmul@b+1
  4903  06D3  3086               	movlw	134
  4904  06D4  00AE               	movwf	___flmul@b
  4905  06D5  0854               	movf	I2C_Read_MPU@valor_original+2,w
  4906  06D6  00A0               	movwf	___xxtofl@val
  4907  06D7  0855               	movf	I2C_Read_MPU@valor_original+3,w
  4908  06D8  00A1               	movwf	___xxtofl@val+1
  4909  06D9  3000               	movlw	0
  4910  06DA  1BA1               	btfsc	___xxtofl@val+1,7
  4911  06DB  30FF               	movlw	255
  4912  06DC  00A2               	movwf	___xxtofl@val+2
  4913  06DD  00A3               	movwf	___xxtofl@val+3
  4914  06DE  3001               	movlw	1
  4915  06DF  120A  118A  273C  120A  118A  	fcall	___xxtofl
  4916  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4917  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4918  06E6  0823               	movf	?___xxtofl+3,w
  4919  06E7  00B5               	movwf	___flmul@a+3
  4920  06E8  0822               	movf	?___xxtofl+2,w
  4921  06E9  00B4               	movwf	___flmul@a+2
  4922  06EA  0821               	movf	?___xxtofl+1,w
  4923  06EB  00B3               	movwf	___flmul@a+1
  4924  06EC  0820               	movf	?___xxtofl,w
  4925  06ED  00B2               	movwf	___flmul@a
  4926  06EE  120A  118A  2023  120A  118A  	fcall	___flmul
  4927  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4928  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4929  06F5  085A               	movf	I2C_Read_MPU@data_send,w
  4930  06F6  3E04               	addlw	4
  4931  06F7  0084               	movwf	4
  4932  06F8  082E               	movf	?___flmul,w
  4933  06F9  1383               	bcf	3,7	;select IRP bank0
  4934  06FA  0080               	movwf	0
  4935  06FB  0A84               	incf	4,f
  4936  06FC  082F               	movf	?___flmul+1,w
  4937  06FD  0080               	movwf	0
  4938  06FE  0A84               	incf	4,f
  4939  06FF  0830               	movf	?___flmul+2,w
  4940  0700  0080               	movwf	0
  4941  0701  0A84               	incf	4,f
  4942  0702  0831               	movf	?___flmul+3,w
  4943  0703  0080               	movwf	0
  4944  0704                     l2590:
  4945  0704  303A               	movlw	58
  4946  0705  00B1               	movwf	___flmul@b+3
  4947  0706  301C               	movlw	28
  4948  0707  00B0               	movwf	___flmul@b+2
  4949  0708  30D0               	movlw	208
  4950  0709  00AF               	movwf	___flmul@b+1
  4951  070A  3086               	movlw	134
  4952  070B  00AE               	movwf	___flmul@b
  4953  070C  0856               	movf	I2C_Read_MPU@valor_original+4,w
  4954  070D  00A0               	movwf	___xxtofl@val
  4955  070E  0857               	movf	I2C_Read_MPU@valor_original+5,w
  4956  070F  00A1               	movwf	___xxtofl@val+1
  4957  0710  3000               	movlw	0
  4958  0711  1BA1               	btfsc	___xxtofl@val+1,7
  4959  0712  30FF               	movlw	255
  4960  0713  00A2               	movwf	___xxtofl@val+2
  4961  0714  00A3               	movwf	___xxtofl@val+3
  4962  0715  3001               	movlw	1
  4963  0716  120A  118A  273C  120A  118A  	fcall	___xxtofl
  4964  071B  1283               	bcf	3,5	;RP0=0, select bank0
  4965  071C  1303               	bcf	3,6	;RP1=0, select bank0
  4966  071D  0823               	movf	?___xxtofl+3,w
  4967  071E  00B5               	movwf	___flmul@a+3
  4968  071F  0822               	movf	?___xxtofl+2,w
  4969  0720  00B4               	movwf	___flmul@a+2
  4970  0721  0821               	movf	?___xxtofl+1,w
  4971  0722  00B3               	movwf	___flmul@a+1
  4972  0723  0820               	movf	?___xxtofl,w
  4973  0724  00B2               	movwf	___flmul@a
  4974  0725  120A  118A  2023  120A  118A  	fcall	___flmul
  4975  072A  1283               	bcf	3,5	;RP0=0, select bank0
  4976  072B  1303               	bcf	3,6	;RP1=0, select bank0
  4977  072C  085A               	movf	I2C_Read_MPU@data_send,w
  4978  072D  3E08               	addlw	8
  4979  072E  0084               	movwf	4
  4980  072F  082E               	movf	?___flmul,w
  4981  0730  1383               	bcf	3,7	;select IRP bank0
  4982  0731  0080               	movwf	0
  4983  0732  0A84               	incf	4,f
  4984  0733  082F               	movf	?___flmul+1,w
  4985  0734  0080               	movwf	0
  4986  0735  0A84               	incf	4,f
  4987  0736  0830               	movf	?___flmul+2,w
  4988  0737  0080               	movwf	0
  4989  0738  0A84               	incf	4,f
  4990  0739  0831               	movf	?___flmul+3,w
  4991  073A  0080               	movwf	0
  4992  073B                     l86:
  4993  073B  0008               	return
  4994  073C                     __end_of_I2C_Read_MPU:
  4995                           
  4996                           	psect	text16
  4997  073C                     __ptext16:	
  4998 ;; *************** function ___xxtofl *****************
  4999 ;; Defined at:
  5000 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  sign            1    wreg     unsigned char 
  5003 ;;  val             4    0[BANK0 ] long 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  sign            1    8[BANK0 ] unsigned char 
  5006 ;;  arg             4   10[BANK0 ] unsigned long 
  5007 ;;  exp             1    9[BANK0 ] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  4    0[BANK0 ] unsigned char 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5017 ;;      Params:         0       4       0       0       0
  5018 ;;      Locals:         0       6       0       0       0
  5019 ;;      Temps:          0       4       0       0       0
  5020 ;;      Totals:         0      14       0       0       0
  5021 ;;Total ram usage:       14 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_I2C_Read_MPU
  5028 ;;		_ftoa
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           
  5033                           ;psect for function ___xxtofl
  5034  073C                     ___xxtofl:
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5038                           ;___xxtofl@sign stored from wreg
  5039  073C  1283               	bcf	3,5	;RP0=0, select bank0
  5040  073D  1303               	bcf	3,6	;RP1=0, select bank0
  5041  073E  00A8               	movwf	___xxtofl@sign
  5042  073F                     l2364:
  5043  073F  0828               	movf	___xxtofl@sign,w
  5044  0740  1903               	btfsc	3,2
  5045  0741  2F43               	goto	u3161
  5046  0742  2F44               	goto	u3160
  5047  0743                     u3161:
  5048  0743  2F58               	goto	l2370
  5049  0744                     u3160:
  5050  0744                     l2366:
  5051  0744  1FA3               	btfss	___xxtofl@val+3,7
  5052  0745  2F47               	goto	u3171
  5053  0746  2F48               	goto	u3170
  5054  0747                     u3171:
  5055  0747  2F58               	goto	l2370
  5056  0748                     u3170:
  5057  0748                     l2368:
  5058  0748  0920               	comf	___xxtofl@val,w
  5059  0749  00AA               	movwf	___xxtofl@arg
  5060  074A  0921               	comf	___xxtofl@val+1,w
  5061  074B  00AB               	movwf	___xxtofl@arg+1
  5062  074C  0922               	comf	___xxtofl@val+2,w
  5063  074D  00AC               	movwf	___xxtofl@arg+2
  5064  074E  0923               	comf	___xxtofl@val+3,w
  5065  074F  00AD               	movwf	___xxtofl@arg+3
  5066  0750  0AAA               	incf	___xxtofl@arg,f
  5067  0751  1903               	skipnz
  5068  0752  0AAB               	incf	___xxtofl@arg+1,f
  5069  0753  1903               	skipnz
  5070  0754  0AAC               	incf	___xxtofl@arg+2,f
  5071  0755  1903               	skipnz
  5072  0756  0AAD               	incf	___xxtofl@arg+3,f
  5073  0757  2F60               	goto	l744
  5074  0758                     l2370:
  5075  0758  0823               	movf	___xxtofl@val+3,w
  5076  0759  00AD               	movwf	___xxtofl@arg+3
  5077  075A  0822               	movf	___xxtofl@val+2,w
  5078  075B  00AC               	movwf	___xxtofl@arg+2
  5079  075C  0821               	movf	___xxtofl@val+1,w
  5080  075D  00AB               	movwf	___xxtofl@arg+1
  5081  075E  0820               	movf	___xxtofl@val,w
  5082  075F  00AA               	movwf	___xxtofl@arg
  5083  0760                     l744:
  5084  0760  0823               	movf	___xxtofl@val+3,w
  5085  0761  0422               	iorwf	___xxtofl@val+2,w
  5086  0762  0421               	iorwf	___xxtofl@val+1,w
  5087  0763  0420               	iorwf	___xxtofl@val,w
  5088  0764  1D03               	skipz
  5089  0765  2F67               	goto	u3181
  5090  0766  2F68               	goto	u3180
  5091  0767                     u3181:
  5092  0767  2F71               	goto	l2376
  5093  0768                     u3180:
  5094  0768                     l2372:
  5095  0768  3000               	movlw	0
  5096  0769  00A3               	movwf	?___xxtofl+3
  5097  076A  3000               	movlw	0
  5098  076B  00A2               	movwf	?___xxtofl+2
  5099  076C  3000               	movlw	0
  5100  076D  00A1               	movwf	?___xxtofl+1
  5101  076E  3000               	movlw	0
  5102  076F  00A0               	movwf	?___xxtofl
  5103  0770  2FF7               	goto	l746
  5104  0771                     l2376:
  5105  0771  3096               	movlw	150
  5106  0772  00A4               	movwf	??___xxtofl
  5107  0773  0824               	movf	??___xxtofl,w
  5108  0774  00A9               	movwf	___xxtofl@exp
  5109  0775  2F83               	goto	l2380
  5110  0776                     l2378:
  5111  0776  3001               	movlw	1
  5112  0777  00A4               	movwf	??___xxtofl
  5113  0778  0824               	movf	??___xxtofl,w
  5114  0779  07A9               	addwf	___xxtofl@exp,f
  5115  077A  3001               	movlw	1
  5116  077B                     u3195:
  5117  077B  1003               	clrc
  5118  077C  0CAD               	rrf	___xxtofl@arg+3,f
  5119  077D  0CAC               	rrf	___xxtofl@arg+2,f
  5120  077E  0CAB               	rrf	___xxtofl@arg+1,f
  5121  077F  0CAA               	rrf	___xxtofl@arg,f
  5122  0780  3EFF               	addlw	-1
  5123  0781  1D03               	skipz
  5124  0782  2F7B               	goto	u3195
  5125  0783                     l2380:
  5126  0783  30FE               	movlw	254
  5127  0784  052D               	andwf	___xxtofl@arg+3,w
  5128  0785  1D03               	btfss	3,2
  5129  0786  2F88               	goto	u3201
  5130  0787  2F89               	goto	u3200
  5131  0788                     u3201:
  5132  0788  2F76               	goto	l2378
  5133  0789                     u3200:
  5134  0789  2FA5               	goto	l750
  5135  078A                     l2382:
  5136  078A  3001               	movlw	1
  5137  078B  00A4               	movwf	??___xxtofl
  5138  078C  0824               	movf	??___xxtofl,w
  5139  078D  07A9               	addwf	___xxtofl@exp,f
  5140  078E                     l2384:
  5141  078E  3001               	movlw	1
  5142  078F  07AA               	addwf	___xxtofl@arg,f
  5143  0790  3000               	movlw	0
  5144  0791  1803               	skipnc
  5145  0792  3001               	movlw	1
  5146  0793  07AB               	addwf	___xxtofl@arg+1,f
  5147  0794  3000               	movlw	0
  5148  0795  1803               	skipnc
  5149  0796  3001               	movlw	1
  5150  0797  07AC               	addwf	___xxtofl@arg+2,f
  5151  0798  3000               	movlw	0
  5152  0799  1803               	skipnc
  5153  079A  3001               	movlw	1
  5154  079B  07AD               	addwf	___xxtofl@arg+3,f
  5155  079C                     l2386:
  5156  079C  3001               	movlw	1
  5157  079D                     u3215:
  5158  079D  1003               	clrc
  5159  079E  0CAD               	rrf	___xxtofl@arg+3,f
  5160  079F  0CAC               	rrf	___xxtofl@arg+2,f
  5161  07A0  0CAB               	rrf	___xxtofl@arg+1,f
  5162  07A1  0CAA               	rrf	___xxtofl@arg,f
  5163  07A2  3EFF               	addlw	-1
  5164  07A3  1D03               	skipz
  5165  07A4  2F9D               	goto	u3215
  5166  07A5                     l750:
  5167  07A5  30FF               	movlw	255
  5168  07A6  052D               	andwf	___xxtofl@arg+3,w
  5169  07A7  1D03               	btfss	3,2
  5170  07A8  2FAA               	goto	u3221
  5171  07A9  2FAB               	goto	u3220
  5172  07AA                     u3221:
  5173  07AA  2F8A               	goto	l2382
  5174  07AB                     u3220:
  5175  07AB  2FB7               	goto	l2390
  5176  07AC                     l2388:
  5177  07AC  3001               	movlw	1
  5178  07AD  02A9               	subwf	___xxtofl@exp,f
  5179  07AE  3001               	movlw	1
  5180  07AF  00A4               	movwf	??___xxtofl
  5181  07B0                     u3235:
  5182  07B0  1003               	clrc
  5183  07B1  0DAA               	rlf	___xxtofl@arg,f
  5184  07B2  0DAB               	rlf	___xxtofl@arg+1,f
  5185  07B3  0DAC               	rlf	___xxtofl@arg+2,f
  5186  07B4  0DAD               	rlf	___xxtofl@arg+3,f
  5187  07B5  0BA4               	decfsz	??___xxtofl,f
  5188  07B6  2FB0               	goto	u3235
  5189  07B7                     l2390:
  5190  07B7  1BAC               	btfsc	___xxtofl@arg+2,7
  5191  07B8  2FBA               	goto	u3241
  5192  07B9  2FBB               	goto	u3240
  5193  07BA                     u3241:
  5194  07BA  2FC1               	goto	l757
  5195  07BB                     u3240:
  5196  07BB                     l2392:
  5197  07BB  3002               	movlw	2
  5198  07BC  0229               	subwf	___xxtofl@exp,w
  5199  07BD  1803               	skipnc
  5200  07BE  2FC0               	goto	u3251
  5201  07BF  2FC1               	goto	u3250
  5202  07C0                     u3251:
  5203  07C0  2FAC               	goto	l2388
  5204  07C1                     u3250:
  5205  07C1                     l757:
  5206  07C1  1829               	btfsc	___xxtofl@exp,0
  5207  07C2  2FC4               	goto	u3261
  5208  07C3  2FC5               	goto	u3260
  5209  07C4                     u3261:
  5210  07C4  2FCD               	goto	l758
  5211  07C5                     u3260:
  5212  07C5                     l2394:
  5213  07C5  30FF               	movlw	255
  5214  07C6  05AA               	andwf	___xxtofl@arg,f
  5215  07C7  30FF               	movlw	255
  5216  07C8  05AB               	andwf	___xxtofl@arg+1,f
  5217  07C9  307F               	movlw	127
  5218  07CA  05AC               	andwf	___xxtofl@arg+2,f
  5219  07CB  30FF               	movlw	255
  5220  07CC  05AD               	andwf	___xxtofl@arg+3,f
  5221  07CD                     l758:
  5222  07CD  1003               	clrc
  5223  07CE  0CA9               	rrf	___xxtofl@exp,f
  5224  07CF                     l2396:
  5225  07CF  0829               	movf	___xxtofl@exp,w
  5226  07D0  00A4               	movwf	??___xxtofl
  5227  07D1  01A5               	clrf	??___xxtofl+1
  5228  07D2  01A6               	clrf	??___xxtofl+2
  5229  07D3  01A7               	clrf	??___xxtofl+3
  5230  07D4  3018               	movlw	24
  5231  07D5                     u3275:
  5232  07D5  1003               	clrc
  5233  07D6  0DA4               	rlf	??___xxtofl,f
  5234  07D7  0DA5               	rlf	??___xxtofl+1,f
  5235  07D8  0DA6               	rlf	??___xxtofl+2,f
  5236  07D9  0DA7               	rlf	??___xxtofl+3,f
  5237  07DA                     u3270:
  5238  07DA  3EFF               	addlw	-1
  5239  07DB  1D03               	skipz
  5240  07DC  2FD5               	goto	u3275
  5241  07DD  0824               	movf	??___xxtofl,w
  5242  07DE  04AA               	iorwf	___xxtofl@arg,f
  5243  07DF  0825               	movf	??___xxtofl+1,w
  5244  07E0  04AB               	iorwf	___xxtofl@arg+1,f
  5245  07E1  0826               	movf	??___xxtofl+2,w
  5246  07E2  04AC               	iorwf	___xxtofl@arg+2,f
  5247  07E3  0827               	movf	??___xxtofl+3,w
  5248  07E4  04AD               	iorwf	___xxtofl@arg+3,f
  5249  07E5                     l2398:
  5250  07E5  0828               	movf	___xxtofl@sign,w
  5251  07E6  1903               	btfsc	3,2
  5252  07E7  2FE9               	goto	u3281
  5253  07E8  2FEA               	goto	u3280
  5254  07E9                     u3281:
  5255  07E9  2FEF               	goto	l2404
  5256  07EA                     u3280:
  5257  07EA                     l2400:
  5258  07EA  1FA3               	btfss	___xxtofl@val+3,7
  5259  07EB  2FED               	goto	u3291
  5260  07EC  2FEE               	goto	u3290
  5261  07ED                     u3291:
  5262  07ED  2FEF               	goto	l2404
  5263  07EE                     u3290:
  5264  07EE                     l2402:
  5265  07EE  17AD               	bsf	___xxtofl@arg+3,7
  5266  07EF                     l2404:
  5267  07EF  082D               	movf	___xxtofl@arg+3,w
  5268  07F0  00A3               	movwf	?___xxtofl+3
  5269  07F1  082C               	movf	___xxtofl@arg+2,w
  5270  07F2  00A2               	movwf	?___xxtofl+2
  5271  07F3  082B               	movf	___xxtofl@arg+1,w
  5272  07F4  00A1               	movwf	?___xxtofl+1
  5273  07F5  082A               	movf	___xxtofl@arg,w
  5274  07F6  00A0               	movwf	?___xxtofl
  5275  07F7                     l746:
  5276  07F7  0008               	return
  5277  07F8                     __end_of___xxtofl:
  5278                           
  5279                           	psect	text17
  5280  0023                     __ptext17:	
  5281 ;; *************** function ___flmul *****************
  5282 ;; Defined at:
  5283 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  b               4   14[BANK0 ] unsigned char 
  5286 ;;  a               4   18[BANK0 ] unsigned char 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  prod            4   34[BANK0 ] struct .
  5289 ;;  grs             4   28[BANK0 ] unsigned long 
  5290 ;;  temp            2   38[BANK0 ] struct .
  5291 ;;  bexp            1   33[BANK0 ] unsigned char 
  5292 ;;  aexp            1   32[BANK0 ] unsigned char 
  5293 ;;  sign            1   27[BANK0 ] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  4   14[BANK0 ] unsigned char 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5303 ;;      Params:         0       8       0       0       0
  5304 ;;      Locals:         0      13       0       0       0
  5305 ;;      Temps:          0       5       0       0       0
  5306 ;;      Totals:         0      26       0       0       0
  5307 ;;Total ram usage:       26 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    2
  5310 ;; This function calls:
  5311 ;;		__Umul8_16
  5312 ;; This function is called by:
  5313 ;;		_I2C_Read_MPU
  5314 ;;		_ftoa
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           
  5319                           ;psect for function ___flmul
  5320  0023                     ___flmul:
  5321  0023                     l2224:	
  5322                           ;incstack = 0
  5323                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5324                           
  5325  0023  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0024  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0025  0831               	movf	___flmul@b+3,w
  5328  0026  3980               	andlw	128
  5329  0027  00B6               	movwf	??___flmul
  5330  0028  0836               	movf	??___flmul,w
  5331  0029  00BB               	movwf	___flmul@sign
  5332  002A                     l2226:
  5333  002A  0831               	movf	___flmul@b+3,w
  5334  002B  00B6               	movwf	??___flmul
  5335  002C  0736               	addwf	??___flmul,w
  5336  002D  00B7               	movwf	??___flmul+1
  5337  002E  0837               	movf	??___flmul+1,w
  5338  002F  00C1               	movwf	___flmul@bexp
  5339  0030                     l2228:
  5340  0030  1FB0               	btfss	___flmul@b+2,7
  5341  0031  2833               	goto	u2791
  5342  0032  2834               	goto	u2790
  5343  0033                     u2791:
  5344  0033  2835               	goto	l2232
  5345  0034                     u2790:
  5346  0034                     l2230:
  5347  0034  1441               	bsf	___flmul@bexp,0
  5348  0035                     l2232:
  5349  0035  0841               	movf	___flmul@bexp,w
  5350  0036  1903               	btfsc	3,2
  5351  0037  2839               	goto	u2801
  5352  0038  283A               	goto	u2800
  5353  0039                     u2801:
  5354  0039  2849               	goto	l2240
  5355  003A                     u2800:
  5356  003A                     l2234:
  5357  003A  0A41               	incf	___flmul@bexp,w
  5358  003B  1D03               	btfss	3,2
  5359  003C  283E               	goto	u2811
  5360  003D  283F               	goto	u2810
  5361  003E                     u2811:
  5362  003E  2847               	goto	l2238
  5363  003F                     u2810:
  5364  003F                     l2236:
  5365  003F  3000               	movlw	0
  5366  0040  00B1               	movwf	___flmul@b+3
  5367  0041  3000               	movlw	0
  5368  0042  00B0               	movwf	___flmul@b+2
  5369  0043  3000               	movlw	0
  5370  0044  00AF               	movwf	___flmul@b+1
  5371  0045  3000               	movlw	0
  5372  0046  00AE               	movwf	___flmul@b
  5373  0047                     l2238:
  5374  0047  17B0               	bsf	___flmul@b+2,7
  5375  0048  2851               	goto	l2242
  5376  0049                     l2240:
  5377  0049  3000               	movlw	0
  5378  004A  00B1               	movwf	___flmul@b+3
  5379  004B  3000               	movlw	0
  5380  004C  00B0               	movwf	___flmul@b+2
  5381  004D  3000               	movlw	0
  5382  004E  00AF               	movwf	___flmul@b+1
  5383  004F  3000               	movlw	0
  5384  0050  00AE               	movwf	___flmul@b
  5385  0051                     l2242:
  5386  0051  0835               	movf	___flmul@a+3,w
  5387  0052  3980               	andlw	128
  5388  0053  00B6               	movwf	??___flmul
  5389  0054  0836               	movf	??___flmul,w
  5390  0055  06BB               	xorwf	___flmul@sign,f
  5391  0056                     l2244:
  5392  0056  0835               	movf	___flmul@a+3,w
  5393  0057  00B6               	movwf	??___flmul
  5394  0058  0736               	addwf	??___flmul,w
  5395  0059  00B7               	movwf	??___flmul+1
  5396  005A  0837               	movf	??___flmul+1,w
  5397  005B  00C0               	movwf	___flmul@aexp
  5398  005C                     l2246:
  5399  005C  1FB4               	btfss	___flmul@a+2,7
  5400  005D  285F               	goto	u2821
  5401  005E  2860               	goto	u2820
  5402  005F                     u2821:
  5403  005F  2861               	goto	l2250
  5404  0060                     u2820:
  5405  0060                     l2248:
  5406  0060  1440               	bsf	___flmul@aexp,0
  5407  0061                     l2250:
  5408  0061  0840               	movf	___flmul@aexp,w
  5409  0062  1903               	btfsc	3,2
  5410  0063  2865               	goto	u2831
  5411  0064  2866               	goto	u2830
  5412  0065                     u2831:
  5413  0065  2875               	goto	l2258
  5414  0066                     u2830:
  5415  0066                     l2252:
  5416  0066  0A40               	incf	___flmul@aexp,w
  5417  0067  1D03               	btfss	3,2
  5418  0068  286A               	goto	u2841
  5419  0069  286B               	goto	u2840
  5420  006A                     u2841:
  5421  006A  2873               	goto	l2256
  5422  006B                     u2840:
  5423  006B                     l2254:
  5424  006B  3000               	movlw	0
  5425  006C  00B5               	movwf	___flmul@a+3
  5426  006D  3000               	movlw	0
  5427  006E  00B4               	movwf	___flmul@a+2
  5428  006F  3000               	movlw	0
  5429  0070  00B3               	movwf	___flmul@a+1
  5430  0071  3000               	movlw	0
  5431  0072  00B2               	movwf	___flmul@a
  5432  0073                     l2256:
  5433  0073  17B4               	bsf	___flmul@a+2,7
  5434  0074  287D               	goto	l2260
  5435  0075                     l2258:
  5436  0075  3000               	movlw	0
  5437  0076  00B5               	movwf	___flmul@a+3
  5438  0077  3000               	movlw	0
  5439  0078  00B4               	movwf	___flmul@a+2
  5440  0079  3000               	movlw	0
  5441  007A  00B3               	movwf	___flmul@a+1
  5442  007B  3000               	movlw	0
  5443  007C  00B2               	movwf	___flmul@a
  5444  007D                     l2260:
  5445  007D  0840               	movf	___flmul@aexp,w
  5446  007E  1903               	btfsc	3,2
  5447  007F  2881               	goto	u2851
  5448  0080  2882               	goto	u2850
  5449  0081                     u2851:
  5450  0081  2887               	goto	l2264
  5451  0082                     u2850:
  5452  0082                     l2262:
  5453  0082  0841               	movf	___flmul@bexp,w
  5454  0083  1D03               	btfss	3,2
  5455  0084  2886               	goto	u2861
  5456  0085  2887               	goto	u2860
  5457  0086                     u2861:
  5458  0086  2890               	goto	l2268
  5459  0087                     u2860:
  5460  0087                     l2264:
  5461  0087  3000               	movlw	0
  5462  0088  00B1               	movwf	?___flmul+3
  5463  0089  3000               	movlw	0
  5464  008A  00B0               	movwf	?___flmul+2
  5465  008B  3000               	movlw	0
  5466  008C  00AF               	movwf	?___flmul+1
  5467  008D  3000               	movlw	0
  5468  008E  00AE               	movwf	?___flmul
  5469  008F  2B83               	goto	l700
  5470  0090                     l2268:
  5471  0090  082E               	movf	___flmul@b,w
  5472  0091  00B6               	movwf	??___flmul
  5473  0092  0836               	movf	??___flmul,w
  5474  0093  00F6               	movwf	__Umul8_16@multiplicand
  5475  0094  0834               	movf	___flmul@a+2,w
  5476  0095  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5477  009A  0877               	movf	?__Umul8_16+1,w
  5478  009B  1283               	bcf	3,5	;RP0=0, select bank0
  5479  009C  1303               	bcf	3,6	;RP1=0, select bank0
  5480  009D  00C7               	movwf	___flmul@temp+1
  5481  009E  0876               	movf	?__Umul8_16,w
  5482  009F  00C6               	movwf	___flmul@temp
  5483  00A0                     l2270:
  5484  00A0  0846               	movf	___flmul@temp,w
  5485  00A1  00B6               	movwf	??___flmul
  5486  00A2  01B7               	clrf	??___flmul+1
  5487  00A3  01B8               	clrf	??___flmul+2
  5488  00A4  01B9               	clrf	??___flmul+3
  5489  00A5  0839               	movf	??___flmul+3,w
  5490  00A6  00BF               	movwf	___flmul@grs+3
  5491  00A7  0838               	movf	??___flmul+2,w
  5492  00A8  00BE               	movwf	___flmul@grs+2
  5493  00A9  0837               	movf	??___flmul+1,w
  5494  00AA  00BD               	movwf	___flmul@grs+1
  5495  00AB  0836               	movf	??___flmul,w
  5496  00AC  00BC               	movwf	___flmul@grs
  5497  00AD                     l2272:
  5498  00AD  0847               	movf	___flmul@temp+1,w
  5499  00AE  00B6               	movwf	??___flmul
  5500  00AF  01B7               	clrf	??___flmul+1
  5501  00B0  01B8               	clrf	??___flmul+2
  5502  00B1  01B9               	clrf	??___flmul+3
  5503  00B2  0839               	movf	??___flmul+3,w
  5504  00B3  00C5               	movwf	___flmul@prod+3
  5505  00B4  0838               	movf	??___flmul+2,w
  5506  00B5  00C4               	movwf	___flmul@prod+2
  5507  00B6  0837               	movf	??___flmul+1,w
  5508  00B7  00C3               	movwf	___flmul@prod+1
  5509  00B8  0836               	movf	??___flmul,w
  5510  00B9  00C2               	movwf	___flmul@prod
  5511  00BA  082F               	movf	___flmul@b+1,w
  5512  00BB  00B6               	movwf	??___flmul
  5513  00BC  0836               	movf	??___flmul,w
  5514  00BD  00F6               	movwf	__Umul8_16@multiplicand
  5515  00BE  0833               	movf	___flmul@a+1,w
  5516  00BF  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5517  00C4  0877               	movf	?__Umul8_16+1,w
  5518  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  5519  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  5520  00C7  00C7               	movwf	___flmul@temp+1
  5521  00C8  0876               	movf	?__Umul8_16,w
  5522  00C9  00C6               	movwf	___flmul@temp
  5523  00CA                     l2274:
  5524  00CA  0846               	movf	___flmul@temp,w
  5525  00CB  00B6               	movwf	??___flmul
  5526  00CC  01B7               	clrf	??___flmul+1
  5527  00CD  01B8               	clrf	??___flmul+2
  5528  00CE  01B9               	clrf	??___flmul+3
  5529  00CF  0836               	movf	??___flmul,w
  5530  00D0  07BC               	addwf	___flmul@grs,f
  5531  00D1  0837               	movf	??___flmul+1,w
  5532  00D2  1103               	clrz
  5533  00D3  1803               	skipnc
  5534  00D4  3E01               	addlw	1
  5535  00D5  1903               	skipnz
  5536  00D6  28D8               	goto	u2871
  5537  00D7  07BD               	addwf	___flmul@grs+1,f
  5538  00D8                     u2871:
  5539  00D8  0838               	movf	??___flmul+2,w
  5540  00D9  1103               	clrz
  5541  00DA  1803               	skipnc
  5542  00DB  3E01               	addlw	1
  5543  00DC  1903               	skipnz
  5544  00DD  28DF               	goto	u2872
  5545  00DE  07BE               	addwf	___flmul@grs+2,f
  5546  00DF                     u2872:
  5547  00DF  0839               	movf	??___flmul+3,w
  5548  00E0  1103               	clrz
  5549  00E1  1803               	skipnc
  5550  00E2  3E01               	addlw	1
  5551  00E3  1903               	skipnz
  5552  00E4  28E6               	goto	u2873
  5553  00E5  07BF               	addwf	___flmul@grs+3,f
  5554  00E6                     u2873:
  5555  00E6                     l2276:
  5556  00E6  0847               	movf	___flmul@temp+1,w
  5557  00E7  00B6               	movwf	??___flmul
  5558  00E8  01B7               	clrf	??___flmul+1
  5559  00E9  01B8               	clrf	??___flmul+2
  5560  00EA  01B9               	clrf	??___flmul+3
  5561  00EB  0836               	movf	??___flmul,w
  5562  00EC  07C2               	addwf	___flmul@prod,f
  5563  00ED  0837               	movf	??___flmul+1,w
  5564  00EE  1103               	clrz
  5565  00EF  1803               	skipnc
  5566  00F0  3E01               	addlw	1
  5567  00F1  1903               	skipnz
  5568  00F2  28F4               	goto	u2881
  5569  00F3  07C3               	addwf	___flmul@prod+1,f
  5570  00F4                     u2881:
  5571  00F4  0838               	movf	??___flmul+2,w
  5572  00F5  1103               	clrz
  5573  00F6  1803               	skipnc
  5574  00F7  3E01               	addlw	1
  5575  00F8  1903               	skipnz
  5576  00F9  28FB               	goto	u2882
  5577  00FA  07C4               	addwf	___flmul@prod+2,f
  5578  00FB                     u2882:
  5579  00FB  0839               	movf	??___flmul+3,w
  5580  00FC  1103               	clrz
  5581  00FD  1803               	skipnc
  5582  00FE  3E01               	addlw	1
  5583  00FF  1903               	skipnz
  5584  0100  2902               	goto	u2883
  5585  0101  07C5               	addwf	___flmul@prod+3,f
  5586  0102                     u2883:
  5587  0102  0830               	movf	___flmul@b+2,w
  5588  0103  00B6               	movwf	??___flmul
  5589  0104  0836               	movf	??___flmul,w
  5590  0105  00F6               	movwf	__Umul8_16@multiplicand
  5591  0106  0832               	movf	___flmul@a,w
  5592  0107  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5593  010C  0877               	movf	?__Umul8_16+1,w
  5594  010D  1283               	bcf	3,5	;RP0=0, select bank0
  5595  010E  1303               	bcf	3,6	;RP1=0, select bank0
  5596  010F  00C7               	movwf	___flmul@temp+1
  5597  0110  0876               	movf	?__Umul8_16,w
  5598  0111  00C6               	movwf	___flmul@temp
  5599  0112                     l2278:
  5600  0112  0846               	movf	___flmul@temp,w
  5601  0113  00B6               	movwf	??___flmul
  5602  0114  01B7               	clrf	??___flmul+1
  5603  0115  01B8               	clrf	??___flmul+2
  5604  0116  01B9               	clrf	??___flmul+3
  5605  0117  0836               	movf	??___flmul,w
  5606  0118  07BC               	addwf	___flmul@grs,f
  5607  0119  0837               	movf	??___flmul+1,w
  5608  011A  1103               	clrz
  5609  011B  1803               	skipnc
  5610  011C  3E01               	addlw	1
  5611  011D  1903               	skipnz
  5612  011E  2920               	goto	u2891
  5613  011F  07BD               	addwf	___flmul@grs+1,f
  5614  0120                     u2891:
  5615  0120  0838               	movf	??___flmul+2,w
  5616  0121  1103               	clrz
  5617  0122  1803               	skipnc
  5618  0123  3E01               	addlw	1
  5619  0124  1903               	skipnz
  5620  0125  2927               	goto	u2892
  5621  0126  07BE               	addwf	___flmul@grs+2,f
  5622  0127                     u2892:
  5623  0127  0839               	movf	??___flmul+3,w
  5624  0128  1103               	clrz
  5625  0129  1803               	skipnc
  5626  012A  3E01               	addlw	1
  5627  012B  1903               	skipnz
  5628  012C  292E               	goto	u2893
  5629  012D  07BF               	addwf	___flmul@grs+3,f
  5630  012E                     u2893:
  5631  012E                     l2280:
  5632  012E  0847               	movf	___flmul@temp+1,w
  5633  012F  00B6               	movwf	??___flmul
  5634  0130  01B7               	clrf	??___flmul+1
  5635  0131  01B8               	clrf	??___flmul+2
  5636  0132  01B9               	clrf	??___flmul+3
  5637  0133  0836               	movf	??___flmul,w
  5638  0134  07C2               	addwf	___flmul@prod,f
  5639  0135  0837               	movf	??___flmul+1,w
  5640  0136  1103               	clrz
  5641  0137  1803               	skipnc
  5642  0138  3E01               	addlw	1
  5643  0139  1903               	skipnz
  5644  013A  293C               	goto	u2901
  5645  013B  07C3               	addwf	___flmul@prod+1,f
  5646  013C                     u2901:
  5647  013C  0838               	movf	??___flmul+2,w
  5648  013D  1103               	clrz
  5649  013E  1803               	skipnc
  5650  013F  3E01               	addlw	1
  5651  0140  1903               	skipnz
  5652  0141  2943               	goto	u2902
  5653  0142  07C4               	addwf	___flmul@prod+2,f
  5654  0143                     u2902:
  5655  0143  0839               	movf	??___flmul+3,w
  5656  0144  1103               	clrz
  5657  0145  1803               	skipnc
  5658  0146  3E01               	addlw	1
  5659  0147  1903               	skipnz
  5660  0148  294A               	goto	u2903
  5661  0149  07C5               	addwf	___flmul@prod+3,f
  5662  014A                     u2903:
  5663  014A                     l2282:
  5664  014A  3008               	movlw	8
  5665  014B  00B6               	movwf	??___flmul
  5666  014C                     u2915:
  5667  014C  1003               	clrc
  5668  014D  0DBC               	rlf	___flmul@grs,f
  5669  014E  0DBD               	rlf	___flmul@grs+1,f
  5670  014F  0DBE               	rlf	___flmul@grs+2,f
  5671  0150  0DBF               	rlf	___flmul@grs+3,f
  5672  0151  0BB6               	decfsz	??___flmul,f
  5673  0152  294C               	goto	u2915
  5674  0153                     l2284:
  5675  0153  082F               	movf	___flmul@b+1,w
  5676  0154  00B6               	movwf	??___flmul
  5677  0155  0836               	movf	??___flmul,w
  5678  0156  00F6               	movwf	__Umul8_16@multiplicand
  5679  0157  0832               	movf	___flmul@a,w
  5680  0158  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5681  015D  0877               	movf	?__Umul8_16+1,w
  5682  015E  1283               	bcf	3,5	;RP0=0, select bank0
  5683  015F  1303               	bcf	3,6	;RP1=0, select bank0
  5684  0160  00C7               	movwf	___flmul@temp+1
  5685  0161  0876               	movf	?__Umul8_16,w
  5686  0162  00C6               	movwf	___flmul@temp
  5687  0163                     l2286:
  5688  0163  0846               	movf	___flmul@temp,w
  5689  0164  00B6               	movwf	??___flmul
  5690  0165  0847               	movf	___flmul@temp+1,w
  5691  0166  00B7               	movwf	??___flmul+1
  5692  0167  01B8               	clrf	??___flmul+2
  5693  0168  01B9               	clrf	??___flmul+3
  5694  0169  0836               	movf	??___flmul,w
  5695  016A  07BC               	addwf	___flmul@grs,f
  5696  016B  0837               	movf	??___flmul+1,w
  5697  016C  1103               	clrz
  5698  016D  1803               	skipnc
  5699  016E  3E01               	addlw	1
  5700  016F  1903               	skipnz
  5701  0170  2972               	goto	u2921
  5702  0171  07BD               	addwf	___flmul@grs+1,f
  5703  0172                     u2921:
  5704  0172  0838               	movf	??___flmul+2,w
  5705  0173  1103               	clrz
  5706  0174  1803               	skipnc
  5707  0175  3E01               	addlw	1
  5708  0176  1903               	skipnz
  5709  0177  2979               	goto	u2922
  5710  0178  07BE               	addwf	___flmul@grs+2,f
  5711  0179                     u2922:
  5712  0179  0839               	movf	??___flmul+3,w
  5713  017A  1103               	clrz
  5714  017B  1803               	skipnc
  5715  017C  3E01               	addlw	1
  5716  017D  1903               	skipnz
  5717  017E  2980               	goto	u2923
  5718  017F  07BF               	addwf	___flmul@grs+3,f
  5719  0180                     u2923:
  5720  0180                     l2288:
  5721  0180  082E               	movf	___flmul@b,w
  5722  0181  00B6               	movwf	??___flmul
  5723  0182  0836               	movf	??___flmul,w
  5724  0183  00F6               	movwf	__Umul8_16@multiplicand
  5725  0184  0833               	movf	___flmul@a+1,w
  5726  0185  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5727  018A  0877               	movf	?__Umul8_16+1,w
  5728  018B  1283               	bcf	3,5	;RP0=0, select bank0
  5729  018C  1303               	bcf	3,6	;RP1=0, select bank0
  5730  018D  00C7               	movwf	___flmul@temp+1
  5731  018E  0876               	movf	?__Umul8_16,w
  5732  018F  00C6               	movwf	___flmul@temp
  5733  0190                     l2290:
  5734  0190  0846               	movf	___flmul@temp,w
  5735  0191  00B6               	movwf	??___flmul
  5736  0192  0847               	movf	___flmul@temp+1,w
  5737  0193  00B7               	movwf	??___flmul+1
  5738  0194  01B8               	clrf	??___flmul+2
  5739  0195  01B9               	clrf	??___flmul+3
  5740  0196  0836               	movf	??___flmul,w
  5741  0197  07BC               	addwf	___flmul@grs,f
  5742  0198  0837               	movf	??___flmul+1,w
  5743  0199  1103               	clrz
  5744  019A  1803               	skipnc
  5745  019B  3E01               	addlw	1
  5746  019C  1903               	skipnz
  5747  019D  299F               	goto	u2931
  5748  019E  07BD               	addwf	___flmul@grs+1,f
  5749  019F                     u2931:
  5750  019F  0838               	movf	??___flmul+2,w
  5751  01A0  1103               	clrz
  5752  01A1  1803               	skipnc
  5753  01A2  3E01               	addlw	1
  5754  01A3  1903               	skipnz
  5755  01A4  29A6               	goto	u2932
  5756  01A5  07BE               	addwf	___flmul@grs+2,f
  5757  01A6                     u2932:
  5758  01A6  0839               	movf	??___flmul+3,w
  5759  01A7  1103               	clrz
  5760  01A8  1803               	skipnc
  5761  01A9  3E01               	addlw	1
  5762  01AA  1903               	skipnz
  5763  01AB  29AD               	goto	u2933
  5764  01AC  07BF               	addwf	___flmul@grs+3,f
  5765  01AD                     u2933:
  5766  01AD                     l2292:
  5767  01AD  3008               	movlw	8
  5768  01AE  00B6               	movwf	??___flmul
  5769  01AF                     u2945:
  5770  01AF  1003               	clrc
  5771  01B0  0DBC               	rlf	___flmul@grs,f
  5772  01B1  0DBD               	rlf	___flmul@grs+1,f
  5773  01B2  0DBE               	rlf	___flmul@grs+2,f
  5774  01B3  0DBF               	rlf	___flmul@grs+3,f
  5775  01B4  0BB6               	decfsz	??___flmul,f
  5776  01B5  29AF               	goto	u2945
  5777  01B6  082E               	movf	___flmul@b,w
  5778  01B7  00B6               	movwf	??___flmul
  5779  01B8  0836               	movf	??___flmul,w
  5780  01B9  00F6               	movwf	__Umul8_16@multiplicand
  5781  01BA  0832               	movf	___flmul@a,w
  5782  01BB  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5783  01C0  0877               	movf	?__Umul8_16+1,w
  5784  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  5785  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  5786  01C3  00C7               	movwf	___flmul@temp+1
  5787  01C4  0876               	movf	?__Umul8_16,w
  5788  01C5  00C6               	movwf	___flmul@temp
  5789  01C6                     l2294:
  5790  01C6  0846               	movf	___flmul@temp,w
  5791  01C7  00B6               	movwf	??___flmul
  5792  01C8  0847               	movf	___flmul@temp+1,w
  5793  01C9  00B7               	movwf	??___flmul+1
  5794  01CA  01B8               	clrf	??___flmul+2
  5795  01CB  01B9               	clrf	??___flmul+3
  5796  01CC  0836               	movf	??___flmul,w
  5797  01CD  07BC               	addwf	___flmul@grs,f
  5798  01CE  0837               	movf	??___flmul+1,w
  5799  01CF  1103               	clrz
  5800  01D0  1803               	skipnc
  5801  01D1  3E01               	addlw	1
  5802  01D2  1903               	skipnz
  5803  01D3  29D5               	goto	u2951
  5804  01D4  07BD               	addwf	___flmul@grs+1,f
  5805  01D5                     u2951:
  5806  01D5  0838               	movf	??___flmul+2,w
  5807  01D6  1103               	clrz
  5808  01D7  1803               	skipnc
  5809  01D8  3E01               	addlw	1
  5810  01D9  1903               	skipnz
  5811  01DA  29DC               	goto	u2952
  5812  01DB  07BE               	addwf	___flmul@grs+2,f
  5813  01DC                     u2952:
  5814  01DC  0839               	movf	??___flmul+3,w
  5815  01DD  1103               	clrz
  5816  01DE  1803               	skipnc
  5817  01DF  3E01               	addlw	1
  5818  01E0  1903               	skipnz
  5819  01E1  29E3               	goto	u2953
  5820  01E2  07BF               	addwf	___flmul@grs+3,f
  5821  01E3                     u2953:
  5822  01E3                     l2296:
  5823  01E3  082F               	movf	___flmul@b+1,w
  5824  01E4  00B6               	movwf	??___flmul
  5825  01E5  0836               	movf	??___flmul,w
  5826  01E6  00F6               	movwf	__Umul8_16@multiplicand
  5827  01E7  0834               	movf	___flmul@a+2,w
  5828  01E8  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5829  01ED  0877               	movf	?__Umul8_16+1,w
  5830  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  5831  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  5832  01F0  00C7               	movwf	___flmul@temp+1
  5833  01F1  0876               	movf	?__Umul8_16,w
  5834  01F2  00C6               	movwf	___flmul@temp
  5835  01F3  0846               	movf	___flmul@temp,w
  5836  01F4  00B6               	movwf	??___flmul
  5837  01F5  0847               	movf	___flmul@temp+1,w
  5838  01F6  00B7               	movwf	??___flmul+1
  5839  01F7  01B8               	clrf	??___flmul+2
  5840  01F8  01B9               	clrf	??___flmul+3
  5841  01F9  0836               	movf	??___flmul,w
  5842  01FA  07C2               	addwf	___flmul@prod,f
  5843  01FB  0837               	movf	??___flmul+1,w
  5844  01FC  1103               	clrz
  5845  01FD  1803               	skipnc
  5846  01FE  3E01               	addlw	1
  5847  01FF  1903               	skipnz
  5848  0200  2A02               	goto	u2961
  5849  0201  07C3               	addwf	___flmul@prod+1,f
  5850  0202                     u2961:
  5851  0202  0838               	movf	??___flmul+2,w
  5852  0203  1103               	clrz
  5853  0204  1803               	skipnc
  5854  0205  3E01               	addlw	1
  5855  0206  1903               	skipnz
  5856  0207  2A09               	goto	u2962
  5857  0208  07C4               	addwf	___flmul@prod+2,f
  5858  0209                     u2962:
  5859  0209  0839               	movf	??___flmul+3,w
  5860  020A  1103               	clrz
  5861  020B  1803               	skipnc
  5862  020C  3E01               	addlw	1
  5863  020D  1903               	skipnz
  5864  020E  2A10               	goto	u2963
  5865  020F  07C5               	addwf	___flmul@prod+3,f
  5866  0210                     u2963:
  5867  0210                     l2298:
  5868  0210  0830               	movf	___flmul@b+2,w
  5869  0211  00B6               	movwf	??___flmul
  5870  0212  0836               	movf	??___flmul,w
  5871  0213  00F6               	movwf	__Umul8_16@multiplicand
  5872  0214  0833               	movf	___flmul@a+1,w
  5873  0215  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5874  021A  0877               	movf	?__Umul8_16+1,w
  5875  021B  1283               	bcf	3,5	;RP0=0, select bank0
  5876  021C  1303               	bcf	3,6	;RP1=0, select bank0
  5877  021D  00C7               	movwf	___flmul@temp+1
  5878  021E  0876               	movf	?__Umul8_16,w
  5879  021F  00C6               	movwf	___flmul@temp
  5880  0220                     l2300:
  5881  0220  0846               	movf	___flmul@temp,w
  5882  0221  00B6               	movwf	??___flmul
  5883  0222  0847               	movf	___flmul@temp+1,w
  5884  0223  00B7               	movwf	??___flmul+1
  5885  0224  01B8               	clrf	??___flmul+2
  5886  0225  01B9               	clrf	??___flmul+3
  5887  0226  0836               	movf	??___flmul,w
  5888  0227  07C2               	addwf	___flmul@prod,f
  5889  0228  0837               	movf	??___flmul+1,w
  5890  0229  1103               	clrz
  5891  022A  1803               	skipnc
  5892  022B  3E01               	addlw	1
  5893  022C  1903               	skipnz
  5894  022D  2A2F               	goto	u2971
  5895  022E  07C3               	addwf	___flmul@prod+1,f
  5896  022F                     u2971:
  5897  022F  0838               	movf	??___flmul+2,w
  5898  0230  1103               	clrz
  5899  0231  1803               	skipnc
  5900  0232  3E01               	addlw	1
  5901  0233  1903               	skipnz
  5902  0234  2A36               	goto	u2972
  5903  0235  07C4               	addwf	___flmul@prod+2,f
  5904  0236                     u2972:
  5905  0236  0839               	movf	??___flmul+3,w
  5906  0237  1103               	clrz
  5907  0238  1803               	skipnc
  5908  0239  3E01               	addlw	1
  5909  023A  1903               	skipnz
  5910  023B  2A3D               	goto	u2973
  5911  023C  07C5               	addwf	___flmul@prod+3,f
  5912  023D                     u2973:
  5913  023D  0830               	movf	___flmul@b+2,w
  5914  023E  00B6               	movwf	??___flmul
  5915  023F  0836               	movf	??___flmul,w
  5916  0240  00F6               	movwf	__Umul8_16@multiplicand
  5917  0241  0834               	movf	___flmul@a+2,w
  5918  0242  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5919  0247  0877               	movf	?__Umul8_16+1,w
  5920  0248  1283               	bcf	3,5	;RP0=0, select bank0
  5921  0249  1303               	bcf	3,6	;RP1=0, select bank0
  5922  024A  00C7               	movwf	___flmul@temp+1
  5923  024B  0876               	movf	?__Umul8_16,w
  5924  024C  00C6               	movwf	___flmul@temp
  5925  024D                     l2302:
  5926  024D  0846               	movf	___flmul@temp,w
  5927  024E  00B6               	movwf	??___flmul
  5928  024F  0847               	movf	___flmul@temp+1,w
  5929  0250  00B7               	movwf	??___flmul+1
  5930  0251  01B8               	clrf	??___flmul+2
  5931  0252  01B9               	clrf	??___flmul+3
  5932  0253  3008               	movlw	8
  5933  0254                     u2985:
  5934  0254  1003               	clrc
  5935  0255  0DB6               	rlf	??___flmul,f
  5936  0256  0DB7               	rlf	??___flmul+1,f
  5937  0257  0DB8               	rlf	??___flmul+2,f
  5938  0258  0DB9               	rlf	??___flmul+3,f
  5939  0259                     u2980:
  5940  0259  3EFF               	addlw	-1
  5941  025A  1D03               	skipz
  5942  025B  2A54               	goto	u2985
  5943  025C  0836               	movf	??___flmul,w
  5944  025D  07C2               	addwf	___flmul@prod,f
  5945  025E  0837               	movf	??___flmul+1,w
  5946  025F  1103               	clrz
  5947  0260  1803               	skipnc
  5948  0261  3E01               	addlw	1
  5949  0262  1903               	skipnz
  5950  0263  2A65               	goto	u2991
  5951  0264  07C3               	addwf	___flmul@prod+1,f
  5952  0265                     u2991:
  5953  0265  0838               	movf	??___flmul+2,w
  5954  0266  1103               	clrz
  5955  0267  1803               	skipnc
  5956  0268  3E01               	addlw	1
  5957  0269  1903               	skipnz
  5958  026A  2A6C               	goto	u2992
  5959  026B  07C4               	addwf	___flmul@prod+2,f
  5960  026C                     u2992:
  5961  026C  0839               	movf	??___flmul+3,w
  5962  026D  1103               	clrz
  5963  026E  1803               	skipnc
  5964  026F  3E01               	addlw	1
  5965  0270  1903               	skipnz
  5966  0271  2A73               	goto	u2993
  5967  0272  07C5               	addwf	___flmul@prod+3,f
  5968  0273                     u2993:
  5969  0273                     l2304:
  5970  0273  083C               	movf	___flmul@grs,w
  5971  0274  00B6               	movwf	??___flmul
  5972  0275  083D               	movf	___flmul@grs+1,w
  5973  0276  00B7               	movwf	??___flmul+1
  5974  0277  083E               	movf	___flmul@grs+2,w
  5975  0278  00B8               	movwf	??___flmul+2
  5976  0279  083F               	movf	___flmul@grs+3,w
  5977  027A  00B9               	movwf	??___flmul+3
  5978  027B  3018               	movlw	24
  5979  027C                     u3005:
  5980  027C  1003               	clrc
  5981  027D  0CB9               	rrf	??___flmul+3,f
  5982  027E  0CB8               	rrf	??___flmul+2,f
  5983  027F  0CB7               	rrf	??___flmul+1,f
  5984  0280  0CB6               	rrf	??___flmul,f
  5985  0281                     u3000:
  5986  0281  3EFF               	addlw	-1
  5987  0282  1D03               	skipz
  5988  0283  2A7C               	goto	u3005
  5989  0284  0836               	movf	??___flmul,w
  5990  0285  07C2               	addwf	___flmul@prod,f
  5991  0286  0837               	movf	??___flmul+1,w
  5992  0287  1103               	clrz
  5993  0288  1803               	skipnc
  5994  0289  3E01               	addlw	1
  5995  028A  1903               	skipnz
  5996  028B  2A8D               	goto	u3011
  5997  028C  07C3               	addwf	___flmul@prod+1,f
  5998  028D                     u3011:
  5999  028D  0838               	movf	??___flmul+2,w
  6000  028E  1103               	clrz
  6001  028F  1803               	skipnc
  6002  0290  3E01               	addlw	1
  6003  0291  1903               	skipnz
  6004  0292  2A94               	goto	u3012
  6005  0293  07C4               	addwf	___flmul@prod+2,f
  6006  0294                     u3012:
  6007  0294  0839               	movf	??___flmul+3,w
  6008  0295  1103               	clrz
  6009  0296  1803               	skipnc
  6010  0297  3E01               	addlw	1
  6011  0298  1903               	skipnz
  6012  0299  2A9B               	goto	u3013
  6013  029A  07C5               	addwf	___flmul@prod+3,f
  6014  029B                     u3013:
  6015  029B                     l2306:
  6016  029B  3008               	movlw	8
  6017  029C  00B6               	movwf	??___flmul
  6018  029D                     u3025:
  6019  029D  1003               	clrc
  6020  029E  0DBC               	rlf	___flmul@grs,f
  6021  029F  0DBD               	rlf	___flmul@grs+1,f
  6022  02A0  0DBE               	rlf	___flmul@grs+2,f
  6023  02A1  0DBF               	rlf	___flmul@grs+3,f
  6024  02A2  0BB6               	decfsz	??___flmul,f
  6025  02A3  2A9D               	goto	u3025
  6026  02A4                     l2308:
  6027  02A4  0841               	movf	___flmul@bexp,w
  6028  02A5  0740               	addwf	___flmul@aexp,w
  6029  02A6  00B6               	movwf	??___flmul
  6030  02A7  01B7               	clrf	??___flmul+1
  6031  02A8  0DB7               	rlf	??___flmul+1,f
  6032  02A9  0836               	movf	??___flmul,w
  6033  02AA  3E82               	addlw	130
  6034  02AB  00C6               	movwf	___flmul@temp
  6035  02AC  0837               	movf	??___flmul+1,w
  6036  02AD  1803               	skipnc
  6037  02AE  3E01               	addlw	1
  6038  02AF  3EFF               	addlw	255
  6039  02B0  00C7               	movwf	___flmul@temp+1
  6040  02B1  2ACF               	goto	l2320
  6041  02B2                     l2310:
  6042  02B2  3001               	movlw	1
  6043  02B3  00B6               	movwf	??___flmul
  6044  02B4                     u3035:
  6045  02B4  1003               	clrc
  6046  02B5  0DC2               	rlf	___flmul@prod,f
  6047  02B6  0DC3               	rlf	___flmul@prod+1,f
  6048  02B7  0DC4               	rlf	___flmul@prod+2,f
  6049  02B8  0DC5               	rlf	___flmul@prod+3,f
  6050  02B9  0BB6               	decfsz	??___flmul,f
  6051  02BA  2AB4               	goto	u3035
  6052  02BB                     l2312:
  6053  02BB  1FBF               	btfss	___flmul@grs+3,7
  6054  02BC  2ABE               	goto	u3041
  6055  02BD  2ABF               	goto	u3040
  6056  02BE                     u3041:
  6057  02BE  2AC0               	goto	l2316
  6058  02BF                     u3040:
  6059  02BF                     l2314:
  6060  02BF  1442               	bsf	___flmul@prod,0
  6061  02C0                     l2316:
  6062  02C0  3001               	movlw	1
  6063  02C1  00B6               	movwf	??___flmul
  6064  02C2                     u3055:
  6065  02C2  1003               	clrc
  6066  02C3  0DBC               	rlf	___flmul@grs,f
  6067  02C4  0DBD               	rlf	___flmul@grs+1,f
  6068  02C5  0DBE               	rlf	___flmul@grs+2,f
  6069  02C6  0DBF               	rlf	___flmul@grs+3,f
  6070  02C7  0BB6               	decfsz	??___flmul,f
  6071  02C8  2AC2               	goto	u3055
  6072  02C9                     l2318:
  6073  02C9  30FF               	movlw	255
  6074  02CA  07C6               	addwf	___flmul@temp,f
  6075  02CB  1803               	skipnc
  6076  02CC  0AC7               	incf	___flmul@temp+1,f
  6077  02CD  30FF               	movlw	255
  6078  02CE  07C7               	addwf	___flmul@temp+1,f
  6079  02CF                     l2320:
  6080  02CF  1FC4               	btfss	___flmul@prod+2,7
  6081  02D0  2AD2               	goto	u3061
  6082  02D1  2AD3               	goto	u3060
  6083  02D2                     u3061:
  6084  02D2  2AB2               	goto	l2310
  6085  02D3                     u3060:
  6086  02D3                     l2322:
  6087  02D3  01C0               	clrf	___flmul@aexp
  6088  02D4                     l2324:
  6089  02D4  1FBF               	btfss	___flmul@grs+3,7
  6090  02D5  2AD7               	goto	u3071
  6091  02D6  2AD8               	goto	u3070
  6092  02D7                     u3071:
  6093  02D7  2AF4               	goto	l2332
  6094  02D8                     u3070:
  6095  02D8                     l2326:
  6096  02D8  30FF               	movlw	255
  6097  02D9  053C               	andwf	___flmul@grs,w
  6098  02DA  00B6               	movwf	??___flmul
  6099  02DB  30FF               	movlw	255
  6100  02DC  053D               	andwf	___flmul@grs+1,w
  6101  02DD  00B7               	movwf	??___flmul+1
  6102  02DE  30FF               	movlw	255
  6103  02DF  053E               	andwf	___flmul@grs+2,w
  6104  02E0  00B8               	movwf	??___flmul+2
  6105  02E1  307F               	movlw	127
  6106  02E2  053F               	andwf	___flmul@grs+3,w
  6107  02E3  00B9               	movwf	??___flmul+3
  6108  02E4  0839               	movf	??___flmul+3,w
  6109  02E5  0438               	iorwf	??___flmul+2,w
  6110  02E6  0437               	iorwf	??___flmul+1,w
  6111  02E7  0436               	iorwf	??___flmul,w
  6112  02E8  1903               	skipnz
  6113  02E9  2AEB               	goto	u3081
  6114  02EA  2AEC               	goto	u3080
  6115  02EB                     u3081:
  6116  02EB  2AEF               	goto	l706
  6117  02EC                     u3080:
  6118  02EC                     l2328:
  6119  02EC  01C0               	clrf	___flmul@aexp
  6120  02ED  0AC0               	incf	___flmul@aexp,f
  6121  02EE  2AF4               	goto	l2332
  6122  02EF                     l706:
  6123  02EF  1C42               	btfss	___flmul@prod,0
  6124  02F0  2AF2               	goto	u3091
  6125  02F1  2AF3               	goto	u3090
  6126  02F2                     u3091:
  6127  02F2  2AF4               	goto	l2332
  6128  02F3                     u3090:
  6129  02F3  2AEC               	goto	l2328
  6130  02F4                     l2332:
  6131  02F4  0840               	movf	___flmul@aexp,w
  6132  02F5  1903               	btfsc	3,2
  6133  02F6  2AF8               	goto	u3101
  6134  02F7  2AF9               	goto	u3100
  6135  02F8                     u3101:
  6136  02F8  2B2A               	goto	l2342
  6137  02F9                     u3100:
  6138  02F9                     l2334:
  6139  02F9  3001               	movlw	1
  6140  02FA  07C2               	addwf	___flmul@prod,f
  6141  02FB  3000               	movlw	0
  6142  02FC  1803               	skipnc
  6143  02FD  3001               	movlw	1
  6144  02FE  07C3               	addwf	___flmul@prod+1,f
  6145  02FF  3000               	movlw	0
  6146  0300  1803               	skipnc
  6147  0301  3001               	movlw	1
  6148  0302  07C4               	addwf	___flmul@prod+2,f
  6149  0303  3000               	movlw	0
  6150  0304  1803               	skipnc
  6151  0305  3001               	movlw	1
  6152  0306  07C5               	addwf	___flmul@prod+3,f
  6153  0307                     l2336:
  6154  0307  1C45               	btfss	___flmul@prod+3,0
  6155  0308  2B0A               	goto	u3111
  6156  0309  2B0B               	goto	u3110
  6157  030A                     u3111:
  6158  030A  2B2A               	goto	l2342
  6159  030B                     u3110:
  6160  030B                     l2338:
  6161  030B  0842               	movf	___flmul@prod,w
  6162  030C  00B6               	movwf	??___flmul
  6163  030D  0843               	movf	___flmul@prod+1,w
  6164  030E  00B7               	movwf	??___flmul+1
  6165  030F  0844               	movf	___flmul@prod+2,w
  6166  0310  00B8               	movwf	??___flmul+2
  6167  0311  0845               	movf	___flmul@prod+3,w
  6168  0312  00B9               	movwf	??___flmul+3
  6169  0313  3001               	movlw	1
  6170  0314  00BA               	movwf	??___flmul+4
  6171  0315                     u3125:
  6172  0315  0D39               	rlf	??___flmul+3,w
  6173  0316  0CB9               	rrf	??___flmul+3,f
  6174  0317  0CB8               	rrf	??___flmul+2,f
  6175  0318  0CB7               	rrf	??___flmul+1,f
  6176  0319  0CB6               	rrf	??___flmul,f
  6177  031A                     u3120:
  6178  031A  0BBA               	decfsz	??___flmul+4,f
  6179  031B  2B15               	goto	u3125
  6180  031C  0839               	movf	??___flmul+3,w
  6181  031D  00C5               	movwf	___flmul@prod+3
  6182  031E  0838               	movf	??___flmul+2,w
  6183  031F  00C4               	movwf	___flmul@prod+2
  6184  0320  0837               	movf	??___flmul+1,w
  6185  0321  00C3               	movwf	___flmul@prod+1
  6186  0322  0836               	movf	??___flmul,w
  6187  0323  00C2               	movwf	___flmul@prod
  6188  0324                     l2340:
  6189  0324  3001               	movlw	1
  6190  0325  07C6               	addwf	___flmul@temp,f
  6191  0326  1803               	skipnc
  6192  0327  0AC7               	incf	___flmul@temp+1,f
  6193  0328  3000               	movlw	0
  6194  0329  07C7               	addwf	___flmul@temp+1,f
  6195  032A                     l2342:
  6196  032A  0847               	movf	___flmul@temp+1,w
  6197  032B  3A80               	xorlw	128
  6198  032C  00FF               	movwf	btemp+1
  6199  032D  3080               	movlw	128
  6200  032E  027F               	subwf	btemp+1,w
  6201  032F  1D03               	skipz
  6202  0330  2B33               	goto	u3135
  6203  0331  30FF               	movlw	255
  6204  0332  0246               	subwf	___flmul@temp,w
  6205  0333                     u3135:
  6206  0333  1C03               	skipc
  6207  0334  2B36               	goto	u3131
  6208  0335  2B37               	goto	u3130
  6209  0336                     u3131:
  6210  0336  2B42               	goto	l2346
  6211  0337                     u3130:
  6212  0337                     l2344:
  6213  0337  307F               	movlw	127
  6214  0338  1283               	bcf	3,5	;RP0=0, select bank0
  6215  0339  1303               	bcf	3,6	;RP1=0, select bank0
  6216  033A  00C5               	movwf	___flmul@prod+3
  6217  033B  3080               	movlw	128
  6218  033C  00C4               	movwf	___flmul@prod+2
  6219  033D  3000               	movlw	0
  6220  033E  00C3               	movwf	___flmul@prod+1
  6221  033F  3000               	movlw	0
  6222  0340  00C2               	movwf	___flmul@prod
  6223  0341  2B77               	goto	l712
  6224  0342                     l2346:
  6225  0342  1283               	bcf	3,5	;RP0=0, select bank0
  6226  0343  1303               	bcf	3,6	;RP1=0, select bank0
  6227  0344  0847               	movf	___flmul@temp+1,w
  6228  0345  3A80               	xorlw	128
  6229  0346  00FF               	movwf	btemp+1
  6230  0347  3080               	movlw	128
  6231  0348  027F               	subwf	btemp+1,w
  6232  0349  1D03               	skipz
  6233  034A  2B4D               	goto	u3145
  6234  034B  3001               	movlw	1
  6235  034C  0246               	subwf	___flmul@temp,w
  6236  034D                     u3145:
  6237  034D  1803               	skipnc
  6238  034E  2B50               	goto	u3141
  6239  034F  2B51               	goto	u3140
  6240  0350                     u3141:
  6241  0350  2B5D               	goto	l2352
  6242  0351                     u3140:
  6243  0351                     l2348:
  6244  0351  3000               	movlw	0
  6245  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6246  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6247  0354  00C5               	movwf	___flmul@prod+3
  6248  0355  3000               	movlw	0
  6249  0356  00C4               	movwf	___flmul@prod+2
  6250  0357  3000               	movlw	0
  6251  0358  00C3               	movwf	___flmul@prod+1
  6252  0359  3000               	movlw	0
  6253  035A  00C2               	movwf	___flmul@prod
  6254  035B                     l2350:
  6255  035B  01BB               	clrf	___flmul@sign
  6256  035C  2B77               	goto	l712
  6257  035D                     l2352:
  6258  035D  1283               	bcf	3,5	;RP0=0, select bank0
  6259  035E  1303               	bcf	3,6	;RP1=0, select bank0
  6260  035F  0846               	movf	___flmul@temp,w
  6261  0360  00B6               	movwf	??___flmul
  6262  0361  0836               	movf	??___flmul,w
  6263  0362  00C1               	movwf	___flmul@bexp
  6264  0363  30FF               	movlw	255
  6265  0364  05C2               	andwf	___flmul@prod,f
  6266  0365  30FF               	movlw	255
  6267  0366  05C3               	andwf	___flmul@prod+1,f
  6268  0367  307F               	movlw	127
  6269  0368  05C4               	andwf	___flmul@prod+2,f
  6270  0369  3000               	movlw	0
  6271  036A  05C5               	andwf	___flmul@prod+3,f
  6272  036B                     l2354:
  6273  036B  1C41               	btfss	___flmul@bexp,0
  6274  036C  2B6E               	goto	u3151
  6275  036D  2B6F               	goto	u3150
  6276  036E                     u3151:
  6277  036E  2B70               	goto	l2358
  6278  036F                     u3150:
  6279  036F                     l2356:
  6280  036F  17C4               	bsf	___flmul@prod+2,7
  6281  0370                     l2358:
  6282  0370  0841               	movf	___flmul@bexp,w
  6283  0371  00B6               	movwf	??___flmul
  6284  0372  1003               	clrc
  6285  0373  0C36               	rrf	??___flmul,w
  6286  0374  00B7               	movwf	??___flmul+1
  6287  0375  0837               	movf	??___flmul+1,w
  6288  0376  00C5               	movwf	___flmul@prod+3
  6289  0377                     l712:
  6290  0377  083B               	movf	___flmul@sign,w
  6291  0378  00B6               	movwf	??___flmul
  6292  0379  0836               	movf	??___flmul,w
  6293  037A  04C5               	iorwf	___flmul@prod+3,f
  6294  037B                     l2360:
  6295  037B  0845               	movf	___flmul@prod+3,w
  6296  037C  00B1               	movwf	?___flmul+3
  6297  037D  0844               	movf	___flmul@prod+2,w
  6298  037E  00B0               	movwf	?___flmul+2
  6299  037F  0843               	movf	___flmul@prod+1,w
  6300  0380  00AF               	movwf	?___flmul+1
  6301  0381  0842               	movf	___flmul@prod,w
  6302  0382  00AE               	movwf	?___flmul
  6303  0383                     l700:
  6304  0383  0008               	return
  6305  0384                     __end_of___flmul:
  6306                           
  6307                           	psect	text18
  6308  17D7                     __ptext18:	
  6309 ;; *************** function __Umul8_16 *****************
  6310 ;; Defined at:
  6311 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  multiplier      1    wreg     unsigned char 
  6314 ;;  multiplicand    1    6[COMMON] unsigned char 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  multiplier      1    6[BANK0 ] unsigned char 
  6317 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  6318 ;;  product         2    2[BANK0 ] unsigned int 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2    6[COMMON] unsigned int 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6328 ;;      Params:         2       0       0       0       0
  6329 ;;      Locals:         0       5       0       0       0
  6330 ;;      Temps:          0       2       0       0       0
  6331 ;;      Totals:         2       7       0       0       0
  6332 ;;Total ram usage:        9 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		___flmul
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           
  6343                           ;psect for function __Umul8_16
  6344  17D7                     __Umul8_16:
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6348                           ;__Umul8_16@multiplier stored from wreg
  6349  17D7  1283               	bcf	3,5	;RP0=0, select bank0
  6350  17D8  1303               	bcf	3,6	;RP1=0, select bank0
  6351  17D9  00A6               	movwf	__Umul8_16@multiplier
  6352  17DA                     l2092:
  6353  17DA  01A2               	clrf	__Umul8_16@product
  6354  17DB  01A3               	clrf	__Umul8_16@product+1
  6355  17DC                     l2094:
  6356  17DC  0876               	movf	__Umul8_16@multiplicand,w
  6357  17DD  00A0               	movwf	??__Umul8_16
  6358  17DE  01A1               	clrf	??__Umul8_16+1
  6359  17DF  0820               	movf	??__Umul8_16,w
  6360  17E0  00A4               	movwf	__Umul8_16@word_mpld
  6361  17E1  0821               	movf	??__Umul8_16+1,w
  6362  17E2  00A5               	movwf	__Umul8_16@word_mpld+1
  6363  17E3                     l2096:
  6364  17E3  1C26               	btfss	__Umul8_16@multiplier,0
  6365  17E4  2FE6               	goto	u2521
  6366  17E5  2FE7               	goto	u2520
  6367  17E6                     u2521:
  6368  17E6  2FED               	goto	l719
  6369  17E7                     u2520:
  6370  17E7                     l2098:
  6371  17E7  0824               	movf	__Umul8_16@word_mpld,w
  6372  17E8  07A2               	addwf	__Umul8_16@product,f
  6373  17E9  1803               	skipnc
  6374  17EA  0AA3               	incf	__Umul8_16@product+1,f
  6375  17EB  0825               	movf	__Umul8_16@word_mpld+1,w
  6376  17EC  07A3               	addwf	__Umul8_16@product+1,f
  6377  17ED                     l719:
  6378  17ED  3001               	movlw	1
  6379  17EE                     u2535:
  6380  17EE  1003               	clrc
  6381  17EF  0DA4               	rlf	__Umul8_16@word_mpld,f
  6382  17F0  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  6383  17F1  3EFF               	addlw	-1
  6384  17F2  1D03               	skipz
  6385  17F3  2FEE               	goto	u2535
  6386  17F4  1003               	clrc
  6387  17F5  0CA6               	rrf	__Umul8_16@multiplier,f
  6388  17F6                     l2100:
  6389  17F6  0826               	movf	__Umul8_16@multiplier,w
  6390  17F7  1D03               	btfss	3,2
  6391  17F8  2FFA               	goto	u2541
  6392  17F9  2FFB               	goto	u2540
  6393  17FA                     u2541:
  6394  17FA  2FE3               	goto	l2096
  6395  17FB                     u2540:
  6396  17FB                     l2102:
  6397  17FB  0823               	movf	__Umul8_16@product+1,w
  6398  17FC  00F7               	movwf	?__Umul8_16+1
  6399  17FD  0822               	movf	__Umul8_16@product,w
  6400  17FE  00F6               	movwf	?__Umul8_16
  6401  17FF                     l721:
  6402  17FF  0008               	return
  6403  1800                     __end_of__Umul8_16:
  6404                           
  6405                           	psect	text19
  6406  177C                     __ptext19:	
  6407 ;; *************** function _I2C_Start *****************
  6408 ;; Defined at:
  6409 ;;		line 24 in file "I2C.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  add             1    wreg     unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  add             1    7[COMMON] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0, pclath, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6423 ;;      Params:         0       0       0       0       0
  6424 ;;      Locals:         1       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0
  6426 ;;      Totals:         1       0       0       0       0
  6427 ;;Total ram usage:        1 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    3
  6430 ;; This function calls:
  6431 ;;		_I2C_Master_Wait
  6432 ;;		_I2C_Master_Write
  6433 ;; This function is called by:
  6434 ;;		_I2C_Read_MPU
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           
  6439                           ;psect for function _I2C_Start
  6440  177C                     _I2C_Start:
  6441                           
  6442                           ;incstack = 0
  6443                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6444                           ;I2C_Start@add stored from wreg
  6445  177C  00F7               	movwf	I2C_Start@add
  6446  177D                     l2130:
  6447                           
  6448                           ;I2C.c: 25:     I2C_Master_Wait();
  6449  177D  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  6450  1782                     l2132:
  6451                           
  6452                           ;I2C.c: 26:     SEN = 1;
  6453  1782  1683               	bsf	3,5	;RP0=1, select bank1
  6454  1783  1303               	bcf	3,6	;RP1=0, select bank1
  6455  1784  1411               	bsf	17,0	;volatile
  6456                           
  6457                           ;I2C.c: 27:     I2C_Master_Write(add);
  6458  1785  0877               	movf	I2C_Start@add,w
  6459  1786  160A  118A  276C  160A  118A  	fcall	_I2C_Master_Write
  6460  178B                     l133:
  6461  178B  0008               	return
  6462  178C                     __end_of_I2C_Start:
  6463                           
  6464                           	psect	text20
  6465  0859                     __ptext20:	
  6466 ;; *************** function _I2C_Read *****************
  6467 ;; Defined at:
  6468 ;;		line 70 in file "I2C.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  ACK_NACK        1    wreg     unsigned char 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  ACK_NACK        1    0[BANK0 ] unsigned char 
  6473 ;;  Data            1    1[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      unsigned char 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, pclath, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6483 ;;      Params:         0       0       0       0       0
  6484 ;;      Locals:         0       2       0       0       0
  6485 ;;      Temps:          1       0       0       0       0
  6486 ;;      Totals:         1       2       0       0       0
  6487 ;;Total ram usage:        3 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    2
  6490 ;; This function calls:
  6491 ;;		_I2C_ACK
  6492 ;;		_I2C_Master_Wait
  6493 ;;		_I2C_NACK
  6494 ;; This function is called by:
  6495 ;;		_I2C_Read_MPU
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function _I2C_Read
  6501  0859                     _I2C_Read:
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  6505                           ;I2C_Read@ACK_NACK stored from wreg
  6506  0859  1283               	bcf	3,5	;RP0=0, select bank0
  6507  085A  1303               	bcf	3,6	;RP1=0, select bank0
  6508  085B  00A0               	movwf	I2C_Read@ACK_NACK
  6509  085C                     l2138:
  6510                           
  6511                           ;I2C.c: 71:     I2C_Master_Wait();
  6512  085C  160A  118A  2745  120A  158A  	fcall	_I2C_Master_Wait
  6513  0861                     l2140:
  6514                           
  6515                           ;I2C.c: 73:     unsigned char Data;;I2C.c: 74:     RCEN = 1;
  6516  0861  1683               	bsf	3,5	;RP0=1, select bank1
  6517  0862  1303               	bcf	3,6	;RP1=0, select bank1
  6518  0863  1591               	bsf	17,3	;volatile
  6519  0864                     l166:	
  6520                           ;I2C.c: 75:     while (!BF);
  6521                           
  6522  0864  1C14               	btfss	20,0	;volatile
  6523  0865  2867               	goto	u2581
  6524  0866  2868               	goto	u2580
  6525  0867                     u2581:
  6526  0867  2864               	goto	l166
  6527  0868                     u2580:
  6528  0868                     l2142:
  6529                           
  6530                           ;I2C.c: 76:     Data = SSPBUF;
  6531  0868  1283               	bcf	3,5	;RP0=0, select bank0
  6532  0869  1303               	bcf	3,6	;RP1=0, select bank0
  6533  086A  0813               	movf	19,w	;volatile
  6534  086B  00F6               	movwf	??_I2C_Read
  6535  086C  0876               	movf	??_I2C_Read,w
  6536  086D  00A1               	movwf	I2C_Read@Data
  6537  086E                     l2144:
  6538                           
  6539                           ;I2C.c: 77:     if (ACK_NACK == 0)
  6540  086E  0820               	movf	I2C_Read@ACK_NACK,w
  6541  086F  1D03               	btfss	3,2
  6542  0870  2872               	goto	u2591
  6543  0871  2873               	goto	u2590
  6544  0872                     u2591:
  6545  0872  2879               	goto	l2148
  6546  0873                     u2590:
  6547  0873                     l2146:
  6548                           
  6549                           ;I2C.c: 78:         I2C_ACK();
  6550  0873  160A  118A  2727  120A  158A  	fcall	_I2C_ACK
  6551  0878  287E               	goto	l171
  6552  0879                     l2148:
  6553                           
  6554                           ;I2C.c: 80:         I2C_NACK();
  6555  0879  160A  118A  2730  120A  158A  	fcall	_I2C_NACK
  6556  087E                     l171:
  6557  087E  1283               	bcf	3,5	;RP0=0, select bank0
  6558  087F  1303               	bcf	3,6	;RP1=0, select bank0
  6559  0880  1D8C               	btfss	12,3	;volatile
  6560  0881  2883               	goto	u2601
  6561  0882  2884               	goto	u2600
  6562  0883                     u2601:
  6563  0883  287E               	goto	l171
  6564  0884                     u2600:
  6565  0884                     l173:
  6566                           
  6567                           ;I2C.c: 82:     SSPIF = 0;
  6568  0884  118C               	bcf	12,3	;volatile
  6569  0885                     l2150:
  6570                           
  6571                           ;I2C.c: 83:     return Data;
  6572  0885  0821               	movf	I2C_Read@Data,w
  6573  0886                     l174:
  6574  0886  0008               	return
  6575  0887                     __end_of_I2C_Read:
  6576                           
  6577                           	psect	text21
  6578  1730                     __ptext21:	
  6579 ;; *************** function _I2C_NACK *****************
  6580 ;; Defined at:
  6581 ;;		line 46 in file "I2C.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;		None
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		None
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6595 ;;      Params:         0       0       0       0       0
  6596 ;;      Locals:         0       0       0       0       0
  6597 ;;      Temps:          0       0       0       0       0
  6598 ;;      Totals:         0       0       0       0       0
  6599 ;;Total ram usage:        0 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_I2C_Read
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           
  6610                           ;psect for function _I2C_NACK
  6611  1730                     _I2C_NACK:
  6612  1730                     l1838:	
  6613                           ;incstack = 0
  6614                           ; Regs used in _I2C_NACK: []
  6615                           
  6616                           
  6617                           ;I2C.c: 47:     ACKDT = 1;
  6618  1730  1683               	bsf	3,5	;RP0=1, select bank1
  6619  1731  1303               	bcf	3,6	;RP1=0, select bank1
  6620  1732  1691               	bsf	17,5	;volatile
  6621                           
  6622                           ;I2C.c: 48:     ACKEN = 1;
  6623  1733  1611               	bsf	17,4	;volatile
  6624  1734                     l148:	
  6625                           ;I2C.c: 49:     while (ACKEN);
  6626                           
  6627  1734  1A11               	btfsc	17,4	;volatile
  6628  1735  2F37               	goto	u1881
  6629  1736  2F38               	goto	u1880
  6630  1737                     u1881:
  6631  1737  2F34               	goto	l148
  6632  1738                     u1880:
  6633  1738                     l151:
  6634  1738  0008               	return
  6635  1739                     __end_of_I2C_NACK:
  6636                           
  6637                           	psect	text22
  6638  1727                     __ptext22:	
  6639 ;; *************** function _I2C_ACK *****************
  6640 ;; Defined at:
  6641 ;;		line 40 in file "I2C.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;		None
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;		None
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  1    wreg      void 
  6648 ;; Registers used:
  6649 ;;		None
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6655 ;;      Params:         0       0       0       0       0
  6656 ;;      Locals:         0       0       0       0       0
  6657 ;;      Temps:          0       0       0       0       0
  6658 ;;      Totals:         0       0       0       0       0
  6659 ;;Total ram usage:        0 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_I2C_Read
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           
  6670                           ;psect for function _I2C_ACK
  6671  1727                     _I2C_ACK:
  6672  1727                     l1836:	
  6673                           ;incstack = 0
  6674                           ; Regs used in _I2C_ACK: []
  6675                           
  6676                           
  6677                           ;I2C.c: 41:     ACKDT = 0;
  6678  1727  1683               	bsf	3,5	;RP0=1, select bank1
  6679  1728  1303               	bcf	3,6	;RP1=0, select bank1
  6680  1729  1291               	bcf	17,5	;volatile
  6681                           
  6682                           ;I2C.c: 42:     ACKEN = 1;
  6683  172A  1611               	bsf	17,4	;volatile
  6684  172B                     l142:	
  6685                           ;I2C.c: 43:     while (ACKEN);
  6686                           
  6687  172B  1A11               	btfsc	17,4	;volatile
  6688  172C  2F2E               	goto	u1871
  6689  172D  2F2F               	goto	u1870
  6690  172E                     u1871:
  6691  172E  2F2B               	goto	l142
  6692  172F                     u1870:
  6693  172F                     l145:
  6694  172F  0008               	return
  6695  1730                     __end_of_I2C_ACK:
  6696                           
  6697                           	psect	text23
  6698  171E                     __ptext23:	
  6699 ;; *************** function _I2C_Master_RepeatedStart *****************
  6700 ;; Defined at:
  6701 ;;		line 30 in file "I2C.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;		None
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      void 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0, pclath, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6715 ;;      Params:         0       0       0       0       0
  6716 ;;      Locals:         0       0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0
  6718 ;;      Totals:         0       0       0       0       0
  6719 ;;Total ram usage:        0 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    2
  6722 ;; This function calls:
  6723 ;;		_I2C_Master_Wait
  6724 ;; This function is called by:
  6725 ;;		_I2C_Read_MPU
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           
  6730                           ;psect for function _I2C_Master_RepeatedStart
  6731  171E                     _I2C_Master_RepeatedStart:
  6732  171E                     l2134:	
  6733                           ;incstack = 0
  6734                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6735                           
  6736                           
  6737                           ;I2C.c: 31:     I2C_Master_Wait();
  6738  171E  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  6739  1723                     l2136:
  6740                           
  6741                           ;I2C.c: 32:     RSEN = 1;
  6742  1723  1683               	bsf	3,5	;RP0=1, select bank1
  6743  1724  1303               	bcf	3,6	;RP1=0, select bank1
  6744  1725  1491               	bsf	17,1	;volatile
  6745  1726                     l136:
  6746  1726  0008               	return
  6747  1727                     __end_of_I2C_Master_RepeatedStart:
  6748                           
  6749                           	psect	text24
  6750  1752                     __ptext24:	
  6751 ;; *************** function _I2C_Master_Init *****************
  6752 ;; Defined at:
  6753 ;;		line 6 in file "I2C.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;		None
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6767 ;;      Params:         0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0
  6770 ;;      Totals:         0       0       0       0       0
  6771 ;;Total ram usage:        0 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    1
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_main
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           
  6782                           ;psect for function _I2C_Master_Init
  6783  1752                     _I2C_Master_Init:
  6784  1752                     l2546:	
  6785                           ;incstack = 0
  6786                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  6787                           
  6788                           
  6789                           ;I2C.c: 7:     SSPCON = 0x28;
  6790  1752  3028               	movlw	40
  6791  1753  1283               	bcf	3,5	;RP0=0, select bank0
  6792  1754  1303               	bcf	3,6	;RP1=0, select bank0
  6793  1755  0094               	movwf	20	;volatile
  6794  1756                     l2548:
  6795                           
  6796                           ;I2C.c: 8:     SSPCON2 = 0x00;
  6797  1756  1683               	bsf	3,5	;RP0=1, select bank1
  6798  1757  1303               	bcf	3,6	;RP1=0, select bank1
  6799  1758  0191               	clrf	17	;volatile
  6800  1759                     l2550:
  6801                           
  6802                           ;I2C.c: 9:     SSPSTAT = 0x00;
  6803  1759  0194               	clrf	20	;volatile
  6804                           
  6805                           ;I2C.c: 10:     SSPADD = ((4000000 / 4) / 100000) - 1;
  6806  175A  3009               	movlw	9
  6807  175B  0093               	movwf	19	;volatile
  6808  175C                     l2552:
  6809                           
  6810                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  6811  175C  1587               	bsf	7,3	;volatile
  6812  175D                     l2554:
  6813                           
  6814                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  6815  175D  1607               	bsf	7,4	;volatile
  6816  175E                     l121:
  6817  175E  0008               	return
  6818  175F                     __end_of_I2C_Master_Init:
  6819                           
  6820                           	psect	text25
  6821  0ABD                     __ptext25:	
  6822 ;; *************** function _I2C_MPU_Init *****************
  6823 ;; Defined at:
  6824 ;;		line 111 in file "main.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;		None
  6827 ;; Auto vars:     Size  Location     Type
  6828 ;;		None
  6829 ;; Return value:  Size  Location     Type
  6830 ;;                  1    wreg      void 
  6831 ;; Registers used:
  6832 ;;		wreg, status,2, status,0, pclath, cstack
  6833 ;; Tracked objects:
  6834 ;;		On entry : 0/0
  6835 ;;		On exit  : 0/0
  6836 ;;		Unchanged: 0/0
  6837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6838 ;;      Params:         0       0       0       0       0
  6839 ;;      Locals:         0       0       0       0       0
  6840 ;;      Temps:          0       0       0       0       0
  6841 ;;      Totals:         0       0       0       0       0
  6842 ;;Total ram usage:        0 bytes
  6843 ;; Hardware stack levels used:    1
  6844 ;; Hardware stack levels required when called:    3
  6845 ;; This function calls:
  6846 ;;		_I2C_Master_Start
  6847 ;;		_I2C_Master_Stop
  6848 ;;		_I2C_Master_Write
  6849 ;; This function is called by:
  6850 ;;		_main
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           
  6855                           ;psect for function _I2C_MPU_Init
  6856  0ABD                     _I2C_MPU_Init:
  6857  0ABD                     l2556:	
  6858                           ;incstack = 0
  6859                           ; Regs used in _I2C_MPU_Init: [wreg+status,2+status,0+pclath+cstack]
  6860                           
  6861                           
  6862                           ;main.c: 113:     I2C_Master_RepeatedStart();
  6863  0ABD  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6864                           
  6865                           ;main.c: 114:     I2C_Master_Write(0xD1);
  6866  0AC2  30D0               	movlw	208
  6867  0AC3  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6868                           
  6869                           ;main.c: 115:     for (int Addr = 0; Addr < 5; Addr++) temp[Addr] = I2C_Read(0);
  6870  0AC8  306B               	movlw	107
  6871  0AC9  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6872                           
  6873                           ;main.c: 116:     temp[5] = I2C_Read(1);
  6874  0ACE  3001               	movlw	1
  6875  0ACF  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6876                           
  6877                           ;main.c: 117:     I2C_Master_Stop();
  6878  0AD4  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6879                           
  6880                           ;main.c: 119: 
  6881  0AD9  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6882                           
  6883                           ;main.c: 120:     valor_original[0] = ((int) temp[0] << 8) | ((int) temp[1]);
  6884  0ADE  30D0               	movlw	208
  6885  0ADF  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6886                           
  6887                           ;main.c: 121:     valor_original[1] = ((int) temp[2] << 8) | ((int) temp[3]);
  6888  0AE4  3019               	movlw	25
  6889  0AE5  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6890                           
  6891                           ;main.c: 122:     valor_original[2] = ((int) temp[4] << 8) | ((int) temp[5]);
  6892  0AEA  3007               	movlw	7
  6893  0AEB  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6894                           
  6895                           ;main.c: 123: 
  6896  0AF0  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6897                           
  6898                           ;main.c: 125:     data_send[1] = ((float) valor_original[1]) * 0.0005982;
  6899  0AF5  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6900                           
  6901                           ;main.c: 126:     data_send[2] = ((float) valor_original[2]) * 0.0005982;
  6902  0AFA  30D0               	movlw	208
  6903  0AFB  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6904                           
  6905                           ;main.c: 127:     return;
  6906  0B00  301A               	movlw	26
  6907  0B01  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6908                           
  6909                           ;main.c: 128: }
  6910  0B06  3000               	movlw	0
  6911  0B07  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6912  0B0C  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6913  0B11  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6914  0B16  30D0               	movlw	208
  6915  0B17  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6916  0B1C  301B               	movlw	27
  6917  0B1D  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6918  0B22  3000               	movlw	0
  6919  0B23  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6920  0B28  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6921  0B2D  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6922  0B32  30D0               	movlw	208
  6923  0B33  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6924  0B38  301C               	movlw	28
  6925  0B39  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6926  0B3E  3000               	movlw	0
  6927  0B3F  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6928  0B44  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6929  0B49                     l75:
  6930  0B49  0008               	return
  6931  0B4A                     __end_of_I2C_MPU_Init:
  6932                           
  6933                           	psect	text26
  6934  176C                     __ptext26:	
  6935 ;; *************** function _I2C_Master_Write *****************
  6936 ;; Defined at:
  6937 ;;		line 52 in file "I2C.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  data            1    wreg     unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  data            1    6[COMMON] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      unsigned char 
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0, pclath, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6951 ;;      Params:         0       0       0       0       0
  6952 ;;      Locals:         1       0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0
  6954 ;;      Totals:         1       0       0       0       0
  6955 ;;Total ram usage:        1 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    2
  6958 ;; This function calls:
  6959 ;;		_I2C_Master_Wait
  6960 ;; This function is called by:
  6961 ;;		_I2C_MPU_Init
  6962 ;;		_I2C_Read_MPU
  6963 ;;		_I2C_Start
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           
  6968                           ;psect for function _I2C_Master_Write
  6969  176C                     _I2C_Master_Write:
  6970                           
  6971                           ;incstack = 0
  6972                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6973                           ;I2C_Master_Write@data stored from wreg
  6974  176C  00F6               	movwf	I2C_Master_Write@data
  6975  176D                     l1832:
  6976                           
  6977                           ;I2C.c: 53:     I2C_Master_Wait();
  6978  176D  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  6979  1772                     l1834:
  6980                           
  6981                           ;I2C.c: 54:     SSPBUF = data;
  6982  1772  0876               	movf	I2C_Master_Write@data,w
  6983  1773  1283               	bcf	3,5	;RP0=0, select bank0
  6984  1774  1303               	bcf	3,6	;RP1=0, select bank0
  6985  1775  0093               	movwf	19	;volatile
  6986  1776                     l154:	
  6987                           ;I2C.c: 55:     while (!SSPIF);
  6988                           
  6989  1776  1D8C               	btfss	12,3	;volatile
  6990  1777  2F79               	goto	u1861
  6991  1778  2F7A               	goto	u1860
  6992  1779                     u1861:
  6993  1779  2F76               	goto	l154
  6994  177A                     u1860:
  6995  177A                     l156:
  6996                           
  6997                           ;I2C.c: 56:     SSPIF = 0;
  6998  177A  118C               	bcf	12,3	;volatile
  6999  177B                     l157:	
  7000                           ;I2C.c: 57:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  7001                           
  7002  177B  0008               	return
  7003  177C                     __end_of_I2C_Master_Write:
  7004                           
  7005                           	psect	text27
  7006  1715                     __ptext27:	
  7007 ;; *************** function _I2C_Master_Stop *****************
  7008 ;; Defined at:
  7009 ;;		line 35 in file "I2C.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7023 ;;      Params:         0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0
  7026 ;;      Totals:         0       0       0       0       0
  7027 ;;Total ram usage:        0 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    2
  7030 ;; This function calls:
  7031 ;;		_I2C_Master_Wait
  7032 ;; This function is called by:
  7033 ;;		_I2C_MPU_Init
  7034 ;;		_I2C_Read_MPU
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           
  7039                           ;psect for function _I2C_Master_Stop
  7040  1715                     _I2C_Master_Stop:
  7041  1715                     l2126:	
  7042                           ;incstack = 0
  7043                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7044                           
  7045                           
  7046                           ;I2C.c: 36:     I2C_Master_Wait();
  7047  1715  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  7048  171A                     l2128:
  7049                           
  7050                           ;I2C.c: 37:     PEN = 1;
  7051  171A  1683               	bsf	3,5	;RP0=1, select bank1
  7052  171B  1303               	bcf	3,6	;RP1=0, select bank1
  7053  171C  1511               	bsf	17,2	;volatile
  7054  171D                     l139:
  7055  171D  0008               	return
  7056  171E                     __end_of_I2C_Master_Stop:
  7057                           
  7058                           	psect	text28
  7059  170C                     __ptext28:	
  7060 ;; *************** function _I2C_Master_Start *****************
  7061 ;; Defined at:
  7062 ;;		line 19 in file "I2C.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0, pclath, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7076 ;;      Params:         0       0       0       0       0
  7077 ;;      Locals:         0       0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0
  7079 ;;      Totals:         0       0       0       0       0
  7080 ;;Total ram usage:        0 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    2
  7083 ;; This function calls:
  7084 ;;		_I2C_Master_Wait
  7085 ;; This function is called by:
  7086 ;;		_I2C_MPU_Init
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           
  7091                           ;psect for function _I2C_Master_Start
  7092  170C                     _I2C_Master_Start:
  7093  170C                     l2122:	
  7094                           ;incstack = 0
  7095                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7096                           
  7097                           
  7098                           ;I2C.c: 20:     I2C_Master_Wait();
  7099  170C  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  7100  1711                     l2124:
  7101                           
  7102                           ;I2C.c: 21:     SEN = 1;
  7103  1711  1683               	bsf	3,5	;RP0=1, select bank1
  7104  1712  1303               	bcf	3,6	;RP1=0, select bank1
  7105  1713  1411               	bsf	17,0	;volatile
  7106  1714                     l130:
  7107  1714  0008               	return
  7108  1715                     __end_of_I2C_Master_Start:
  7109                           
  7110                           	psect	text29
  7111  1745                     __ptext29:	
  7112 ;; *************** function _I2C_Master_Wait *****************
  7113 ;; Defined at:
  7114 ;;		line 15 in file "I2C.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      void 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7128 ;;      Params:         0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0
  7131 ;;      Totals:         0       0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    1
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_I2C_Master_Start
  7139 ;;		_I2C_Start
  7140 ;;		_I2C_Master_RepeatedStart
  7141 ;;		_I2C_Master_Stop
  7142 ;;		_I2C_Master_Write
  7143 ;;		_I2C_Read
  7144 ;;		_I2C_Read_Byte
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           
  7149                           ;psect for function _I2C_Master_Wait
  7150  1745                     _I2C_Master_Wait:
  7151  1745                     l1828:	
  7152                           ;incstack = 0
  7153                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7154                           
  7155  1745                     l124:	
  7156                           ;I2C.c: 16:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7157                           
  7158  1745  1683               	bsf	3,5	;RP0=1, select bank1
  7159  1746  1303               	bcf	3,6	;RP1=0, select bank1
  7160  1747  1914               	btfsc	20,2	;volatile
  7161  1748  2F4A               	goto	u1841
  7162  1749  2F4B               	goto	u1840
  7163  174A                     u1841:
  7164  174A  2F45               	goto	l124
  7165  174B                     u1840:
  7166  174B                     l1830:
  7167  174B  0811               	movf	17,w	;volatile
  7168  174C  391F               	andlw	31
  7169  174D  1D03               	btfss	3,2
  7170  174E  2F50               	goto	u1851
  7171  174F  2F51               	goto	u1850
  7172  1750                     u1851:
  7173  1750  2F45               	goto	l124
  7174  1751                     u1850:
  7175  1751                     l127:
  7176  1751  0008               	return
  7177  1752                     __end_of_I2C_Master_Wait:
  7178                           
  7179                           	psect	text30
  7180  0887                     __ptext30:	
  7181 ;; *************** function _isr *****************
  7182 ;; Defined at:
  7183 ;;		line 52 in file "main.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;		None
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  opcionUART      1    5[COMMON] unsigned char 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  1    wreg      void 
  7190 ;; Registers used:
  7191 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7197 ;;      Params:         0       0       0       0       0
  7198 ;;      Locals:         1       0       0       0       0
  7199 ;;      Temps:          5       0       0       0       0
  7200 ;;      Totals:         6       0       0       0       0
  7201 ;;Total ram usage:        6 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		Interrupt level 1
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function _isr
  7212  0887                     _isr:
  7213  0887                     i1l1700:
  7214                           
  7215                           ;main.c: 53: 
  7216  0887  1283               	bcf	3,5	;RP0=0, select bank0
  7217  0888  1303               	bcf	3,6	;RP1=0, select bank0
  7218  0889  1E8C               	btfss	12,5	;volatile
  7219  088A  288C               	goto	u178_21
  7220  088B  288D               	goto	u178_20
  7221  088C                     u178_21:
  7222  088C  28B0               	goto	i1l64
  7223  088D                     u178_20:
  7224  088D                     i1l1702:
  7225                           
  7226                           ;main.c: 54:         buffer = ftoa(valor_arreglado[0], status);
  7227  088D  081A               	movf	26,w	;volatile
  7228  088E  00F0               	movwf	??_isr
  7229  088F  0870               	movf	??_isr,w
  7230  0890  00F5               	movwf	isr@opcionUART
  7231                           
  7232                           ;main.c: 55:         UARTSendString(buffer, 6);
  7233  0891  289A               	goto	i1l1706
  7234  0892                     i1l59:	
  7235                           ;main.c: 57:         buffer = ftoa(valor_arreglado[1], status);
  7236                           
  7237                           
  7238                           ;main.c: 58:         UARTSendString(" ", 10);
  7239  0892  1405               	bsf	5,0	;volatile
  7240                           
  7241                           ;main.c: 59:         UARTSendString(buffer, 6);
  7242  0893  28B0               	goto	i1l64
  7243  0894                     i1l61:	
  7244                           ;main.c: 60: 
  7245                           
  7246                           
  7247                           ;main.c: 61:         buffer = ftoa(valor_arreglado[2], status);
  7248  0894  1005               	bcf	5,0	;volatile
  7249                           
  7250                           ;main.c: 62:         UARTSendString(" ", 10);
  7251  0895  28B0               	goto	i1l64
  7252  0896                     i1l62:	
  7253                           ;main.c: 63:         UARTSendString(buffer, 6);
  7254                           
  7255                           
  7256                           ;main.c: 64: 
  7257  0896  1485               	bsf	5,1	;volatile
  7258                           
  7259                           ;main.c: 65:         UARTSendChar('\n');
  7260  0897  28B0               	goto	i1l64
  7261  0898                     i1l63:	
  7262                           ;main.c: 66: 
  7263                           
  7264                           
  7265                           ;main.c: 67:     }
  7266  0898  1085               	bcf	5,1	;volatile
  7267                           
  7268                           ;main.c: 68: }
  7269  0899  28B0               	goto	i1l64
  7270  089A                     i1l1706:
  7271  089A  0875               	movf	isr@opcionUART,w
  7272  089B  00F0               	movwf	??_isr
  7273  089C  01F1               	clrf	??_isr+1
  7274                           
  7275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7276                           ; Switch size 1, requested type "simple"
  7277                           ; Number of cases is 1, Range of values is 0 to 0
  7278                           ; switch strategies available:
  7279                           ; Name         Instructions Cycles
  7280                           ; simple_byte            4     3 (average)
  7281                           ; direct_byte           11     8 (fixed)
  7282                           ; jumptable            260     6 (fixed)
  7283                           ;	Chosen strategy is simple_byte
  7284  089D  0871               	movf	??_isr+1,w
  7285  089E  3A00               	xorlw	0	; case 0
  7286  089F  1903               	skipnz
  7287  08A0  28A2               	goto	i1l2724
  7288  08A1  28B0               	goto	i1l64
  7289  08A2                     i1l2724:
  7290                           
  7291                           ; Switch size 1, requested type "simple"
  7292                           ; Number of cases is 4, Range of values is 97 to 100
  7293                           ; switch strategies available:
  7294                           ; Name         Instructions Cycles
  7295                           ; simple_byte           13     7 (average)
  7296                           ; direct_byte           23    11 (fixed)
  7297                           ; jumptable            263     9 (fixed)
  7298                           ;	Chosen strategy is simple_byte
  7299  08A2  0870               	movf	??_isr,w
  7300  08A3  3A61               	xorlw	97	; case 97
  7301  08A4  1903               	skipnz
  7302  08A5  2892               	goto	i1l59
  7303  08A6  3A03               	xorlw	3	; case 98
  7304  08A7  1903               	skipnz
  7305  08A8  2894               	goto	i1l61
  7306  08A9  3A01               	xorlw	1	; case 99
  7307  08AA  1903               	skipnz
  7308  08AB  2896               	goto	i1l62
  7309  08AC  3A07               	xorlw	7	; case 100
  7310  08AD  1903               	skipnz
  7311  08AE  2898               	goto	i1l63
  7312  08AF  28B0               	goto	i1l64
  7313  08B0                     i1l64:
  7314  08B0  0874               	movf	??_isr+4,w
  7315  08B1  008A               	movwf	10
  7316  08B2  0873               	movf	??_isr+3,w
  7317  08B3  0084               	movwf	4
  7318  08B4  0E72               	swapf	??_isr+2,w
  7319  08B5  0083               	movwf	3
  7320  08B6  0EFE               	swapf	btemp,f
  7321  08B7  0E7E               	swapf	btemp,w
  7322  08B8  0009               	retfie
  7323  08B9                     __end_of_isr:
  7324  007E                     btemp	set	126	;btemp
  7325  007E                     wtemp0	set	126
  7326                           
  7327                           	psect	intentry
  7328  0004                     __pintentry:	
  7329                           ;incstack = 0
  7330                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  7331                           
  7332  0004                     interrupt_function:
  7333  007E                     saved_w	set	btemp
  7334  0004  00FE               	movwf	btemp
  7335  0005  0E03               	swapf	3,w
  7336  0006  00F2               	movwf	??_isr+2
  7337  0007  0804               	movf	4,w
  7338  0008  00F3               	movwf	??_isr+3
  7339  0009  080A               	movf	10,w
  7340  000A  00F4               	movwf	??_isr+4
  7341  000B  120A  158A  2887   	ljmp	_isr
  7342                           
  7343                           	psect	config
  7344                           
  7345                           ;Config register CONFIG1 @ 0x2007
  7346                           ;	Oscillator Selection bits
  7347                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7348                           ;	Watchdog Timer Enable bit
  7349                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7350                           ;	Power-up Timer Enable bit
  7351                           ;	PWRTE = OFF, PWRT disabled
  7352                           ;	RE3/MCLR pin function select bit
  7353                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7354                           ;	Code Protection bit
  7355                           ;	CP = OFF, Program memory code protection is disabled
  7356                           ;	Data Code Protection bit
  7357                           ;	CPD = OFF, Data memory code protection is disabled
  7358                           ;	Brown Out Reset Selection bits
  7359                           ;	BOREN = OFF, BOR disabled
  7360                           ;	Internal External Switchover bit
  7361                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7362                           ;	Fail-Safe Clock Monitor Enabled bit
  7363                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7364                           ;	Low Voltage Programming Enable bit
  7365                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7366                           ;	In-Circuit Debugger Mode bit
  7367                           ;	DEBUG = 0x1, unprogrammed default
  7368  2007                     	org	8199
  7369  2007  20D4               	dw	8404
  7370                           
  7371                           ;Config register CONFIG2 @ 0x2008
  7372                           ;	Brown-out Reset Selection bit
  7373                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7374                           ;	Flash Program Memory Self Write Enable bits
  7375                           ;	WRT = OFF, Write protection off
  7376  2008                     	org	8200
  7377  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    40
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     70      73
    BANK1            80      0      29
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> NULL(NULL[0]), RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), STR_2(CODE[2]), STR_1(CODE[2]), 

    I2C_Read_MPU@data_send	PTR float  size(1) Largest target is 12
		 -> valor_arreglado(BANK1[12]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    buffer	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _sprintf->___llmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___llmod->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Read_MPU->_I2C_Start
    ___flmul->__Umul8_16
    _I2C_Start->_I2C_Master_Write
    _I2C_MPU_Init->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ftoa
    _ftoa->___fltol
    _sprintf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    _UARTInit->___lldiv
    _I2C_Read_MPU->___flmul
    ___flmul->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15640
                                             67 BANK0      3     3      0
                       _I2C_MPU_Init
                    _I2C_Master_Init
                       _I2C_Read_MPU
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                               _ftoa
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                16    10      6    9764
                                             51 BANK0     16    10      6
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             34    25      9    2414
                                             22 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              6 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              6 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              7 COMMON     1     1      0
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2333
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2136
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3     917
                                              0 BANK0      8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     836
                                             13 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              6 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Read_MPU                                        19    19      0    4079
                                             40 BANK0     19    19      0
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              6 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              7 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _I2C_ACK
                    _I2C_Master_Wait
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_MPU_Init                                         0     0      0      22
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              6 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0      15
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_MPU_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
   _I2C_Read_MPU
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_Master_Wait
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _ftoa
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 21:43:37 2021

                UARTInit@baud_rate 002D                                  pc 0002  
               __size_of_I2C_Start 0010                                 _BF 04A0  
                               l81 0621                                 l75 0B49  
                               l86 073B                                 l78 0615  
            __size_of_I2C_MPU_Init 008D                                 fsr 0004  
              ___wmul@multiplicand 0022                __Umul8_16@word_mpld 0024  
                              l121 175E                                l130 1714  
                              l124 1745                                l133 178B  
                              l142 172B                                l127 1751  
                              l151 1738                                l207 0965  
                              l311 17BE                                l136 1726  
                              l145 172F                                l313 17D6  
                              l154 1776                                l139 171D  
                              l171 087E                                l156 177A  
                              l148 1734                                l157 177B  
                              l173 0884                                l174 0886  
                              l166 0864                                l504 0AA7  
                              l193 0A40                                l610 0465  
                              l347 09CD                                l507 0ABC  
                              l700 0383                                l196 173A  
                              l604 03E7                                l533 090E  
                              l199 1744                                l712 0377  
                              l608 048E                                l721 17FF  
                              l625 0559                                l617 060B  
                              l706 02EF                                l650 17AF  
                              l635 059F                                l820 0858  
                              l804 0F46                                l485 0B68  
                              l493 176B                                l629 057D  
                              l750 07A5                                l646 05FF  
                              l638 05DD                                l719 17ED  
                              l647 060B                                l815 0FFF  
                              l744 0760                                l488 0BD4  
                              l489 0BED                                l497 0ABC  
                              l746 07F7                                l757 07C1  
                              l758 07CD                                l767 0CC2  
                              l793 0E76                                l796 0E9C  
                              _PEN 048A                                _SEN 0488  
                  __end_of_I2C_ACK 1730                                _isr 0887  
                              fsr0 0004                                indf 0000  
                     ___flmul@aexp 0040                       ___flmul@bexp 0041  
                     ___flmul@sign 003B                       ___flmul@temp 0046  
                     ___flmul@prod 0042                       ___fltol@exp1 0052  
                             l2010 04C8                               l2002 04A0  
                             l2100 17F6                               l2012 04CA  
                             l2004 04B7                               l2020 04DD  
                             l2102 17FB                               l2022 04F3  
                             l2030 054B                               l2014 04CE  
                             l2006 04BB                               l2110 084F  
                             l2120 1740                               l2040 0578  
                             l2032 0561                               l2024 0531  
                             l2016 04CF                               l2008 04BF  
                             l2112 0855                               l2122 170C  
                             l2130 177D                               l2050 058B  
                             l2042 057C                               l2034 0566  
                             l2026 0537                               l2018 04D8  
                             l2114 0857                               l2106 0848  
                             l2124 1711                               l2140 0861  
                             l2132 1782                               l2300 0220  
                             l2060 059C                               l2044 0581  
                             l2052 058D                               l2028 053C  
                             l2220 1790                               l2212 0A9C  
                             l2204 0A83                               l2108 0849  
                             l2126 1715                               l2134 171E  
                             l2150 0885                               l2142 0868  
                             l2310 02B2                               l2302 024D  
                             l2230 0034                               l2118 173A  
                             l2070 05BB                               l2046 0584  
                             l2038 056F                               l2054 0591  
                             l2214 0AAC                               l2206 0A95  
                             l2128 171A                               l2136 1723  
                             l2144 086E                               l2312 02BB  
                             l2320 02CF                               l2304 0273  
                             l2240 0049                               l2232 0035  
                             l2224 0023                               l2400 07EA  
                             l2160 0B84                               l2080 05F4  
                             l2072 05D9                               l2064 05A4  
                             l2056 0592                               l2048 0586  
                             l2216 0AB1                               l2146 0873  
                             l2138 085C                               l2322 02D3  
                             l2314 02BF                               l2306 029B  
                             l2250 0061                               l2242 0051  
                             l2234 003A                               l2226 002A  
                             l2402 07EE                               l2170 0BEC  
                             l2162 0B88                               l2154 0B4A  
                             l2090 060A                               l2082 05F5  
                             l2074 05E2                               l2066 05A9  
                             l2058 0596                               l2218 178C  
                             l2410 0DBC                               l2148 0879  
                             l2092 17DA                               l2340 0324  
                             l2332 02F4                               l2324 02D4  
                             l2316 02C0                               l2308 02A4  
                             l2260 007D                               l2252 0066  
                             l2244 0056                               l2236 003F  
                             l2228 0030                               l2404 07EF  
                             l2164 0BAC                               l2156 0B60  
                             l2084 05F9                               l2076 05E7  
                             l2068 05B7                               l2500 0FD0  
                             l2420 0DE1                               l2412 0DC2  
                             l2094 17DC                               l2350 035B  
                             l2334 02F9                               l2342 032A  
                             l2326 02D8                               l2318 02C9  
                             l2270 00A0                               l2262 0082  
                             l2254 006B                               l2246 005C  
                             l2238 0047                               l2166 0BB0  
                             l2158 0B7C                               l2174 175F  
                             l2086 05FB                               l2078 05EF  
                             l2190 0A6C                               l2182 0A41  
                             l2502 0FD7                               l2422 0DE5  
                             l2430 0E21                               l2414 0DC9  
                             l2096 17E3                               l2360 037B  
                             l2352 035D                               l2344 0337  
                             l2336 0307                               l2328 02EC  
                             l2280 012E                               l2272 00AD  
                             l2264 0087                               l2256 0073  
                             l2248 0060                               l2520 0A02  
                             l2168 0BEA                               l2176 1769  
                             l2088 0606                               l2192 0A6D  
                             l2184 0A4E                               l2504 0FDB  
                             l2440 0E5E                               l2432 0E2F  
                             l2424 0DFA                               l2416 0DCE  
                             l2408 0DB7                               l2600 0C16  
                             l2098 17E7                               l2354 036B  
                             l2346 0342                               l2338 030B  
                             l2290 0190                               l2282 014A  
                             l2274 00CA                               l2258 0075  
                             l2370 0758                               l2530 0A34  
                             l2522 0A04                               l2178 176B  
                             l2194 0A75                               l2450 0E7D  
                             l2442 0E62                               l2434 0E33  
                             l2426 0E0D                               l2418 0DD1  
                             l2506 0FE9                               l2610 0CA7  
                             l2602 0C1A                               l2356 036F  
                             l2348 0351                               l2292 01AD  
                             l2284 0153                               l2276 00E6  
                             l2268 0090                               l2380 0783  
                             l2372 0768                               l2364 073F  
                             l2540 0A3B                               l2532 0A35  
                             l2524 0A31                               l2516 09CE  
                             l2620 0932                               l1900 038B  
                             l2196 0A77                               l2188 0A57  
                             l2460 0EC5                               l2452 0EA0  
                             l2508 0FFB                               l2436 0E36  
                             l2444 0E73                               l2428 0E11  
                             l2612 0CC1                               l2604 0C31  
                             l1830 174B                               l2550 1759  
                             l2358 0370                               l2294 01C6  
                             l2286 0163                               l2278 0112  
                             l2390 07B7                               l2382 078A  
                             l2366 0744                               l2542 0A3C  
                             l2534 0A38                               l2526 0A32  
                             l2518 09D5                               l2622 093A  
                             l1910 03A0                               l1902 0391  
                             l2198 0A7B                               l2462 0ECB  
                             l2454 0EAE                               l2446 0E78  
                             l2438 0E4B                               l2606 0C4A  
                             l2630 0CD4                               l1832 176D  
                             l2552 175C                               l2296 01E3  
                             l2288 0180                               l2392 07BB  
                             l2384 078E                               l2376 0771  
                             l2368 0748                               l2560 060F  
                             l2544 0A3F                               l2536 0A39  
                             l2528 0A33                               l2624 0947  
                             l2616 090F                               l1920 03B8  
                             l1912 03A8                               l1904 0395  
                             l1840 17B0                               l2480 0F27  
                             l2472 0EDB                               l2464 0ED3  
                             l2456 0EB3                               l2608 0C79  
                             l2640 0CEB                               l2632 0CD5  
                             l1834 1772                               l2554 175D  
                             l2546 1752                               l2298 0210  
                             l2394 07C5                               l2386 079C  
                             l2378 0776                               l2562 061B  
                             l2538 0A3A                               l2618 0916  
                             l1930 03CA                               l1922 03BE  
                             l1914 03A9                               l1906 0396  
                             l1850 17D2                               l1842 17B2  
                             l2490 0F63                               l2482 0F2E  
                             l2466 0ED9                               l2458 0EC1  
                             l2722 0E91                               l2650 0CF6  
                             l2642 0CEC                               l2634 0CE6  
                             l2626 0CC3                               l1828 1745  
                             l2556 0ABD                               l2548 1756  
                             l1836 1727                               l2396 07CF  
                             l2388 07AC                               l2580 0668  
                             l2572 0636                               l2564 0627  
                             l1860 0988                               l1932 03CF  
                             l1940 03DF                               l1924 03BF  
                             l1908 039B                               l1916 03AB  
                             l1844 17B8                               l2492 0F69  
                             l2484 0F3D                               l2476 0F12  
                             l2660 0D53                               l2652 0CFB  
                             l2644 0CED                               l2636 0CE7  
                             l2628 0CD1                               l1838 1730  
                             l2398 07E5                               l2590 0704  
                             l2582 0679                               l2574 0645  
                             l2566 0632                               l1870 09B6  
                             l1862 098C                               l1854 0966  
                             l1950 03FD                               l1942 03ED  
                             l1934 03D4                               l1926 03C5  
                             l1918 03B3                               l1846 17C5  
                             l2494 0F70                               l2486 0F53  
                             l2478 0F1C                               l2670 0DAA  
                             l2662 0D60                               l2654 0D01  
                             l2646 0CF0                               l2638 0CE8  
                             l2584 0688                               l2576 064B  
                             l1872 09BF                               l1864 0995  
                             l1856 0978                               l1960 0411  
                             l1952 0401                               l1944 03F1  
                             l1936 03DC                               l1928 03C9  
                             l1880 08C3                               l1848 17CC  
                             l2496 0F74                               l2488 0F5F  
                             l2664 0D6F                               l2656 0D27  
                             l2648 0CF1                               l2586 0697  
                             l2578 0658                               l1866 09A7  
                             l1858 097B                               l1874 09C5  
                             l1970 0425                               l1962 0415  
                             l1954 0405                               l1946 03F5  
                             l1938 03DD                               l1890 08F7  
                             l1882 08C6                               l2498 0F81  
                             l2594 0BEE                               l2666 0D8E  
                             l2658 0D34                               l2588 06CD  
                             l1868 09B5                               l1980 0449  
                             l1972 0429                               l1964 0419  
                             l1956 0409                               l1948 03F9  
                             l1892 0900                               l1884 08D3  
                             l2596 0BF4                               l2668 0D9B  
                             l1990 0479                               l1982 0469  
                             l1974 042D                               l1966 041D  
                             l1958 040D                               l1886 08D7  
                             l1894 0906                               l1878 08B9  
                             l2598 0C0D                               l1992 0482  
                             l1984 0472                               l1968 0421  
                             l1976 0431                               l1888 08E9  
                             l1986 0474                               l1994 0486  
                             l1978 0432                               l1898 0384  
                             l1996 0492                               l1988 0478  
                             l1998 0497                               ?_isr 0070  
                             STR_1 0843                               STR_2 0843  
                             STR_3 0838                               u2000 08C3  
                             u2001 08C2                               u2100 03C9  
                             u2020 08D7                               u2101 03C8  
                             u2021 08D6                               u2110 03CF  
                             u2030 08E9                               u2111 03CE  
                             u2031 08E8                               u2015 08C8  
                             u3000 0281                               u2120 03D4  
                             u2121 03D3                               u2210 048E  
                             u2130 03ED                               u2050 0906  
                             u3011 028D                               u2211 048D  
                             u2131 03EC                               u2051 0905  
                             u2035 08E5                               u3100 02F9  
                             u3012 0294                               u2220 0492  
                             u2140 03F1                               u2060 0395  
                             u3101 02F8                               u3013 029B  
                             u3005 027C                               u2301 050A  
                             u2221 0491                               u2205 047B  
                             u2141 03F0                               u2061 0394  
                             u2045 08F8                               u3110 030B  
                             u2310 051E                               u2302 050B  
                             u2230 0497                               u2150 0449  
                             u2070 039B                               u3111 030A  
                             u2311 051F                               u2303 0510  
                             u2231 0496                               u2151 0448  
                             u2071 039A                               u3120 031A  
                             u3040 02BF                               u3200 0789  
                             u2400 0596                               u2320 053C  
                             u2312 0524                               u2304 0511  
                             u2160 0454                               u2080 03A0  
                             u3041 02BE                               u3025 029D  
                             u3201 0788                               u2401 0595  
                             u2321 053B                               u2313 0525  
                             u2305 0516                               u2241 04A9  
                             u2161 0452                               u2081 039F  
                             u3130 0337                               u2410 059C  
                             u2330 0561                               u2306 0517  
                             u2250 04BB                               u2242 04B0  
                             u2170 0455                               u2090 03BE  
                             u3131 0336                               u3035 02B4  
                             u2411 059B                               u2331 0560  
                             u2251 04BA                               u2243 04B7  
                             u2155 0445                               u2091 03BD  
                             u3140 0351                               u3060 02D3  
                             u3220 07AB                               u2500 05F9  
                             u2420 05A3                               u2340 0566  
                             u2260 04BF                               u2180 0469  
                             u3300 0DC2                               u3141 0350  
                             u3125 0315                               u3061 02D2  
                             u3221 07AA                               u2501 05F8  
                             u2421 05A2                               u2341 0565  
                             u2261 04BE                               u2181 0468  
                             u3301 0DC1                               u3150 036F  
                             u3070 02D8                               u2510 060A  
                             u2430 05A9                               u2270 04CE  
                             u2190 0478                               u3310 0DE1  
                             u3151 036E                               u3135 0333  
                             u3071 02D7                               u3055 02C2  
                             u3215 079D                               u2511 0609  
                             u2431 05A8                               u2271 04CD  
                             u2191 0477                               u3311 0DE0  
                             u2600 0884                               u2520 17E7  
                             u3080 02EC                               u3240 07BB  
                             u3160 0744                               u2440 05BB  
                             u2360 057C                               u3400 0F1C  
                             u3320 0E21                               u2601 0883  
                             u2521 17E6                               u3145 034D  
                             u3081 02EB                               u3241 07BA  
                             u3161 0743                               u2441 05BA  
                             u2361 057B                               u3401 0F1B  
                             u3321 0E20                               u3090 02F3  
                             u3250 07C1                               u3170 0748  
                             u2610 0B60                               u2450 05CA  
                             u2370 0581                               u2290 04F3  
                             u3410 0F27                               u3330 0E2F  
                             u3091 02F2                               u3251 07C0  
                             u3235 07B0                               u3171 0747  
                             u2611 0B5F                               u2371 0580  
                             u2355 0571                               u2291 04F2  
                             u3411 0F26                               u3331 0E2E  
                             u2540 17FB                               u3260 07C5  
                             u3180 0768                               u3500 09E3  
                             u2620 0B7C                               u2460 05D9  
                             u2380 058B                               u2700 0A65  
                             u3420 0F3D                               u3340 0E72  
                             u2541 17FA                               u3261 07C4  
                             u3181 0767                               u2621 0B7B  
                             u2461 05D8                               u2381 058A  
                             u2293 04EF                               u2285 04D1  
                             u3421 0F3C                               u3341 0E71  
                             u3270 07DA                               u3510 0A12  
                             u2630 0B88                               u2470 05E2  
                             u2390 0591                               u2710 0A7B  
                             u2550 084F                               u3430 0F53  
                             u3350 0EA0                               u2535 17EE  
                             u2631 0B87                               u2471 05E1  
                             u2455 05C5                               u2391 0590  
                             u2711 0A7A                               u2551 084E  
                             u3431 0F52                               u3415 0F23  
                             u3351 0E9F                               u1840 174B  
                             u2800 003A                               u3280 07EA  
                             u3520 061B                               u2480 05E7  
                             u2720 0A82                               u1920 17D2  
                             u2560 0855                               u3440 0F69  
                             u3360 0ECB                               u1841 174A  
                             u2801 0039                               u3281 07E9  
                             u3521 061A                               u3505 09DE  
                             u2641 0B97                               u2481 05E6  
                             u2721 0A81                               u2705 0A60  
                             u1921 17D1                               u1905 17BF  
                             u2561 0854                               u3441 0F68  
                             u3425 0F39                               u3361 0ECA  
                             u1850 1751                               u2810 003F  
                             u3290 07EE                               u3530 0627  
                             u1930 0978                               u2570 1740  
                             u2650 0BB0                               u2642 0B98  
                             u2490 05F4                               u3450 0F80  
                             u3370 0ED3                               u1851 1750  
                             u2811 003E                               u3291 07ED  
                             u3275 07D5                               u3195 077B  
                             u3531 0626                               u1931 0977  
                             u3515 0A0D                               u2571 173F  
                             u2651 0BAF                               u2643 0B9D  
                             u2491 05F3                               u1915 17C6  
                             u3451 0F7F                               u3435 0F4F  
                             u3371 0ED2                               u1860 177A  
                             u2580 0868                               u2820 0060  
                             u3540 0658                               u2644 0B9E  
                             u2740 0A94                               u1861 1779  
                             u2581 0867                               u2901 013C  
                             u2821 005F                               u3541 0657  
                             u2661 0BBF                               u2645 0BA3  
                             u2741 0A93                               u1870 172F  
                             u2590 0873                               u2902 0143  
                             u2830 0066                               u1950 098C  
                             u2670 0BEA                               u2662 0BC0  
                             u2646 0BA4                               u2750 0A9B  
                             u3470 0FE9                               u3390 0F11  
                             u3550 0C0D                               u1871 172E  
                             u2591 0872                               u2903 014A  
                             u2831 0065                               u1951 098B  
                             u2671 0BE9                               u2663 0BC5  
                             u2751 0A9A                               u2735 0A84  
                             u3471 0FE8                               u3391 0F10  
                             u3551 0C0C                               u1880 1738  
                             u2840 006B                               u3560 0920  
                             u2664 0BC6                               u2680 1769  
                             u3480 0FFB                               u1881 1737  
                             u2921 0172                               u2841 006A  
                             u3545 0654                               u1945 097D  
                             u2665 0BCB                               u2681 1768  
                             u3481 0FFA                               u3465 0F8C  
                             u3385 0EDE                               u3617 0CCB  
                             u2922 0179                               u2850 0082  
                             u1970 09A7                               u3490 09D5  
                             u3570 0947                               u2666 0BCC  
                             u2770 0AAC                               u2690 0A4E  
                             u1890 17B8                               u2931 019F  
                             u2923 0180                               u2915 014C  
                             u2851 0081                               u1971 09A6  
                             u3491 09D4                               u3571 0946  
                             u2675 0BE6                               u2771 0AAB  
                             u2691 0A4D                               u1891 17B7  
                             u3395 0F0D                               u2932 01A6  
                             u2860 0087                               u3580 0953  
                             u2780 0AB1                               u2933 01AD  
                             u2861 0086                               u1965 098E  
                             u2781 0AB0                               u2765 0A9E  
                             u2790 0034                               u1990 09C5  
                             u3590 0965                               u2951 01D5  
                             u2871 00D8                               u2791 0033  
                             u1991 09C4                               u1975 09A3  
                             u3591 0964                               u3575 0943  
                             u2952 01DC                               u2872 00DF  
                             u2961 0202                               u2953 01E3  
                             u2945 01AF                               u2881 00F4  
                             u2873 00E6                               u1985 09B7  
                             u2962 0209                               u2882 00FB  
                             u2971 022F                               u2963 0210  
                             u2891 0120                               u2883 0102  
                             u2980 0259                               u2972 0236  
                             u2892 0127                               _RCEN 048B  
                             i1l61 0894                               u2973 023D  
                             u2893 012E                               i1l62 0896  
                             i1l63 0898                               u2991 0265  
                             i1l64 08B0                               u2992 026C  
                             u2993 0273                               u2985 0254  
                             i1l59 0892                               _RSEN 0489  
                 __end_of_I2C_NACK 1739              __size_of_I2C_Read_MPU 0130  
 __end_of_I2C_Master_RepeatedStart 1727                               _main 0CC3  
                             _ftoa 0BEE                   __end_of_I2C_Read 0887  
                             btemp 007E                               start 000E  
                     _I2C_MPU_Init 0ABD                              ??_isr 0070  
                 ?_I2C_Master_Init 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                      ___fltol@sign1 0051  
                  __end_of___fladd 060C                              ?_main 0070  
                            _ACKEN 048C                              ?_ftoa 0053  
                            _ACKDT 048D                    __end_of___flneg 176C  
                  __end_of___flmul 0384                    __end_of___flsub 17B0  
                  __end_of___fltol 0ABD                              _ANSEL 0188  
                  __end_of___lldiv 09CE                    __end_of___llmod 090F  
                            _RCREG 001A                              _SPBRG 0099  
                            _SSPIF 0063                              _TXREG 0019  
                 __end_of_UARTInit 0A41                       _I2C_Read_MPU 060C  
                  __end_of_dpowers 0838                    __end_of_isdigit 0859  
       I2C_Read_MPU@valor_original 0052                              ftoa@f 0053  
                            ftoa@l 005E                  __end_of_I2C_Start 178C  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 1000  
                  __initialization 0011                       __end_of_main 0DB4  
            I2C_Read_MPU@data_send 005A                       __end_of_ftoa 0CC3  
                        ??_I2C_ACK 0076                             ??_main 0063  
                           ??_ftoa 0059                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0076  
               ??_I2C_Master_Write 0076                   ___llmod@dividend 0031  
                           _ANSELH 0189                             i1l1700 0887  
                           i1l1702 088D                             i1l1706 089A  
                           i1l2724 08A2                             u178_20 088D  
                           u178_21 088C                             _SSPADD 0093  
                           _SSPCON 0014                             _SSPBUF 0013  
                 __end_of___xxtofl 07F8           _I2C_Master_RepeatedStart 171E  
                           ___flge 0B4A                   I2C_Read@ACK_NACK 0020  
                        ??___fladd 0028                             ___wmul 17B0  
                        ??___flneg 0076                          ??___flmul 0036  
                        ??___flsub 0076                          ??___fltol 004C  
                        ??___lldiv 0076                          ??___llmod 0077  
                           _buffer 0068            __size_of_UARTSendString 0057  
                           _status 0066                             ftoa@cp 0062  
                        ?_I2C_NACK 0070                          ??_isdigit 0076  
                        ?_I2C_Read 0070                 __size_of__Umul8_16 0029  
                           saved_w 007E                    _valor_arreglado 00B1  
                        ??_sprintf 003F                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 002A  
                     ___xxtofl@exp 0029                       ___xxtofl@val 0020  
          __end_of__initialization 001F                         ___flneg@f1 0020  
                       ___fltol@f1 0048                     __pcstackCOMMON 0070  
                        ?_UARTInit 002D                         ??_I2C_NACK 0076  
                       ??_I2C_Read 0076           UARTSendString@max_length 0022  
                     sprintf@width 004B                         __pbssBANK0 0066  
                       __pbssBANK1 00A0                       I2C_Read@Data 0021  
                __end_of__Umul8_16 1800                         __pmaintext 0CC3  
                          ?___flge 0020                            ?___wmul 0020  
                       ??_UARTInit 0032                         __pintentry 0004  
                          _I2C_ACK 1727                            _ACKSTAT 048E  
                        ?___xxtofl 0020                            _SSPCON2 0091  
                 I2C_Read_MPU@Addr 0058                            _SSPSTAT 0094  
                       __stringtab 0800                      ?_UARTSendChar 0070  
                 I2C_Read_MPU@temp 004C                       I2C_Start@add 0077  
                        _I2C_Start 177C                    __size_of___flge 00A4  
                          ___fladd 0384                            ___flneg 175F  
                          ___flmul 0023                            ___flsub 178C  
                          ___fltol 0A41                            ___lldiv 0966  
                  __size_of___wmul 0027                            ___llmod 08B9  
                   _UARTSendString 090F                            __ptext1 0BEE  
                          __ptext2 0DB4                            __ptext3 0847  
                          __ptext4 17B0                            __ptext5 08B9  
                          __ptext6 0A41                            __ptext7 178C  
                          __ptext8 0384                            __ptext9 175F  
                          _dpowers 0810                            _isdigit 0847  
                     __size_of_isr 0032                         ??___xxtofl 0024  
         __size_of_I2C_Master_Init 000D           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            _sprintf 0DB4  
                          clrloop0 07F9               end_of_initialization 001F  
                   ??_UARTSendChar 0076                            ftoa@buf 00A0  
                          ftoa@rem 005A         ??_I2C_Master_RepeatedStart 0076  
                       ?_I2C_Start 0070          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 0010                    ___lldiv@divisor 0020  
                  ___lldiv@counter 002C                          _RCSTAbits 0018  
           __end_of_UARTSendString 0966                          _PORTAbits 0005  
                      ___fladd@grs 0033                      ___xxtofl@sign 0028  
                        _TRISAbits 0085                  __size_of_I2C_NACK 0009  
                        _TRISCbits 0087                  __size_of_I2C_Read 002E  
                      ___flmul@grs 003C                          _TXSTAbits 0098  
                  ?_UARTSendString 0020                     __end_of___flge 0BEE  
                   __end_of___wmul 17D7                  __size_of_UARTInit 0073  
              start_initialization 0011                        __end_of_isr 08B9  
                       ftoa@status 0057                  ??_I2C_Master_Init 0076  
                ??_I2C_Master_Wait 0076                  ??_I2C_Master_Stop 0076  
                  ___llmod@divisor 002D                        ??_I2C_Start 0077  
                  ___llmod@counter 0035                      ?_I2C_MPU_Init 0070  
                         ??___flge 0028                           ??___wmul 0076  
                        __Umul8_16 17D7                           ?_I2C_ACK 0070  
             __end_of_UARTSendChar 1745                          ___fladd@a 0024  
                        ___fladd@b 0020                          ___flmul@a 0032  
                        ___flmul@b 002E                          ___flsub@a 0034  
                        ___flsub@b 0038                          ___latbits 0002  
                    __pcstackBANK0 0020                      ?_I2C_Read_MPU 0070  
                __size_of___xxtofl 00BC                        sprintf@flag 0044  
                      sprintf@prec 004D                     ??_I2C_MPU_Init 0077  
                 _I2C_Master_Start 170C                   _I2C_Master_Write 176C  
                    UARTSendChar@c 0076                           ?___fladd 0020  
                         ?___flneg 0020                           ?___flmul 002E  
                         ?___flsub 0034                           ?___fltol 0048  
                         ?___lldiv 0020                           ?___llmod 002D  
                       ?__Umul8_16 0076               I2C_Master_Write@data 0076  
                        __pstrings 0800                           _I2C_NACK 1730  
                         ?_isdigit 0070                           _I2C_Read 0859  
                   ??_I2C_Read_MPU 0048                           ?_sprintf 0036  
                interrupt_function 0004                     ___wmul@product 0076  
                        clear_ram0 07F8                           _PIE1bits 008C  
                  UARTSendString@i 0026                           _PIR1bits 000C  
                         _UARTInit 09CE                   __size_of_I2C_ACK 0009  
                      __stringbase 080F                  ___wmul@multiplier 0020  
                 ??_UARTSendString 0023                      isr@opcionUART 0075  
            __size_of_UARTSendChar 000C                       UARTInit@BRGH 0031  
                      ??__Umul8_16 0020  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___fladd 0288                   __size_of___flneg 000D  
                 __size_of___flmul 0361          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___flsub 0024                   __size_of___fltol 007C  
                 __size_of___lldiv 0068                   __size_of___llmod 0056  
               __end_of__stringtab 0810                        _isdigit$966 0076  
             __end_of_I2C_MPU_Init 0B4A                         sprintf@val 0046  
                  _I2C_Master_Init 1752                           ___xxtofl 073C  
                  _I2C_Master_Wait 1745                    _I2C_Master_Stop 1715  
                 __size_of_isdigit 0012                           __ptext10 0B4A  
                         __ptext11 090F                           __ptext20 0859  
                         __ptext12 1739                           __ptext21 1730  
                         __ptext13 09CE                           __ptext30 0887  
                         __ptext22 1727                           __ptext14 0966  
                         __ptext23 171E                           __ptext15 060C  
                         __ptext24 1752                           __ptext16 073C  
                         __ptext25 0ABD                           __ptext17 0023  
                         __ptext26 176C                           __ptext18 17D7  
                         __ptext27 1715                           __ptext19 177C  
                         __ptext28 170C                           __ptext29 1745  
                 __size_of_sprintf 024C                       _UARTSendChar 1739  
                    __size_of_main 00F1                      __size_of_ftoa 00D5  
             __end_of_I2C_Read_MPU 073C           __end_of_I2C_Master_Start 1715  
         __end_of_I2C_Master_Write 177C                         _INTCONbits 000B  
                         isdigit@c 0077                  UARTSendString@str 0020  
                         intlevel1 0000                          sprintf@ap 0045  
                        sprintf@sp 004A                   ___lldiv@dividend 0024  
                        stringcode 080A            __end_of_I2C_Master_Init 175F  
          __end_of_I2C_Master_Wait 1752            __end_of_I2C_Master_Stop 171E  
           __Umul8_16@multiplicand 0076                           sprintf@c 004F  
                         sprintf@f 0036                   ___lldiv@quotient 0028  
                         stringdir 080A                           stringtab 0800  
                      _SSPCON2bits 0091                      ___fladd@signs 0030  
                     ___fladd@aexp 0031                       ___fladd@bexp 0032  
             __Umul8_16@multiplier 0026                  __Umul8_16@product 0022  
