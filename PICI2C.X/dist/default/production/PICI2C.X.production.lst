

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 17:40:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  008F                     	;# 
   359  0090                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0094                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009C                     	;# 
   374  009D                     	;# 
   375  009E                     	;# 
   376  009F                     	;# 
   377  0105                     	;# 
   378  0107                     	;# 
   379  0108                     	;# 
   380  0109                     	;# 
   381  010C                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  0185                     	;# 
   387  0187                     	;# 
   388  0188                     	;# 
   389  0189                     	;# 
   390  018C                     	;# 
   391  018D                     	;# 
   392                           
   393                           	psect	strings
   394  0800                     __pstrings:
   395  0800                     stringtab:
   396  0800                     __stringtab:
   397                           
   398                           ;	String table - string pointers are 1 byte each
   399  0800  1BFF               	btfsc	btemp+1,7
   400  0801  280A               	ljmp	stringcode
   401  0802  1383               	bcf	3,7
   402  0803  187F               	btfsc	btemp+1,0
   403  0804  1783               	bsf	3,7
   404  0805  0800               	movf	0,w
   405  0806  0A84               	incf	4,f
   406  0807  1903               	skipnz
   407  0808  0AFF               	incf	btemp+1,f
   408  0809  0008               	return
   409  080A                     stringcode:
   410  080A                     stringdir:
   411  080A  3008               	movlw	high stringdir
   412  080B  008A               	movwf	10
   413  080C  0804               	movf	4,w
   414  080D  0A84               	incf	4,f
   415  080E  0782               	addwf	2,f
   416  080F                     __stringbase:
   417  080F  3400               	retlw	0
   418  0810                     __end_of__stringtab:
   419  0810                     _dpowers:
   420  0810  3401               	retlw	1
   421  0811  3400               	retlw	0
   422  0812  3400               	retlw	0
   423  0813  3400               	retlw	0
   424  0814  340A               	retlw	10
   425  0815  3400               	retlw	0
   426  0816  3400               	retlw	0
   427  0817  3400               	retlw	0
   428  0818  3464               	retlw	100
   429  0819  3400               	retlw	0
   430  081A  3400               	retlw	0
   431  081B  3400               	retlw	0
   432  081C  34E8               	retlw	232
   433  081D  3403               	retlw	3
   434  081E  3400               	retlw	0
   435  081F  3400               	retlw	0
   436  0820  3410               	retlw	16
   437  0821  3427               	retlw	39
   438  0822  3400               	retlw	0
   439  0823  3400               	retlw	0
   440  0824  34A0               	retlw	160
   441  0825  3486               	retlw	134
   442  0826  3401               	retlw	1
   443  0827  3400               	retlw	0
   444  0828  3440               	retlw	64
   445  0829  3442               	retlw	66
   446  082A  340F               	retlw	15
   447  082B  3400               	retlw	0
   448  082C  3480               	retlw	128
   449  082D  3496               	retlw	150
   450  082E  3498               	retlw	152
   451  082F  3400               	retlw	0
   452  0830  3400               	retlw	0
   453  0831  34E1               	retlw	225
   454  0832  34F5               	retlw	245
   455  0833  3405               	retlw	5
   456  0834  3400               	retlw	0
   457  0835  34CA               	retlw	202
   458  0836  349A               	retlw	154
   459  0837  343B               	retlw	59
   460  0838                     __end_of_dpowers:
   461  0019                     _TXREG	set	25
   462  0018                     _RCSTAbits	set	24
   463  0013                     _SSPBUF	set	19
   464  0014                     _SSPCON	set	20
   465  0005                     _PORTAbits	set	5
   466  0005                     _PORTA	set	5
   467  001A                     _RCREG	set	26
   468  000C                     _PIR1bits	set	12
   469  0063                     _SSPIF	set	99
   470  0098                     _TXSTAbits	set	152
   471  0099                     _SPBRG	set	153
   472  0087                     _TRISCbits	set	135
   473  0093                     _SSPADD	set	147
   474  0094                     _SSPSTAT	set	148
   475  0091                     _SSPCON2	set	145
   476  0091                     _SSPCON2bits	set	145
   477  0085                     _TRISAbits	set	133
   478  04A0                     _BF	set	1184
   479  048B                     _RCEN	set	1163
   480  048E                     _ACKSTAT	set	1166
   481  048C                     _ACKEN	set	1164
   482  048D                     _ACKDT	set	1165
   483  048A                     _PEN	set	1162
   484  0489                     _RSEN	set	1161
   485  0488                     _SEN	set	1160
   486  0189                     _ANSELH	set	393
   487  0188                     _ANSEL	set	392
   488  0838                     STR_3:
   489  0838  3425               	retlw	37	;'%'
   490  0839  346C               	retlw	108	;'l'
   491  083A  3475               	retlw	117	;'u'
   492  083B  342E               	retlw	46	;'.'
   493  083C  3425               	retlw	37	;'%'
   494  083D  3436               	retlw	54	;'6'
   495  083E  342E               	retlw	46	;'.'
   496  083F  3436               	retlw	54	;'6'
   497  0840  346C               	retlw	108	;'l'
   498  0841  3475               	retlw	117	;'u'
   499  0842  3400               	retlw	0
   500  0843                     STR_1:
   501  0843  3420               	retlw	32	;' '
   502  0844  3400               	retlw	0
   503  0843                     
   504                           	psect	cinit
   505  0011                     start_initialization:	
   506                           ; #config settings
   507                           
   508  0011                     __initialization:
   509                           
   510                           ; Clear objects allocated to BANK0
   511  0011  1283               	bcf	3,5	;RP0=0, select bank0
   512  0012  1303               	bcf	3,6	;RP1=0, select bank0
   513  0013  01E6               	clrf	__pbssBANK0& (0+127)
   514  0014  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   515  0015  01E8               	clrf	(__pbssBANK0+2)& (0+127)
   516                           
   517                           ; Clear objects allocated to BANK1
   518  0016  1383               	bcf	3,7	;select IRP bank0
   519  0017  30A0               	movlw	low __pbssBANK1
   520  0018  0084               	movwf	4
   521  0019  30BD               	movlw	low (__pbssBANK1+29)
   522  001A  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   523  001F                     end_of_initialization:	
   524                           ;End of C runtime variable initialization code
   525                           
   526  001F                     __end_of__initialization:
   527  001F  0183               	clrf	3
   528  0020  120A  158A  2CC6   	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	bssBANK0
   531  0066                     __pbssBANK0:
   532  0066                     _status:
   533  0066                     	ds	2
   534  0068                     _buffer:
   535  0068                     	ds	1
   536                           
   537                           	psect	bssBANK1
   538  00A0                     __pbssBANK1:
   539  00A0                     ftoa@buf:
   540  00A0                     	ds	17
   541  00B1                     _valor_arreglado:
   542  00B1                     	ds	12
   543                           
   544                           	psect	clrtext
   545  07F8                     clear_ram0:	
   546                           ;	Called with FSR containing the base address, and
   547                           ;	W with the last address+1
   548                           
   549  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   550  07F9                     clrloop0:
   551  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   552  07FA  0A84               	incf	4,f	;increment pointer
   553  07FB  0604               	xorwf	4,w	;XOR with final address
   554  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   555  07FD  3400               	retlw	0	;all done for this memory range, return
   556  07FE  0604               	xorwf	4,w	;XOR again to restore value
   557  07FF  2FF9               	goto	clrloop0	;do the next byte
   558                           
   559                           	psect	cstackCOMMON
   560  0070                     __pcstackCOMMON:
   561  0070                     ?_isdigit:
   562  0070                     ?_I2C_Master_Init:	
   563                           ; 1 bit 
   564                           
   565  0070                     ?_I2C_MPU_Init:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_I2C_Read_MPU:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_UARTSendChar:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_Master_Start:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_Master_Write:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_I2C_Master_Stop:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_I2C_Start:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_I2C_Master_RepeatedStart:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_I2C_Read:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_isr:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ??_isr:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_main:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_I2C_Master_Wait:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_I2C_ACK:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_I2C_NACK:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 1 bytes @ 0x0
   612  0070                     	ds	5
   613  0075                     isr@opcionUART:
   614                           
   615                           ; 1 bytes @ 0x5
   616  0075                     	ds	1
   617  0076                     ??_I2C_Master_Init:
   618  0076                     ??_UARTSendChar:	
   619                           ; 1 bytes @ 0x6
   620                           
   621  0076                     ??_I2C_Master_Start:	
   622                           ; 1 bytes @ 0x6
   623                           
   624  0076                     ??_I2C_Master_Write:	
   625                           ; 1 bytes @ 0x6
   626                           
   627  0076                     ??_I2C_Master_Stop:	
   628                           ; 1 bytes @ 0x6
   629                           
   630  0076                     ??_I2C_Master_RepeatedStart:	
   631                           ; 1 bytes @ 0x6
   632                           
   633  0076                     ??_I2C_Read:	
   634                           ; 1 bytes @ 0x6
   635                           
   636  0076                     ??_isdigit:	
   637                           ; 1 bytes @ 0x6
   638                           
   639  0076                     ??_I2C_Master_Wait:	
   640                           ; 1 bytes @ 0x6
   641                           
   642  0076                     ??_I2C_ACK:	
   643                           ; 1 bytes @ 0x6
   644                           
   645  0076                     ??_I2C_NACK:	
   646                           ; 1 bytes @ 0x6
   647                           
   648  0076                     ??___wmul:	
   649                           ; 1 bytes @ 0x6
   650                           
   651  0076                     ??___lldiv:	
   652                           ; 1 bytes @ 0x6
   653                           
   654  0076                     ??___flneg:	
   655                           ; 1 bytes @ 0x6
   656                           
   657  0076                     ??___flsub:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     ?__Umul8_16:	
   661                           ; 1 bytes @ 0x6
   662                           
   663  0076                     I2C_Master_Write@data:	
   664                           ; 2 bytes @ 0x6
   665                           
   666  0076                     UARTSendChar@c:	
   667                           ; 1 bytes @ 0x6
   668                           
   669  0076                     __Umul8_16@multiplicand:	
   670                           ; 1 bytes @ 0x6
   671                           
   672  0076                     _isdigit$923:	
   673                           ; 1 bytes @ 0x6
   674                           
   675  0076                     ___wmul@product:	
   676                           ; 1 bytes @ 0x6
   677                           
   678                           
   679                           ; 2 bytes @ 0x6
   680  0076                     	ds	1
   681  0077                     ??_I2C_MPU_Init:
   682  0077                     ??_I2C_Start:	
   683                           ; 1 bytes @ 0x7
   684                           
   685  0077                     ??___llmod:	
   686                           ; 1 bytes @ 0x7
   687                           
   688  0077                     I2C_Start@add:	
   689                           ; 1 bytes @ 0x7
   690                           
   691  0077                     isdigit@c:	
   692                           ; 1 bytes @ 0x7
   693                           
   694                           
   695                           ; 1 bytes @ 0x7
   696  0077                     	ds	1
   697                           
   698                           	psect	cstackBANK0
   699  0020                     __pcstackBANK0:
   700  0020                     ?___flge:
   701  0020                     ?_UARTSendString:	
   702                           ; 1 bit 
   703                           
   704  0020                     ??__Umul8_16:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     ?___wmul:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0020                     ?___lldiv:	
   711                           ; 2 bytes @ 0x0
   712                           
   713  0020                     ?___flneg:	
   714                           ; 4 bytes @ 0x0
   715                           
   716  0020                     ?___fladd:	
   717                           ; 4 bytes @ 0x0
   718                           
   719  0020                     ?___xxtofl:	
   720                           ; 4 bytes @ 0x0
   721                           
   722  0020                     I2C_Read@ACK_NACK:	
   723                           ; 4 bytes @ 0x0
   724                           
   725  0020                     UARTSendString@str:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0020                     ___wmul@multiplier:	
   729                           ; 2 bytes @ 0x0
   730                           
   731  0020                     ___lldiv@divisor:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0020                     ___flge@ff1:	
   735                           ; 4 bytes @ 0x0
   736                           
   737  0020                     ___flneg@f1:	
   738                           ; 4 bytes @ 0x0
   739                           
   740  0020                     ___fladd@b:	
   741                           ; 4 bytes @ 0x0
   742                           
   743  0020                     ___xxtofl@val:	
   744                           ; 4 bytes @ 0x0
   745                           
   746                           
   747                           ; 4 bytes @ 0x0
   748  0020                     	ds	1
   749  0021                     I2C_Read@Data:
   750                           
   751                           ; 1 bytes @ 0x1
   752  0021                     	ds	1
   753  0022                     UARTSendString@max_length:
   754  0022                     ___wmul@multiplicand:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0022                     __Umul8_16@product:	
   758                           ; 2 bytes @ 0x2
   759                           
   760                           
   761                           ; 2 bytes @ 0x2
   762  0022                     	ds	1
   763  0023                     ??_UARTSendString:
   764                           
   765                           ; 1 bytes @ 0x3
   766  0023                     	ds	1
   767  0024                     ??___xxtofl:
   768  0024                     __Umul8_16@word_mpld:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0024                     ___lldiv@dividend:	
   772                           ; 2 bytes @ 0x4
   773                           
   774  0024                     ___flge@ff2:	
   775                           ; 4 bytes @ 0x4
   776                           
   777  0024                     ___fladd@a:	
   778                           ; 4 bytes @ 0x4
   779                           
   780                           
   781                           ; 4 bytes @ 0x4
   782  0024                     	ds	2
   783  0026                     __Umul8_16@multiplier:
   784  0026                     UARTSendString@i:	
   785                           ; 1 bytes @ 0x6
   786                           
   787                           
   788                           ; 2 bytes @ 0x6
   789  0026                     	ds	2
   790  0028                     ??___flge:
   791  0028                     ??___fladd:	
   792                           ; 1 bytes @ 0x8
   793                           
   794  0028                     ___xxtofl@sign:	
   795                           ; 1 bytes @ 0x8
   796                           
   797  0028                     ___lldiv@quotient:	
   798                           ; 1 bytes @ 0x8
   799                           
   800                           
   801                           ; 4 bytes @ 0x8
   802  0028                     	ds	1
   803  0029                     ___xxtofl@exp:
   804                           
   805                           ; 1 bytes @ 0x9
   806  0029                     	ds	1
   807  002A                     ___xxtofl@arg:
   808                           
   809                           ; 4 bytes @ 0xA
   810  002A                     	ds	2
   811  002C                     ___lldiv@counter:
   812                           
   813                           ; 1 bytes @ 0xC
   814  002C                     	ds	1
   815  002D                     ?_UARTInit:
   816  002D                     ?___llmod:	
   817                           ; 1 bytes @ 0xD
   818                           
   819  002D                     UARTInit@baud_rate:	
   820                           ; 4 bytes @ 0xD
   821                           
   822  002D                     ___llmod@divisor:	
   823                           ; 4 bytes @ 0xD
   824                           
   825                           
   826                           ; 4 bytes @ 0xD
   827  002D                     	ds	1
   828  002E                     ?___flmul:
   829  002E                     ___flmul@b:	
   830                           ; 4 bytes @ 0xE
   831                           
   832                           
   833                           ; 4 bytes @ 0xE
   834  002E                     	ds	2
   835  0030                     ___fladd@signs:
   836                           
   837                           ; 1 bytes @ 0x10
   838  0030                     	ds	1
   839  0031                     UARTInit@BRGH:
   840  0031                     ___fladd@aexp:	
   841                           ; 1 bytes @ 0x11
   842                           
   843  0031                     ___llmod@dividend:	
   844                           ; 1 bytes @ 0x11
   845                           
   846                           
   847                           ; 4 bytes @ 0x11
   848  0031                     	ds	1
   849  0032                     ??_UARTInit:
   850  0032                     ___fladd@bexp:	
   851                           ; 1 bytes @ 0x12
   852                           
   853  0032                     ___flmul@a:	
   854                           ; 1 bytes @ 0x12
   855                           
   856                           
   857                           ; 4 bytes @ 0x12
   858  0032                     	ds	1
   859  0033                     ___fladd@grs:
   860                           
   861                           ; 1 bytes @ 0x13
   862  0033                     	ds	1
   863  0034                     ?___flsub:
   864  0034                     ___flsub@a:	
   865                           ; 4 bytes @ 0x14
   866                           
   867                           
   868                           ; 4 bytes @ 0x14
   869  0034                     	ds	1
   870  0035                     ___llmod@counter:
   871                           
   872                           ; 1 bytes @ 0x15
   873  0035                     	ds	1
   874  0036                     ??___flmul:
   875  0036                     ?_sprintf:	
   876                           ; 1 bytes @ 0x16
   877                           
   878  0036                     sprintf@f:	
   879                           ; 2 bytes @ 0x16
   880                           
   881                           
   882                           ; 1 bytes @ 0x16
   883  0036                     	ds	2
   884  0038                     ___flsub@b:
   885                           
   886                           ; 4 bytes @ 0x18
   887  0038                     	ds	3
   888  003B                     ___flmul@sign:
   889                           
   890                           ; 1 bytes @ 0x1B
   891  003B                     	ds	1
   892  003C                     ___flmul@grs:
   893                           
   894                           ; 4 bytes @ 0x1C
   895  003C                     	ds	3
   896  003F                     ??_sprintf:
   897                           
   898                           ; 1 bytes @ 0x1F
   899  003F                     	ds	1
   900  0040                     ___flmul@aexp:
   901                           
   902                           ; 1 bytes @ 0x20
   903  0040                     	ds	1
   904  0041                     ___flmul@bexp:
   905                           
   906                           ; 1 bytes @ 0x21
   907  0041                     	ds	1
   908  0042                     ___flmul@prod:
   909                           
   910                           ; 4 bytes @ 0x22
   911  0042                     	ds	2
   912  0044                     sprintf@flag:
   913                           
   914                           ; 1 bytes @ 0x24
   915  0044                     	ds	1
   916  0045                     sprintf@ap:
   917                           
   918                           ; 1 bytes @ 0x25
   919  0045                     	ds	1
   920  0046                     ___flmul@temp:
   921  0046                     sprintf@val:	
   922                           ; 2 bytes @ 0x26
   923                           
   924                           
   925                           ; 4 bytes @ 0x26
   926  0046                     	ds	2
   927  0048                     ??_I2C_Read_MPU:
   928  0048                     ?___fltol:	
   929                           ; 1 bytes @ 0x28
   930                           
   931  0048                     ___fltol@f1:	
   932                           ; 4 bytes @ 0x28
   933                           
   934                           
   935                           ; 4 bytes @ 0x28
   936  0048                     	ds	2
   937  004A                     sprintf@sp:
   938                           
   939                           ; 1 bytes @ 0x2A
   940  004A                     	ds	1
   941  004B                     sprintf@width:
   942                           
   943                           ; 2 bytes @ 0x2B
   944  004B                     	ds	1
   945  004C                     ??___fltol:
   946  004C                     I2C_Read_MPU@temp:	
   947                           ; 1 bytes @ 0x2C
   948                           
   949                           
   950                           ; 6 bytes @ 0x2C
   951  004C                     	ds	1
   952  004D                     sprintf@prec:
   953                           
   954                           ; 2 bytes @ 0x2D
   955  004D                     	ds	2
   956  004F                     sprintf@c:
   957                           
   958                           ; 1 bytes @ 0x2F
   959  004F                     	ds	2
   960  0051                     ___fltol@sign1:
   961                           
   962                           ; 1 bytes @ 0x31
   963  0051                     	ds	1
   964  0052                     ___fltol@exp1:
   965  0052                     I2C_Read_MPU@valor_original:	
   966                           ; 1 bytes @ 0x32
   967                           
   968                           
   969                           ; 6 bytes @ 0x32
   970  0052                     	ds	1
   971  0053                     ?_ftoa:
   972  0053                     ftoa@f:	
   973                           ; 1 bytes @ 0x33
   974                           
   975                           
   976                           ; 4 bytes @ 0x33
   977  0053                     	ds	4
   978  0057                     ftoa@status:
   979                           
   980                           ; 2 bytes @ 0x37
   981  0057                     	ds	1
   982  0058                     I2C_Read_MPU@Addr:
   983                           
   984                           ; 2 bytes @ 0x38
   985  0058                     	ds	1
   986  0059                     ??_ftoa:
   987                           
   988                           ; 1 bytes @ 0x39
   989  0059                     	ds	1
   990  005A                     I2C_Read_MPU@data_send:
   991  005A                     ftoa@rem:	
   992                           ; 1 bytes @ 0x3A
   993                           
   994                           
   995                           ; 4 bytes @ 0x3A
   996  005A                     	ds	4
   997  005E                     ftoa@l:
   998                           
   999                           ; 4 bytes @ 0x3E
  1000  005E                     	ds	4
  1001  0062                     ftoa@cp:
  1002                           
  1003                           ; 1 bytes @ 0x42
  1004  0062                     	ds	1
  1005  0063                     ??_main:
  1006                           
  1007                           ; 1 bytes @ 0x43
  1008  0063                     	ds	3
  1009                           
  1010                           	psect	maintext
  1011  0CC6                     __pmaintext:	
  1012 ;;
  1013 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1014 ;;
  1015 ;; *************** function _main *****************
  1016 ;; Defined at:
  1017 ;;		line 75 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : B00/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1031 ;;      Params:         0       0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0
  1033 ;;      Temps:          0       3       0       0       0
  1034 ;;      Totals:         0       3       0       0       0
  1035 ;;Total ram usage:        3 bytes
  1036 ;; Hardware stack levels required when called:    5
  1037 ;; This function calls:
  1038 ;;		_I2C_MPU_Init
  1039 ;;		_I2C_Master_Init
  1040 ;;		_I2C_Read_MPU
  1041 ;;		_UARTInit
  1042 ;;		_UARTSendChar
  1043 ;;		_UARTSendString
  1044 ;;		_ftoa
  1045 ;; This function is called by:
  1046 ;;		Startup code after reset
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _main
  1052  0CC6                     _main:
  1053  0CC6                     l2626:	
  1054                           ;incstack = 0
  1055                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1056                           
  1057  0CC6  3006               	movlw	6
  1058  0CC7  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0CC8  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0CC9  00E5               	movwf	??_main+2
  1061  0CCA  3013               	movlw	19
  1062  0CCB  00E4               	movwf	??_main+1
  1063  0CCC  30AD               	movlw	173
  1064  0CCD  00E3               	movwf	??_main
  1065  0CCE                     u3617:
  1066  0CCE  0BE3               	decfsz	??_main,f
  1067  0CCF  2CCE               	goto	u3617
  1068  0CD0  0BE4               	decfsz	??_main+1,f
  1069  0CD1  2CCE               	goto	u3617
  1070  0CD2  0BE5               	decfsz	??_main+2,f
  1071  0CD3  2CCE               	goto	u3617
  1072  0CD4                     l2628:
  1073  0CD4  1683               	bsf	3,5	;RP0=1, select bank3
  1074  0CD5  1703               	bsf	3,6	;RP1=1, select bank3
  1075  0CD6  0188               	clrf	8	;volatile
  1076  0CD7                     l2630:
  1077  0CD7  0189               	clrf	9	;volatile
  1078  0CD8                     l2632:
  1079  0CD8  3000               	movlw	0
  1080  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0CDB  00B0               	movwf	UARTInit@baud_rate+3
  1083  0CDC  3000               	movlw	0
  1084  0CDD  00AF               	movwf	UARTInit@baud_rate+2
  1085  0CDE  3025               	movlw	37
  1086  0CDF  00AE               	movwf	UARTInit@baud_rate+1
  1087  0CE0  3080               	movlw	128
  1088  0CE1  00AD               	movwf	UARTInit@baud_rate
  1089  0CE2  01B1               	clrf	UARTInit@BRGH
  1090  0CE3  0AB1               	incf	UARTInit@BRGH,f
  1091  0CE4  120A  158A  21D1  120A  158A  	fcall	_UARTInit
  1092  0CE9                     l2634:
  1093  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0CEB  1005               	bcf	5,0	;volatile
  1096  0CEC                     l2636:
  1097  0CEC  1085               	bcf	5,1	;volatile
  1098  0CED                     l2638:
  1099  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0CEF  1005               	bcf	5,0	;volatile
  1102  0CF0                     l2640:
  1103  0CF0  1085               	bcf	5,1	;volatile
  1104  0CF1                     l2642:
  1105  0CF1  160A  118A  2752  120A  158A  	fcall	_I2C_Master_Init
  1106  0CF6                     l2644:
  1107  0CF6  120A  158A  22C0  120A  158A  	fcall	_I2C_MPU_Init
  1108  0CFB                     l2646:
  1109  0CFB  30B1               	movlw	(low (_valor_arreglado| 0))& (0+255)
  1110  0CFC  120A  118A  260C  120A  158A  	fcall	_I2C_Read_MPU
  1111  0D01                     l2648:
  1112  0D01  1683               	bsf	3,5	;RP0=1, select bank1
  1113  0D02  1303               	bcf	3,6	;RP1=0, select bank1
  1114  0D03  0834               	movf	(_valor_arreglado+3)^(0+128),w
  1115  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0D06  00D6               	movwf	ftoa@f+3
  1118  0D07  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0D08  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0D09  0833               	movf	(_valor_arreglado+2)^(0+128),w
  1121  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0D0C  00D5               	movwf	ftoa@f+2
  1124  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0D0F  0832               	movf	(_valor_arreglado+1)^(0+128),w
  1127  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0D12  00D4               	movwf	ftoa@f+1
  1130  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  1131  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  1132  0D15  0831               	movf	_valor_arreglado^(0+128),w
  1133  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0D18  00D3               	movwf	ftoa@f
  1136  0D19  3000               	movlw	0
  1137  0D1A  00D7               	movwf	ftoa@status
  1138  0D1B  3000               	movlw	0
  1139  0D1C  00D8               	movwf	ftoa@status+1
  1140  0D1D  120A  158A  23F1  120A  158A  	fcall	_ftoa
  1141  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0D24  00E3               	movwf	??_main
  1144  0D25  0863               	movf	??_main,w
  1145  0D26  00E8               	movwf	_buffer
  1146  0D27                     l2650:
  1147  0D27  0868               	movf	_buffer,w
  1148  0D28  00A0               	movwf	UARTSendString@str
  1149  0D29  3000               	movlw	0
  1150  0D2A  00A1               	movwf	UARTSendString@str+1
  1151  0D2B  3006               	movlw	6
  1152  0D2C  00E3               	movwf	??_main
  1153  0D2D  0863               	movf	??_main,w
  1154  0D2E  00A2               	movwf	UARTSendString@max_length
  1155  0D2F  120A  158A  2112  120A  158A  	fcall	_UARTSendString
  1156  0D34                     l2652:
  1157  0D34  3004               	movlw	4
  1158  0D35  3EB1               	addlw	(low (_valor_arreglado| 0))& (0+255)
  1159  0D36  0084               	movwf	4
  1160  0D37  1383               	bcf	3,7	;select IRP bank1
  1161  0D38  0800               	movf	0,w
  1162  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0D3B  00D3               	movwf	ftoa@f
  1165  0D3C  0A84               	incf	4,f
  1166  0D3D  0800               	movf	0,w
  1167  0D3E  00D4               	movwf	ftoa@f+1
  1168  0D3F  0A84               	incf	4,f
  1169  0D40  0800               	movf	0,w
  1170  0D41  00D5               	movwf	ftoa@f+2
  1171  0D42  0A84               	incf	4,f
  1172  0D43  0800               	movf	0,w
  1173  0D44  00D6               	movwf	ftoa@f+3
  1174  0D45  3000               	movlw	0
  1175  0D46  00D7               	movwf	ftoa@status
  1176  0D47  3000               	movlw	0
  1177  0D48  00D8               	movwf	ftoa@status+1
  1178  0D49  120A  158A  23F1  120A  158A  	fcall	_ftoa
  1179  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0D50  00E3               	movwf	??_main
  1182  0D51  0863               	movf	??_main,w
  1183  0D52  00E8               	movwf	_buffer
  1184  0D53                     l2654:
  1185  0D53  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1186  0D54  00A0               	movwf	UARTSendString@str
  1187  0D55  3080               	movlw	128
  1188  0D56  00A1               	movwf	UARTSendString@str+1
  1189  0D57  300A               	movlw	10
  1190  0D58  00E3               	movwf	??_main
  1191  0D59  0863               	movf	??_main,w
  1192  0D5A  00A2               	movwf	UARTSendString@max_length
  1193  0D5B  120A  158A  2112  120A  158A  	fcall	_UARTSendString
  1194  0D60                     l2656:
  1195  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0D62  0868               	movf	_buffer,w
  1198  0D63  00A0               	movwf	UARTSendString@str
  1199  0D64  3000               	movlw	0
  1200  0D65  00A1               	movwf	UARTSendString@str+1
  1201  0D66  3006               	movlw	6
  1202  0D67  00E3               	movwf	??_main
  1203  0D68  0863               	movf	??_main,w
  1204  0D69  00A2               	movwf	UARTSendString@max_length
  1205  0D6A  120A  158A  2112  120A  158A  	fcall	_UARTSendString
  1206  0D6F                     l2658:
  1207  0D6F  3008               	movlw	8
  1208  0D70  3EB1               	addlw	(low (_valor_arreglado| 0))& (0+255)
  1209  0D71  0084               	movwf	4
  1210  0D72  1383               	bcf	3,7	;select IRP bank1
  1211  0D73  0800               	movf	0,w
  1212  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0D76  00D3               	movwf	ftoa@f
  1215  0D77  0A84               	incf	4,f
  1216  0D78  0800               	movf	0,w
  1217  0D79  00D4               	movwf	ftoa@f+1
  1218  0D7A  0A84               	incf	4,f
  1219  0D7B  0800               	movf	0,w
  1220  0D7C  00D5               	movwf	ftoa@f+2
  1221  0D7D  0A84               	incf	4,f
  1222  0D7E  0800               	movf	0,w
  1223  0D7F  00D6               	movwf	ftoa@f+3
  1224  0D80  3000               	movlw	0
  1225  0D81  00D7               	movwf	ftoa@status
  1226  0D82  3000               	movlw	0
  1227  0D83  00D8               	movwf	ftoa@status+1
  1228  0D84  120A  158A  23F1  120A  158A  	fcall	_ftoa
  1229  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0D8B  00E3               	movwf	??_main
  1232  0D8C  0863               	movf	??_main,w
  1233  0D8D  00E8               	movwf	_buffer
  1234  0D8E                     l2660:
  1235  0D8E  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1236  0D8F  00A0               	movwf	UARTSendString@str
  1237  0D90  3080               	movlw	128
  1238  0D91  00A1               	movwf	UARTSendString@str+1
  1239  0D92  300A               	movlw	10
  1240  0D93  00E3               	movwf	??_main
  1241  0D94  0863               	movf	??_main,w
  1242  0D95  00A2               	movwf	UARTSendString@max_length
  1243  0D96  120A  158A  2112  120A  158A  	fcall	_UARTSendString
  1244  0D9B                     l2662:
  1245  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0D9D  0868               	movf	_buffer,w
  1248  0D9E  00A0               	movwf	UARTSendString@str
  1249  0D9F  3000               	movlw	0
  1250  0DA0  00A1               	movwf	UARTSendString@str+1
  1251  0DA1  3006               	movlw	6
  1252  0DA2  00E3               	movwf	??_main
  1253  0DA3  0863               	movf	??_main,w
  1254  0DA4  00A2               	movwf	UARTSendString@max_length
  1255  0DA5  120A  158A  2112  120A  158A  	fcall	_UARTSendString
  1256  0DAA                     l2664:
  1257                           
  1258                           ;main.c: 119:         UARTSendChar('\n');
  1259  0DAA  300A               	movlw	10
  1260  0DAB  160A  118A  2739  120A  158A  	fcall	_UARTSendChar
  1261  0DB0  2CFB               	goto	l2646
  1262  0DB1  120A  118A  280E   	ljmp	start
  1263  0DB4                     __end_of_main:
  1264                           
  1265                           	psect	text1
  1266  0BF1                     __ptext1:	
  1267 ;; *************** function _ftoa *****************
  1268 ;; Defined at:
  1269 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  f               4   51[BANK0 ] float 
  1272 ;;  status          2   55[BANK0 ] PTR int 
  1273 ;;		 -> NULL(0), RAM(512), 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  l               4   62[BANK0 ] unsigned long 
  1276 ;;  rem             4   58[BANK0 ] unsigned long 
  1277 ;;  cp              1   66[BANK0 ] PTR unsigned char 
  1278 ;;		 -> ftoa@buf(17), 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      PTR unsigned char 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       6       0       0       0
  1289 ;;      Locals:         0       9       0       0       0
  1290 ;;      Temps:          0       1       0       0       0
  1291 ;;      Totals:         0      16       0       0       0
  1292 ;;Total ram usage:       16 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		___flge
  1297 ;;		___flmul
  1298 ;;		___flneg
  1299 ;;		___flsub
  1300 ;;		___fltol
  1301 ;;		___xxtofl
  1302 ;;		_sprintf
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _ftoa
  1310  0BF1                     _ftoa:
  1311  0BF1                     l2594:	
  1312                           ;incstack = 0
  1313                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1314                           
  1315  0BF1  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  1316  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0BF4  00D9               	movwf	??_ftoa
  1319  0BF5  0859               	movf	??_ftoa,w
  1320  0BF6  00E2               	movwf	ftoa@cp
  1321  0BF7                     l2596:
  1322  0BF7  0856               	movf	ftoa@f+3,w
  1323  0BF8  00A3               	movwf	___flge@ff1+3
  1324  0BF9  0855               	movf	ftoa@f+2,w
  1325  0BFA  00A2               	movwf	___flge@ff1+2
  1326  0BFB  0854               	movf	ftoa@f+1,w
  1327  0BFC  00A1               	movwf	___flge@ff1+1
  1328  0BFD  0853               	movf	ftoa@f,w
  1329  0BFE  00A0               	movwf	___flge@ff1
  1330  0BFF  3000               	movlw	0
  1331  0C00  00A7               	movwf	___flge@ff2+3
  1332  0C01  3000               	movlw	0
  1333  0C02  00A6               	movwf	___flge@ff2+2
  1334  0C03  3000               	movlw	0
  1335  0C04  00A5               	movwf	___flge@ff2+1
  1336  0C05  3000               	movlw	0
  1337  0C06  00A4               	movwf	___flge@ff2
  1338  0C07  120A  158A  234D  120A  158A  	fcall	___flge
  1339  0C0C  1803               	btfsc	3,0
  1340  0C0D  2C0F               	goto	u3551
  1341  0C0E  2C10               	goto	u3550
  1342  0C0F                     u3551:
  1343  0C0F  2C34               	goto	l2604
  1344  0C10                     u3550:
  1345  0C10                     l2598:
  1346  0C10  302D               	movlw	45
  1347  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0C13  00D9               	movwf	??_ftoa
  1350  0C14  0862               	movf	ftoa@cp,w
  1351  0C15  0084               	movwf	4
  1352  0C16  0859               	movf	??_ftoa,w
  1353  0C17  1383               	bcf	3,7	;select IRP bank0
  1354  0C18  0080               	movwf	0
  1355  0C19                     l2600:
  1356  0C19  3001               	movlw	1
  1357  0C1A  00D9               	movwf	??_ftoa
  1358  0C1B  0859               	movf	??_ftoa,w
  1359  0C1C  07E2               	addwf	ftoa@cp,f
  1360  0C1D                     l2602:
  1361  0C1D  0856               	movf	ftoa@f+3,w
  1362  0C1E  00A3               	movwf	___flneg@f1+3
  1363  0C1F  0855               	movf	ftoa@f+2,w
  1364  0C20  00A2               	movwf	___flneg@f1+2
  1365  0C21  0854               	movf	ftoa@f+1,w
  1366  0C22  00A1               	movwf	___flneg@f1+1
  1367  0C23  0853               	movf	ftoa@f,w
  1368  0C24  00A0               	movwf	___flneg@f1
  1369  0C25  160A  118A  275F  120A  158A  	fcall	___flneg
  1370  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0C2C  0823               	movf	?___flneg+3,w
  1373  0C2D  00D6               	movwf	ftoa@f+3
  1374  0C2E  0822               	movf	?___flneg+2,w
  1375  0C2F  00D5               	movwf	ftoa@f+2
  1376  0C30  0821               	movf	?___flneg+1,w
  1377  0C31  00D4               	movwf	ftoa@f+1
  1378  0C32  0820               	movf	?___flneg,w
  1379  0C33  00D3               	movwf	ftoa@f
  1380  0C34                     l2604:
  1381  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0C36  0856               	movf	ftoa@f+3,w
  1384  0C37  00CB               	movwf	___fltol@f1+3
  1385  0C38  0855               	movf	ftoa@f+2,w
  1386  0C39  00CA               	movwf	___fltol@f1+2
  1387  0C3A  0854               	movf	ftoa@f+1,w
  1388  0C3B  00C9               	movwf	___fltol@f1+1
  1389  0C3C  0853               	movf	ftoa@f,w
  1390  0C3D  00C8               	movwf	___fltol@f1
  1391  0C3E  120A  158A  2244  120A  158A  	fcall	___fltol
  1392  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0C45  084B               	movf	?___fltol+3,w
  1395  0C46  00E1               	movwf	ftoa@l+3
  1396  0C47  084A               	movf	?___fltol+2,w
  1397  0C48  00E0               	movwf	ftoa@l+2
  1398  0C49  0849               	movf	?___fltol+1,w
  1399  0C4A  00DF               	movwf	ftoa@l+1
  1400  0C4B  0848               	movf	?___fltol,w
  1401  0C4C  00DE               	movwf	ftoa@l
  1402  0C4D                     l2606:
  1403  0C4D  0861               	movf	ftoa@l+3,w
  1404  0C4E  00A3               	movwf	___xxtofl@val+3
  1405  0C4F  0860               	movf	ftoa@l+2,w
  1406  0C50  00A2               	movwf	___xxtofl@val+2
  1407  0C51  085F               	movf	ftoa@l+1,w
  1408  0C52  00A1               	movwf	___xxtofl@val+1
  1409  0C53  085E               	movf	ftoa@l,w
  1410  0C54  00A0               	movwf	___xxtofl@val
  1411  0C55  3000               	movlw	0
  1412  0C56  120A  118A  273C  120A  158A  	fcall	___xxtofl
  1413  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0C5D  0823               	movf	?___xxtofl+3,w
  1416  0C5E  00B7               	movwf	___flsub@a+3
  1417  0C5F  0822               	movf	?___xxtofl+2,w
  1418  0C60  00B6               	movwf	___flsub@a+2
  1419  0C61  0821               	movf	?___xxtofl+1,w
  1420  0C62  00B5               	movwf	___flsub@a+1
  1421  0C63  0820               	movf	?___xxtofl,w
  1422  0C64  00B4               	movwf	___flsub@a
  1423  0C65  0856               	movf	ftoa@f+3,w
  1424  0C66  00BB               	movwf	___flsub@b+3
  1425  0C67  0855               	movf	ftoa@f+2,w
  1426  0C68  00BA               	movwf	___flsub@b+2
  1427  0C69  0854               	movf	ftoa@f+1,w
  1428  0C6A  00B9               	movwf	___flsub@b+1
  1429  0C6B  0853               	movf	ftoa@f,w
  1430  0C6C  00B8               	movwf	___flsub@b
  1431  0C6D  160A  118A  278C  120A  158A  	fcall	___flsub
  1432  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0C74  0837               	movf	?___flsub+3,w
  1435  0C75  00D6               	movwf	ftoa@f+3
  1436  0C76  0836               	movf	?___flsub+2,w
  1437  0C77  00D5               	movwf	ftoa@f+2
  1438  0C78  0835               	movf	?___flsub+1,w
  1439  0C79  00D4               	movwf	ftoa@f+1
  1440  0C7A  0834               	movf	?___flsub,w
  1441  0C7B  00D3               	movwf	ftoa@f
  1442  0C7C                     l2608:
  1443  0C7C  0856               	movf	ftoa@f+3,w
  1444  0C7D  00B5               	movwf	___flmul@a+3
  1445  0C7E  0855               	movf	ftoa@f+2,w
  1446  0C7F  00B4               	movwf	___flmul@a+2
  1447  0C80  0854               	movf	ftoa@f+1,w
  1448  0C81  00B3               	movwf	___flmul@a+1
  1449  0C82  0853               	movf	ftoa@f,w
  1450  0C83  00B2               	movwf	___flmul@a
  1451  0C84  3049               	movlw	73
  1452  0C85  00B1               	movwf	___flmul@b+3
  1453  0C86  3074               	movlw	116
  1454  0C87  00B0               	movwf	___flmul@b+2
  1455  0C88  3024               	movlw	36
  1456  0C89  00AF               	movwf	___flmul@b+1
  1457  0C8A  3000               	movlw	0
  1458  0C8B  00AE               	movwf	___flmul@b
  1459  0C8C  120A  118A  2023  120A  158A  	fcall	___flmul
  1460  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0C93  0831               	movf	?___flmul+3,w
  1463  0C94  00CB               	movwf	___fltol@f1+3
  1464  0C95  0830               	movf	?___flmul+2,w
  1465  0C96  00CA               	movwf	___fltol@f1+2
  1466  0C97  082F               	movf	?___flmul+1,w
  1467  0C98  00C9               	movwf	___fltol@f1+1
  1468  0C99  082E               	movf	?___flmul,w
  1469  0C9A  00C8               	movwf	___fltol@f1
  1470  0C9B  120A  158A  2244  120A  158A  	fcall	___fltol
  1471  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0CA2  084B               	movf	?___fltol+3,w
  1474  0CA3  00DD               	movwf	ftoa@rem+3
  1475  0CA4  084A               	movf	?___fltol+2,w
  1476  0CA5  00DC               	movwf	ftoa@rem+2
  1477  0CA6  0849               	movf	?___fltol+1,w
  1478  0CA7  00DB               	movwf	ftoa@rem+1
  1479  0CA8  0848               	movf	?___fltol,w
  1480  0CA9  00DA               	movwf	ftoa@rem
  1481  0CAA                     l2610:
  1482  0CAA  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1483  0CAB  00D9               	movwf	??_ftoa
  1484  0CAC  0859               	movf	??_ftoa,w
  1485  0CAD  00B6               	movwf	sprintf@f
  1486  0CAE  0861               	movf	ftoa@l+3,w
  1487  0CAF  00BA               	movwf	?_sprintf+4
  1488  0CB0  0860               	movf	ftoa@l+2,w
  1489  0CB1  00B9               	movwf	?_sprintf+3
  1490  0CB2  085F               	movf	ftoa@l+1,w
  1491  0CB3  00B8               	movwf	?_sprintf+2
  1492  0CB4  085E               	movf	ftoa@l,w
  1493  0CB5  00B7               	movwf	?_sprintf+1
  1494  0CB6  085D               	movf	ftoa@rem+3,w
  1495  0CB7  00BE               	movwf	?_sprintf+8
  1496  0CB8  085C               	movf	ftoa@rem+2,w
  1497  0CB9  00BD               	movwf	?_sprintf+7
  1498  0CBA  085B               	movf	ftoa@rem+1,w
  1499  0CBB  00BC               	movwf	?_sprintf+6
  1500  0CBC  085A               	movf	ftoa@rem,w
  1501  0CBD  00BB               	movwf	?_sprintf+5
  1502  0CBE  0862               	movf	ftoa@cp,w
  1503  0CBF  120A  158A  25B4  120A  158A  	fcall	_sprintf
  1504  0CC4                     l2612:
  1505  0CC4  30A0               	movlw	(low (ftoa@buf| 0))& (0+255)
  1506  0CC5                     l765:
  1507  0CC5  0008               	return
  1508  0CC6                     __end_of_ftoa:
  1509                           
  1510                           	psect	text2
  1511  0DB4                     __ptext2:	
  1512 ;; *************** function _sprintf *****************
  1513 ;; Defined at:
  1514 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  sp              1    wreg     PTR unsigned char 
  1517 ;;		 -> ftoa@buf(17), 
  1518 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1519 ;;		 -> STR_3(11), 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  sp              1   42[BANK0 ] PTR unsigned char 
  1522 ;;		 -> ftoa@buf(17), 
  1523 ;;  val             4   38[BANK0 ] unsigned long 
  1524 ;;  tmpval          4    0        struct .
  1525 ;;  prec            2   45[BANK0 ] int 
  1526 ;;  width           2   43[BANK0 ] int 
  1527 ;;  cp              2    0        PTR const unsigned char 
  1528 ;;  len             2    0        unsigned int 
  1529 ;;  c               1   47[BANK0 ] unsigned char 
  1530 ;;  ap              1   37[BANK0 ] PTR void [1]
  1531 ;;		 -> ?_sprintf(2), 
  1532 ;;  flag            1   36[BANK0 ] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  2   22[BANK0 ] int 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       9       0       0       0
  1543 ;;      Locals:         0      12       0       0       0
  1544 ;;      Temps:          0       5       0       0       0
  1545 ;;      Totals:         0      26       0       0       0
  1546 ;;Total ram usage:       26 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    2
  1549 ;; This function calls:
  1550 ;;		___lldiv
  1551 ;;		___llmod
  1552 ;;		___wmul
  1553 ;;		_isdigit
  1554 ;; This function is called by:
  1555 ;;		_ftoa
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _sprintf
  1561  0DB4                     _sprintf:
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1565                           ;sprintf@sp stored from wreg
  1566  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0DB6  00CA               	movwf	sprintf@sp
  1569  0DB7                     l2408:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1572  0DB7  3037               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1573  0DB8  00BF               	movwf	??_sprintf
  1574  0DB9  083F               	movf	??_sprintf,w
  1575  0DBA  00C5               	movwf	sprintf@ap
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1578  0DBB  2FE9               	goto	l2506
  1579  0DBC                     l2410:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1582  0DBC  3025               	movlw	37
  1583  0DBD  064F               	xorwf	sprintf@c,w
  1584  0DBE  1903               	btfsc	3,2
  1585  0DBF  2DC1               	goto	u3301
  1586  0DC0  2DC2               	goto	u3300
  1587  0DC1                     u3301:
  1588  0DC1  2DCE               	goto	l2416
  1589  0DC2                     u3300:
  1590  0DC2                     l2412:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1593  0DC2  084F               	movf	sprintf@c,w
  1594  0DC3  00BF               	movwf	??_sprintf
  1595  0DC4  084A               	movf	sprintf@sp,w
  1596  0DC5  0084               	movwf	4
  1597  0DC6  083F               	movf	??_sprintf,w
  1598  0DC7  1383               	bcf	3,7	;select IRP bank0
  1599  0DC8  0080               	movwf	0
  1600  0DC9                     l2414:
  1601  0DC9  3001               	movlw	1
  1602  0DCA  00BF               	movwf	??_sprintf
  1603  0DCB  083F               	movf	??_sprintf,w
  1604  0DCC  07CA               	addwf	sprintf@sp,f
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1607  0DCD  2FE9               	goto	l2506
  1608  0DCE                     l2416:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1611  0DCE  01CB               	clrf	sprintf@width
  1612  0DCF  01CC               	clrf	sprintf@width+1
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1615  0DD0  01C4               	clrf	sprintf@flag
  1616  0DD1                     l2418:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1619  0DD1  0836               	movf	sprintf@f,w
  1620  0DD2  0084               	movwf	4
  1621  0DD3  120A  158A  200A  120A  158A  	fcall	stringdir
  1622  0DD8  120A  158A  2047  120A  158A  	fcall	_isdigit
  1623  0DDD  1C03               	btfss	3,0
  1624  0DDE  2DE0               	goto	u3311
  1625  0DDF  2DE1               	goto	u3310
  1626  0DE0                     u3311:
  1627  0DE0  2E21               	goto	l2430
  1628  0DE1                     u3310:
  1629  0DE1                     l2420:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1632  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0DE3  01CB               	clrf	sprintf@width
  1635  0DE4  01CC               	clrf	sprintf@width+1
  1636  0DE5                     l2422:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1639  0DE5  300A               	movlw	10
  1640  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0DE8  00A0               	movwf	___wmul@multiplier
  1643  0DE9  3000               	movlw	0
  1644  0DEA  00A1               	movwf	___wmul@multiplier+1
  1645  0DEB  084C               	movf	sprintf@width+1,w
  1646  0DEC  00A3               	movwf	___wmul@multiplicand+1
  1647  0DED  084B               	movf	sprintf@width,w
  1648  0DEE  00A2               	movwf	___wmul@multiplicand
  1649  0DEF  160A  118A  27B0  120A  158A  	fcall	___wmul
  1650  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0DF6  0821               	movf	?___wmul+1,w
  1653  0DF7  00CC               	movwf	sprintf@width+1
  1654  0DF8  0820               	movf	?___wmul,w
  1655  0DF9  00CB               	movwf	sprintf@width
  1656  0DFA                     l2424:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1659  0DFA  0836               	movf	sprintf@f,w
  1660  0DFB  0084               	movwf	4
  1661  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  1662  0E01  3ED0               	addlw	208
  1663  0E02  00BF               	movwf	??_sprintf
  1664  0E03  30FF               	movlw	255
  1665  0E04  1803               	skipnc
  1666  0E05  3000               	movlw	0
  1667  0E06  00C0               	movwf	??_sprintf+1
  1668  0E07  083F               	movf	??_sprintf,w
  1669  0E08  07CB               	addwf	sprintf@width,f
  1670  0E09  1803               	skipnc
  1671  0E0A  0ACC               	incf	sprintf@width+1,f
  1672  0E0B  0840               	movf	??_sprintf+1,w
  1673  0E0C  07CC               	addwf	sprintf@width+1,f
  1674  0E0D                     l2426:
  1675  0E0D  3001               	movlw	1
  1676  0E0E  00BF               	movwf	??_sprintf
  1677  0E0F  083F               	movf	??_sprintf,w
  1678  0E10  07B6               	addwf	sprintf@f,f
  1679  0E11                     l2428:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1682  0E11  0836               	movf	sprintf@f,w
  1683  0E12  0084               	movwf	4
  1684  0E13  120A  158A  200A  120A  158A  	fcall	stringdir
  1685  0E18  120A  158A  2047  120A  158A  	fcall	_isdigit
  1686  0E1D  1803               	btfsc	3,0
  1687  0E1E  2E20               	goto	u3321
  1688  0E1F  2E21               	goto	u3320
  1689  0E20                     u3321:
  1690  0E20  2DE5               	goto	l2422
  1691  0E21                     u3320:
  1692  0E21                     l2430:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1695  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0E23  0836               	movf	sprintf@f,w
  1698  0E24  0084               	movwf	4
  1699  0E25  120A  158A  200A  120A  158A  	fcall	stringdir
  1700  0E2A  3A2E               	xorlw	46
  1701  0E2B  1D03               	skipz
  1702  0E2C  2E2E               	goto	u3331
  1703  0E2D  2E2F               	goto	u3330
  1704  0E2E                     u3331:
  1705  0E2E  2E73               	goto	l2444
  1706  0E2F                     u3330:
  1707  0E2F                     l2432:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1710  0E2F  3001               	movlw	1
  1711  0E30  00BF               	movwf	??_sprintf
  1712  0E31  083F               	movf	??_sprintf,w
  1713  0E32  07B6               	addwf	sprintf@f,f
  1714  0E33                     l2434:
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1717  0E33  01CD               	clrf	sprintf@prec
  1718  0E34  01CE               	clrf	sprintf@prec+1
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1721  0E35  2E62               	goto	l2442
  1722  0E36                     l2436:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1725  0E36  300A               	movlw	10
  1726  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0E39  00A0               	movwf	___wmul@multiplier
  1729  0E3A  3000               	movlw	0
  1730  0E3B  00A1               	movwf	___wmul@multiplier+1
  1731  0E3C  084E               	movf	sprintf@prec+1,w
  1732  0E3D  00A3               	movwf	___wmul@multiplicand+1
  1733  0E3E  084D               	movf	sprintf@prec,w
  1734  0E3F  00A2               	movwf	___wmul@multiplicand
  1735  0E40  160A  118A  27B0  120A  158A  	fcall	___wmul
  1736  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0E47  0821               	movf	?___wmul+1,w
  1739  0E48  00CE               	movwf	sprintf@prec+1
  1740  0E49  0820               	movf	?___wmul,w
  1741  0E4A  00CD               	movwf	sprintf@prec
  1742  0E4B                     l2438:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1745  0E4B  0836               	movf	sprintf@f,w
  1746  0E4C  0084               	movwf	4
  1747  0E4D  120A  158A  200A  120A  158A  	fcall	stringdir
  1748  0E52  3ED0               	addlw	208
  1749  0E53  00BF               	movwf	??_sprintf
  1750  0E54  30FF               	movlw	255
  1751  0E55  1803               	skipnc
  1752  0E56  3000               	movlw	0
  1753  0E57  00C0               	movwf	??_sprintf+1
  1754  0E58  083F               	movf	??_sprintf,w
  1755  0E59  07CD               	addwf	sprintf@prec,f
  1756  0E5A  1803               	skipnc
  1757  0E5B  0ACE               	incf	sprintf@prec+1,f
  1758  0E5C  0840               	movf	??_sprintf+1,w
  1759  0E5D  07CE               	addwf	sprintf@prec+1,f
  1760  0E5E                     l2440:
  1761  0E5E  3001               	movlw	1
  1762  0E5F  00BF               	movwf	??_sprintf
  1763  0E60  083F               	movf	??_sprintf,w
  1764  0E61  07B6               	addwf	sprintf@f,f
  1765  0E62                     l2442:
  1766                           
  1767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1768  0E62  0836               	movf	sprintf@f,w
  1769  0E63  0084               	movwf	4
  1770  0E64  120A  158A  200A  120A  158A  	fcall	stringdir
  1771  0E69  120A  158A  2047  120A  158A  	fcall	_isdigit
  1772  0E6E  1803               	btfsc	3,0
  1773  0E6F  2E71               	goto	u3341
  1774  0E70  2E72               	goto	u3340
  1775  0E71                     u3341:
  1776  0E71  2E36               	goto	l2436
  1777  0E72                     u3340:
  1778  0E72  2E7D               	goto	l2450
  1779  0E73                     l2444:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1782  0E73  01CD               	clrf	sprintf@prec
  1783  0E74  01CE               	clrf	sprintf@prec+1
  1784  0E75  2E7D               	goto	l2450
  1785  0E76                     l791:	
  1786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  1787                           
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  1790  0E76  1644               	bsf	sprintf@flag,4
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  1793  0E77  2E7D               	goto	l2450
  1794  0E78                     l2446:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1797  0E78  30C0               	movlw	192
  1798  0E79  00BF               	movwf	??_sprintf
  1799  0E7A  083F               	movf	??_sprintf,w
  1800  0E7B  04C4               	iorwf	sprintf@flag,f
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  1803  0E7C  2E9C               	goto	l794
  1804  0E7D                     l2450:
  1805  0E7D  3001               	movlw	1
  1806  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0E80  07B6               	addwf	sprintf@f,f
  1809  0E81  30FF               	movlw	-1
  1810  0E82  0736               	addwf	sprintf@f,w
  1811  0E83  0084               	movwf	4
  1812  0E84  120A  158A  200A  120A  158A  	fcall	stringdir
  1813  0E89  00CF               	movwf	sprintf@c
  1814  0E8A  00BF               	movwf	??_sprintf
  1815  0E8B  01C0               	clrf	??_sprintf+1
  1816                           
  1817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1818                           ; Switch size 1, requested type "simple"
  1819                           ; Number of cases is 1, Range of values is 0 to 0
  1820                           ; switch strategies available:
  1821                           ; Name         Instructions Cycles
  1822                           ; simple_byte            4     3 (average)
  1823                           ; direct_byte           11     8 (fixed)
  1824                           ; jumptable            260     6 (fixed)
  1825                           ;	Chosen strategy is simple_byte
  1826  0E8C  0840               	movf	??_sprintf+1,w
  1827  0E8D  3A00               	xorlw	0	; case 0
  1828  0E8E  1903               	skipnz
  1829  0E8F  2E91               	goto	l2716
  1830  0E90  2FE9               	goto	l2506
  1831  0E91                     l2716:
  1832                           
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 3, Range of values is 0 to 117
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte           10     6 (average)
  1838                           ; jumptable            260     6 (fixed)
  1839                           ;	Chosen strategy is simple_byte
  1840  0E91  083F               	movf	??_sprintf,w
  1841  0E92  3A00               	xorlw	0	; case 0
  1842  0E93  1903               	skipnz
  1843  0E94  2FFB               	goto	l2508
  1844  0E95  3A6C               	xorlw	108	; case 108
  1845  0E96  1903               	skipnz
  1846  0E97  2E76               	goto	l791
  1847  0E98  3A19               	xorlw	25	; case 117
  1848  0E99  1903               	skipnz
  1849  0E9A  2E78               	goto	l2446
  1850  0E9B  2FE9               	goto	l2506
  1851  0E9C                     l794:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  1854  0E9C  1E44               	btfss	sprintf@flag,4
  1855  0E9D  2E9F               	goto	u3351
  1856  0E9E  2EA0               	goto	u3350
  1857  0E9F                     u3351:
  1858  0E9F  2EB3               	goto	l2456
  1859  0EA0                     u3350:
  1860  0EA0                     l2452:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  1863  0EA0  0845               	movf	sprintf@ap,w
  1864  0EA1  0084               	movwf	4
  1865  0EA2  1383               	bcf	3,7	;select IRP bank0
  1866  0EA3  0800               	movf	0,w
  1867  0EA4  00C6               	movwf	sprintf@val
  1868  0EA5  0A84               	incf	4,f
  1869  0EA6  0800               	movf	0,w
  1870  0EA7  00C7               	movwf	sprintf@val+1
  1871  0EA8  0A84               	incf	4,f
  1872  0EA9  0800               	movf	0,w
  1873  0EAA  00C8               	movwf	sprintf@val+2
  1874  0EAB  0A84               	incf	4,f
  1875  0EAC  0800               	movf	0,w
  1876  0EAD  00C9               	movwf	sprintf@val+3
  1877  0EAE                     l2454:
  1878  0EAE  3004               	movlw	4
  1879  0EAF  00BF               	movwf	??_sprintf
  1880  0EB0  083F               	movf	??_sprintf,w
  1881  0EB1  07C5               	addwf	sprintf@ap,f
  1882  0EB2  2EC5               	goto	l2460
  1883  0EB3                     l2456:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1886  0EB3  0845               	movf	sprintf@ap,w
  1887  0EB4  0084               	movwf	4
  1888  0EB5  1383               	bcf	3,7	;select IRP bank0
  1889  0EB6  0800               	movf	0,w
  1890  0EB7  00BF               	movwf	??_sprintf
  1891  0EB8  0A84               	incf	4,f
  1892  0EB9  0800               	movf	0,w
  1893  0EBA  00C0               	movwf	??_sprintf+1
  1894  0EBB  083F               	movf	??_sprintf,w
  1895  0EBC  00C6               	movwf	sprintf@val
  1896  0EBD  0840               	movf	??_sprintf+1,w
  1897  0EBE  00C7               	movwf	sprintf@val+1
  1898  0EBF  01C8               	clrf	sprintf@val+2
  1899  0EC0  01C9               	clrf	sprintf@val+3
  1900  0EC1                     l2458:
  1901  0EC1  3002               	movlw	2
  1902  0EC2  00BF               	movwf	??_sprintf
  1903  0EC3  083F               	movf	??_sprintf,w
  1904  0EC4  07C5               	addwf	sprintf@ap,f
  1905  0EC5                     l2460:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1908  0EC5  084D               	movf	sprintf@prec,w
  1909  0EC6  044E               	iorwf	sprintf@prec+1,w
  1910  0EC7  1D03               	btfss	3,2
  1911  0EC8  2ECA               	goto	u3361
  1912  0EC9  2ECB               	goto	u3360
  1913  0ECA                     u3361:
  1914  0ECA  2ED9               	goto	l2466
  1915  0ECB                     u3360:
  1916  0ECB                     l2462:
  1917  0ECB  0849               	movf	sprintf@val+3,w
  1918  0ECC  0448               	iorwf	sprintf@val+2,w
  1919  0ECD  0447               	iorwf	sprintf@val+1,w
  1920  0ECE  0446               	iorwf	sprintf@val,w
  1921  0ECF  1D03               	skipz
  1922  0ED0  2ED2               	goto	u3371
  1923  0ED1  2ED3               	goto	u3370
  1924  0ED2                     u3371:
  1925  0ED2  2ED9               	goto	l2466
  1926  0ED3                     u3370:
  1927  0ED3                     l2464:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1930  0ED3  3001               	movlw	1
  1931  0ED4  07CD               	addwf	sprintf@prec,f
  1932  0ED5  1803               	skipnc
  1933  0ED6  0ACE               	incf	sprintf@prec+1,f
  1934  0ED7  3000               	movlw	0
  1935  0ED8  07CE               	addwf	sprintf@prec+1,f
  1936  0ED9                     l2466:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1939  0ED9  01CF               	clrf	sprintf@c
  1940  0EDA  0ACF               	incf	sprintf@c,f
  1941  0EDB                     l2472:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1944  0EDB  084F               	movf	sprintf@c,w
  1945  0EDC  00BF               	movwf	??_sprintf
  1946  0EDD  3001               	movlw	1
  1947  0EDE                     u3385:
  1948  0EDE  1003               	clrc
  1949  0EDF  0DBF               	rlf	??_sprintf,f
  1950  0EE0  3EFF               	addlw	-1
  1951  0EE1  1D03               	skipz
  1952  0EE2  2EDE               	goto	u3385
  1953  0EE3  1003               	clrc
  1954  0EE4  0D3F               	rlf	??_sprintf,w
  1955  0EE5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1956  0EE6  0084               	movwf	4
  1957  0EE7  120A  158A  200A  120A  158A  	fcall	stringdir
  1958  0EEC  00C0               	movwf	??_sprintf+1
  1959  0EED  120A  158A  200A  120A  158A  	fcall	stringdir
  1960  0EF2  00C1               	movwf	??_sprintf+2
  1961  0EF3  120A  158A  200A  120A  158A  	fcall	stringdir
  1962  0EF8  00C2               	movwf	??_sprintf+3
  1963  0EF9  120A  158A  200A  120A  158A  	fcall	stringdir
  1964  0EFE  00C3               	movwf	??_sprintf+4
  1965  0EFF  0843               	movf	??_sprintf+4,w
  1966  0F00  0249               	subwf	sprintf@val+3,w
  1967  0F01  1D03               	skipz
  1968  0F02  2F0D               	goto	u3395
  1969  0F03  0842               	movf	??_sprintf+3,w
  1970  0F04  0248               	subwf	sprintf@val+2,w
  1971  0F05  1D03               	skipz
  1972  0F06  2F0D               	goto	u3395
  1973  0F07  0841               	movf	??_sprintf+2,w
  1974  0F08  0247               	subwf	sprintf@val+1,w
  1975  0F09  1D03               	skipz
  1976  0F0A  2F0D               	goto	u3395
  1977  0F0B  0840               	movf	??_sprintf+1,w
  1978  0F0C  0246               	subwf	sprintf@val,w
  1979  0F0D                     u3395:
  1980  0F0D  1803               	skipnc
  1981  0F0E  2F10               	goto	u3391
  1982  0F0F  2F11               	goto	u3390
  1983  0F10                     u3391:
  1984  0F10  2F12               	goto	l2476
  1985  0F11                     u3390:
  1986  0F11  2F1C               	goto	l2478
  1987  0F12                     l2476:
  1988  0F12  3001               	movlw	1
  1989  0F13  00BF               	movwf	??_sprintf
  1990  0F14  083F               	movf	??_sprintf,w
  1991  0F15  07CF               	addwf	sprintf@c,f
  1992  0F16  300A               	movlw	10
  1993  0F17  064F               	xorwf	sprintf@c,w
  1994  0F18  1D03               	btfss	3,2
  1995  0F19  2F1B               	goto	u3401
  1996  0F1A  2F1C               	goto	u3400
  1997  0F1B                     u3401:
  1998  0F1B  2EDB               	goto	l2472
  1999  0F1C                     u3400:
  2000  0F1C                     l2478:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2003  0F1C  084E               	movf	sprintf@prec+1,w
  2004  0F1D  3A80               	xorlw	128
  2005  0F1E  3C80               	sublw	128
  2006  0F1F  1D03               	skipz
  2007  0F20  2F23               	goto	u3415
  2008  0F21  084D               	movf	sprintf@prec,w
  2009  0F22  024F               	subwf	sprintf@c,w
  2010  0F23                     u3415:
  2011  0F23  1803               	skipnc
  2012  0F24  2F26               	goto	u3411
  2013  0F25  2F27               	goto	u3410
  2014  0F26                     u3411:
  2015  0F26  2F2E               	goto	l2482
  2016  0F27                     u3410:
  2017  0F27                     l2480:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  2020  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0F29  084D               	movf	sprintf@prec,w
  2023  0F2A  00BF               	movwf	??_sprintf
  2024  0F2B  083F               	movf	??_sprintf,w
  2025  0F2C  00CF               	movwf	sprintf@c
  2026  0F2D  2F46               	goto	l802
  2027  0F2E                     l2482:
  2028  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0F30  084E               	movf	sprintf@prec+1,w
  2031  0F31  3A80               	xorlw	128
  2032  0F32  00BF               	movwf	??_sprintf
  2033  0F33  3080               	movlw	128
  2034  0F34  023F               	subwf	??_sprintf,w
  2035  0F35  1D03               	skipz
  2036  0F36  2F39               	goto	u3425
  2037  0F37  084F               	movf	sprintf@c,w
  2038  0F38  024D               	subwf	sprintf@prec,w
  2039  0F39                     u3425:
  2040  0F39  1803               	skipnc
  2041  0F3A  2F3C               	goto	u3421
  2042  0F3B  2F3D               	goto	u3420
  2043  0F3C                     u3421:
  2044  0F3C  2F46               	goto	l802
  2045  0F3D                     u3420:
  2046  0F3D                     l2484:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2049  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0F3F  084F               	movf	sprintf@c,w
  2052  0F40  00BF               	movwf	??_sprintf
  2053  0F41  01C0               	clrf	??_sprintf+1
  2054  0F42  083F               	movf	??_sprintf,w
  2055  0F43  00CD               	movwf	sprintf@prec
  2056  0F44  0840               	movf	??_sprintf+1,w
  2057  0F45  00CE               	movwf	sprintf@prec+1
  2058  0F46                     l802:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2061  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0F48  084C               	movf	sprintf@width+1,w
  2064  0F49  3A80               	xorlw	128
  2065  0F4A  3C80               	sublw	128
  2066  0F4B  1D03               	skipz
  2067  0F4C  2F4F               	goto	u3435
  2068  0F4D  084B               	movf	sprintf@width,w
  2069  0F4E  024F               	subwf	sprintf@c,w
  2070  0F4F                     u3435:
  2071  0F4F  1803               	skipnc
  2072  0F50  2F52               	goto	u3431
  2073  0F51  2F53               	goto	u3430
  2074  0F52                     u3431:
  2075  0F52  2F5F               	goto	l2488
  2076  0F53                     u3430:
  2077  0F53                     l2486:
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2080  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0F55  084F               	movf	sprintf@c,w
  2083  0F56  00BF               	movwf	??_sprintf
  2084  0F57  01C0               	clrf	??_sprintf+1
  2085  0F58  083F               	movf	??_sprintf,w
  2086  0F59  02CB               	subwf	sprintf@width,f
  2087  0F5A  0840               	movf	??_sprintf+1,w
  2088  0F5B  1C03               	skipc
  2089  0F5C  03CC               	decf	sprintf@width+1,f
  2090  0F5D  02CC               	subwf	sprintf@width+1,f
  2091  0F5E  2F63               	goto	l2490
  2092  0F5F                     l2488:
  2093                           
  2094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2095  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0F61  01CB               	clrf	sprintf@width
  2098  0F62  01CC               	clrf	sprintf@width+1
  2099  0F63                     l2490:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2102  0F63  084B               	movf	sprintf@width,w
  2103  0F64  044C               	iorwf	sprintf@width+1,w
  2104  0F65  1903               	btfsc	3,2
  2105  0F66  2F68               	goto	u3441
  2106  0F67  2F69               	goto	u3440
  2107  0F68                     u3441:
  2108  0F68  2FDB               	goto	l2504
  2109  0F69                     u3440:
  2110  0F69                     l2492:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2113  0F69  3020               	movlw	32
  2114  0F6A  00BF               	movwf	??_sprintf
  2115  0F6B  084A               	movf	sprintf@sp,w
  2116  0F6C  0084               	movwf	4
  2117  0F6D  083F               	movf	??_sprintf,w
  2118  0F6E  1383               	bcf	3,7	;select IRP bank0
  2119  0F6F  0080               	movwf	0
  2120  0F70                     l2494:
  2121  0F70  3001               	movlw	1
  2122  0F71  00BF               	movwf	??_sprintf
  2123  0F72  083F               	movf	??_sprintf,w
  2124  0F73  07CA               	addwf	sprintf@sp,f
  2125  0F74                     l2496:
  2126  0F74  30FF               	movlw	255
  2127  0F75  07CB               	addwf	sprintf@width,f
  2128  0F76  1803               	skipnc
  2129  0F77  0ACC               	incf	sprintf@width+1,f
  2130  0F78  30FF               	movlw	255
  2131  0F79  07CC               	addwf	sprintf@width+1,f
  2132  0F7A  084B               	movf	sprintf@width,w
  2133  0F7B  044C               	iorwf	sprintf@width+1,w
  2134  0F7C  1D03               	btfss	3,2
  2135  0F7D  2F7F               	goto	u3451
  2136  0F7E  2F80               	goto	u3450
  2137  0F7F                     u3451:
  2138  0F7F  2F69               	goto	l2492
  2139  0F80                     u3450:
  2140  0F80  2FDB               	goto	l2504
  2141  0F81                     l2498:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  2144  0F81  3000               	movlw	0
  2145  0F82  00B0               	movwf	___llmod@divisor+3
  2146  0F83  3000               	movlw	0
  2147  0F84  00AF               	movwf	___llmod@divisor+2
  2148  0F85  3000               	movlw	0
  2149  0F86  00AE               	movwf	___llmod@divisor+1
  2150  0F87  300A               	movlw	10
  2151  0F88  00AD               	movwf	___llmod@divisor
  2152  0F89  084D               	movf	sprintf@prec,w
  2153  0F8A  00BF               	movwf	??_sprintf
  2154  0F8B  3001               	movlw	1
  2155  0F8C                     u3465:
  2156  0F8C  1003               	clrc
  2157  0F8D  0DBF               	rlf	??_sprintf,f
  2158  0F8E  3EFF               	addlw	-1
  2159  0F8F  1D03               	skipz
  2160  0F90  2F8C               	goto	u3465
  2161  0F91  1003               	clrc
  2162  0F92  0D3F               	rlf	??_sprintf,w
  2163  0F93  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2164  0F94  0084               	movwf	4
  2165  0F95  120A  158A  200A  120A  158A  	fcall	stringdir
  2166  0F9A  00A0               	movwf	___lldiv@divisor
  2167  0F9B  120A  158A  200A  120A  158A  	fcall	stringdir
  2168  0FA0  00A1               	movwf	___lldiv@divisor+1
  2169  0FA1  120A  158A  200A  120A  158A  	fcall	stringdir
  2170  0FA6  00A2               	movwf	___lldiv@divisor+2
  2171  0FA7  120A  158A  200A  120A  158A  	fcall	stringdir
  2172  0FAC  00A3               	movwf	___lldiv@divisor+3
  2173  0FAD  0849               	movf	sprintf@val+3,w
  2174  0FAE  00A7               	movwf	___lldiv@dividend+3
  2175  0FAF  0848               	movf	sprintf@val+2,w
  2176  0FB0  00A6               	movwf	___lldiv@dividend+2
  2177  0FB1  0847               	movf	sprintf@val+1,w
  2178  0FB2  00A5               	movwf	___lldiv@dividend+1
  2179  0FB3  0846               	movf	sprintf@val,w
  2180  0FB4  00A4               	movwf	___lldiv@dividend
  2181  0FB5  120A  158A  2169  120A  158A  	fcall	___lldiv
  2182  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0FBC  0823               	movf	?___lldiv+3,w
  2185  0FBD  00B4               	movwf	___llmod@dividend+3
  2186  0FBE  0822               	movf	?___lldiv+2,w
  2187  0FBF  00B3               	movwf	___llmod@dividend+2
  2188  0FC0  0821               	movf	?___lldiv+1,w
  2189  0FC1  00B2               	movwf	___llmod@dividend+1
  2190  0FC2  0820               	movf	?___lldiv,w
  2191  0FC3  00B1               	movwf	___llmod@dividend
  2192  0FC4  120A  158A  20BC  120A  158A  	fcall	___llmod
  2193  0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0FCB  082D               	movf	?___llmod,w
  2196  0FCC  3E30               	addlw	48
  2197  0FCD  00C0               	movwf	??_sprintf+1
  2198  0FCE  0840               	movf	??_sprintf+1,w
  2199  0FCF  00CF               	movwf	sprintf@c
  2200  0FD0                     l2500:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2203  0FD0  084F               	movf	sprintf@c,w
  2204  0FD1  00BF               	movwf	??_sprintf
  2205  0FD2  084A               	movf	sprintf@sp,w
  2206  0FD3  0084               	movwf	4
  2207  0FD4  083F               	movf	??_sprintf,w
  2208  0FD5  1383               	bcf	3,7	;select IRP bank0
  2209  0FD6  0080               	movwf	0
  2210  0FD7                     l2502:
  2211  0FD7  3001               	movlw	1
  2212  0FD8  00BF               	movwf	??_sprintf
  2213  0FD9  083F               	movf	??_sprintf,w
  2214  0FDA  07CA               	addwf	sprintf@sp,f
  2215  0FDB                     l2504:
  2216                           
  2217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2218  0FDB  30FF               	movlw	255
  2219  0FDC  07CD               	addwf	sprintf@prec,f
  2220  0FDD  1803               	skipnc
  2221  0FDE  0ACE               	incf	sprintf@prec+1,f
  2222  0FDF  30FF               	movlw	255
  2223  0FE0  07CE               	addwf	sprintf@prec+1,f
  2224  0FE1  0A4D               	incf	sprintf@prec,w
  2225  0FE2  1D03               	skipz
  2226  0FE3  2FE8               	goto	u3471
  2227  0FE4  0A4E               	incf	sprintf@prec+1,w
  2228  0FE5  1D03               	btfss	3,2
  2229  0FE6  2FE8               	goto	u3471
  2230  0FE7  2FE9               	goto	u3470
  2231  0FE8                     u3471:
  2232  0FE8  2F81               	goto	l2498
  2233  0FE9                     u3470:
  2234  0FE9                     l2506:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2237  0FE9  3001               	movlw	1
  2238  0FEA  07B6               	addwf	sprintf@f,f
  2239  0FEB  30FF               	movlw	-1
  2240  0FEC  0736               	addwf	sprintf@f,w
  2241  0FED  0084               	movwf	4
  2242  0FEE  120A  158A  200A  120A  158A  	fcall	stringdir
  2243  0FF3  00BF               	movwf	??_sprintf
  2244  0FF4  083F               	movf	??_sprintf,w
  2245  0FF5  00CF               	movwf	sprintf@c
  2246  0FF6  084F               	movf	sprintf@c,w
  2247  0FF7  1D03               	btfss	3,2
  2248  0FF8  2FFA               	goto	u3481
  2249  0FF9  2FFB               	goto	u3480
  2250  0FFA                     u3481:
  2251  0FFA  2DBC               	goto	l2410
  2252  0FFB                     u3480:
  2253  0FFB                     l2508:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2256  0FFB  084A               	movf	sprintf@sp,w
  2257  0FFC  0084               	movwf	4
  2258  0FFD  1383               	bcf	3,7	;select IRP bank0
  2259  0FFE  0180               	clrf	0
  2260  0FFF                     l813:
  2261  0FFF  0008               	return
  2262  1000                     __end_of_sprintf:
  2263                           
  2264                           	psect	text3
  2265  0847                     __ptext3:	
  2266 ;; *************** function _isdigit *****************
  2267 ;; Defined at:
  2268 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  c               1    wreg     unsigned char 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;  c               1    7[COMMON] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;		None               void
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         0       0       0       0       0
  2283 ;;      Locals:         2       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0
  2285 ;;      Totals:         2       0       0       0       0
  2286 ;;Total ram usage:        2 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_sprintf
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _isdigit
  2298  0847                     _isdigit:
  2299                           
  2300                           ;incstack = 0
  2301                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2302                           ;isdigit@c stored from wreg
  2303  0847  00F7               	movwf	isdigit@c
  2304  0848                     l2106:
  2305  0848  01F6               	clrf	_isdigit$923
  2306  0849                     l2108:
  2307  0849  303A               	movlw	58
  2308  084A  0277               	subwf	isdigit@c,w
  2309  084B  1803               	skipnc
  2310  084C  284E               	goto	u2551
  2311  084D  284F               	goto	u2550
  2312  084E                     u2551:
  2313  084E  2857               	goto	l2114
  2314  084F                     u2550:
  2315  084F                     l2110:
  2316  084F  3030               	movlw	48
  2317  0850  0277               	subwf	isdigit@c,w
  2318  0851  1C03               	skipc
  2319  0852  2854               	goto	u2561
  2320  0853  2855               	goto	u2560
  2321  0854                     u2561:
  2322  0854  2857               	goto	l2114
  2323  0855                     u2560:
  2324  0855                     l2112:
  2325  0855  01F6               	clrf	_isdigit$923
  2326  0856  0AF6               	incf	_isdigit$923,f
  2327  0857                     l2114:
  2328  0857  0C76               	rrf	_isdigit$923,w
  2329  0858                     l818:
  2330  0858  0008               	return
  2331  0859                     __end_of_isdigit:
  2332                           
  2333                           	psect	text4
  2334  17B0                     __ptext4:	
  2335 ;; *************** function ___wmul *****************
  2336 ;; Defined at:
  2337 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2340 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  product         2    6[COMMON] unsigned int 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  2    0[BANK0 ] unsigned int 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2352 ;;      Params:         0       4       0       0       0
  2353 ;;      Locals:         2       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0
  2355 ;;      Totals:         2       4       0       0       0
  2356 ;;Total ram usage:        6 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_sprintf
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function ___wmul
  2368  17B0                     ___wmul:
  2369  17B0                     l1840:	
  2370                           ;incstack = 0
  2371                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2372                           
  2373  17B0  01F6               	clrf	___wmul@product
  2374  17B1  01F7               	clrf	___wmul@product+1
  2375  17B2                     l1842:
  2376  17B2  1283               	bcf	3,5	;RP0=0, select bank0
  2377  17B3  1303               	bcf	3,6	;RP1=0, select bank0
  2378  17B4  1C20               	btfss	___wmul@multiplier,0
  2379  17B5  2FB7               	goto	u1891
  2380  17B6  2FB8               	goto	u1890
  2381  17B7                     u1891:
  2382  17B7  2FBE               	goto	l309
  2383  17B8                     u1890:
  2384  17B8                     l1844:
  2385  17B8  0822               	movf	___wmul@multiplicand,w
  2386  17B9  07F6               	addwf	___wmul@product,f
  2387  17BA  1803               	skipnc
  2388  17BB  0AF7               	incf	___wmul@product+1,f
  2389  17BC  0823               	movf	___wmul@multiplicand+1,w
  2390  17BD  07F7               	addwf	___wmul@product+1,f
  2391  17BE                     l309:
  2392  17BE  3001               	movlw	1
  2393  17BF                     u1905:
  2394  17BF  1003               	clrc
  2395  17C0  0DA2               	rlf	___wmul@multiplicand,f
  2396  17C1  0DA3               	rlf	___wmul@multiplicand+1,f
  2397  17C2  3EFF               	addlw	-1
  2398  17C3  1D03               	skipz
  2399  17C4  2FBF               	goto	u1905
  2400  17C5                     l1846:
  2401  17C5  3001               	movlw	1
  2402  17C6                     u1915:
  2403  17C6  1003               	clrc
  2404  17C7  0CA1               	rrf	___wmul@multiplier+1,f
  2405  17C8  0CA0               	rrf	___wmul@multiplier,f
  2406  17C9  3EFF               	addlw	-1
  2407  17CA  1D03               	skipz
  2408  17CB  2FC6               	goto	u1915
  2409  17CC                     l1848:
  2410  17CC  0820               	movf	___wmul@multiplier,w
  2411  17CD  0421               	iorwf	___wmul@multiplier+1,w
  2412  17CE  1D03               	btfss	3,2
  2413  17CF  2FD1               	goto	u1921
  2414  17D0  2FD2               	goto	u1920
  2415  17D1                     u1921:
  2416  17D1  2FB2               	goto	l1842
  2417  17D2                     u1920:
  2418  17D2                     l1850:
  2419  17D2  0877               	movf	___wmul@product+1,w
  2420  17D3  00A1               	movwf	?___wmul+1
  2421  17D4  0876               	movf	___wmul@product,w
  2422  17D5  00A0               	movwf	?___wmul
  2423  17D6                     l311:
  2424  17D6  0008               	return
  2425  17D7                     __end_of___wmul:
  2426                           
  2427                           	psect	text5
  2428  08BC                     __ptext5:	
  2429 ;; *************** function ___llmod *****************
  2430 ;; Defined at:
  2431 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  divisor         4   13[BANK0 ] unsigned long 
  2434 ;;  dividend        4   17[BANK0 ] unsigned long 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  counter         1   21[BANK0 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  4   13[BANK0 ] unsigned long 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       8       0       0       0
  2447 ;;      Locals:         0       1       0       0       0
  2448 ;;      Temps:          1       0       0       0       0
  2449 ;;      Totals:         1       9       0       0       0
  2450 ;;Total ram usage:       10 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_sprintf
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function ___llmod
  2462  08BC                     ___llmod:
  2463  08BC                     l1878:	
  2464                           ;incstack = 0
  2465                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2466                           
  2467  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  2468  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  2469  08BE  0830               	movf	___llmod@divisor+3,w
  2470  08BF  042F               	iorwf	___llmod@divisor+2,w
  2471  08C0  042E               	iorwf	___llmod@divisor+1,w
  2472  08C1  042D               	iorwf	___llmod@divisor,w
  2473  08C2  1903               	skipnz
  2474  08C3  28C5               	goto	u2001
  2475  08C4  28C6               	goto	u2000
  2476  08C5                     u2001:
  2477  08C5  2909               	goto	l1894
  2478  08C6                     u2000:
  2479  08C6                     l1880:
  2480  08C6  01B5               	clrf	___llmod@counter
  2481  08C7  0AB5               	incf	___llmod@counter,f
  2482  08C8  28D6               	goto	l1884
  2483  08C9                     l1882:
  2484  08C9  3001               	movlw	1
  2485  08CA  00F7               	movwf	??___llmod
  2486  08CB                     u2015:
  2487  08CB  1003               	clrc
  2488  08CC  0DAD               	rlf	___llmod@divisor,f
  2489  08CD  0DAE               	rlf	___llmod@divisor+1,f
  2490  08CE  0DAF               	rlf	___llmod@divisor+2,f
  2491  08CF  0DB0               	rlf	___llmod@divisor+3,f
  2492  08D0  0BF7               	decfsz	??___llmod,f
  2493  08D1  28CB               	goto	u2015
  2494  08D2  3001               	movlw	1
  2495  08D3  00F7               	movwf	??___llmod
  2496  08D4  0877               	movf	??___llmod,w
  2497  08D5  07B5               	addwf	___llmod@counter,f
  2498  08D6                     l1884:
  2499  08D6  1FB0               	btfss	___llmod@divisor+3,7
  2500  08D7  28D9               	goto	u2021
  2501  08D8  28DA               	goto	u2020
  2502  08D9                     u2021:
  2503  08D9  28C9               	goto	l1882
  2504  08DA                     u2020:
  2505  08DA                     l1886:
  2506  08DA  0830               	movf	___llmod@divisor+3,w
  2507  08DB  0234               	subwf	___llmod@dividend+3,w
  2508  08DC  1D03               	skipz
  2509  08DD  28E8               	goto	u2035
  2510  08DE  082F               	movf	___llmod@divisor+2,w
  2511  08DF  0233               	subwf	___llmod@dividend+2,w
  2512  08E0  1D03               	skipz
  2513  08E1  28E8               	goto	u2035
  2514  08E2  082E               	movf	___llmod@divisor+1,w
  2515  08E3  0232               	subwf	___llmod@dividend+1,w
  2516  08E4  1D03               	skipz
  2517  08E5  28E8               	goto	u2035
  2518  08E6  082D               	movf	___llmod@divisor,w
  2519  08E7  0231               	subwf	___llmod@dividend,w
  2520  08E8                     u2035:
  2521  08E8  1C03               	skipc
  2522  08E9  28EB               	goto	u2031
  2523  08EA  28EC               	goto	u2030
  2524  08EB                     u2031:
  2525  08EB  28FA               	goto	l1890
  2526  08EC                     u2030:
  2527  08EC                     l1888:
  2528  08EC  082D               	movf	___llmod@divisor,w
  2529  08ED  02B1               	subwf	___llmod@dividend,f
  2530  08EE  082E               	movf	___llmod@divisor+1,w
  2531  08EF  1C03               	skipc
  2532  08F0  0F2E               	incfsz	___llmod@divisor+1,w
  2533  08F1  02B2               	subwf	___llmod@dividend+1,f
  2534  08F2  082F               	movf	___llmod@divisor+2,w
  2535  08F3  1C03               	skipc
  2536  08F4  0F2F               	incfsz	___llmod@divisor+2,w
  2537  08F5  02B3               	subwf	___llmod@dividend+2,f
  2538  08F6  0830               	movf	___llmod@divisor+3,w
  2539  08F7  1C03               	skipc
  2540  08F8  0F30               	incfsz	___llmod@divisor+3,w
  2541  08F9  02B4               	subwf	___llmod@dividend+3,f
  2542  08FA                     l1890:
  2543  08FA  3001               	movlw	1
  2544  08FB                     u2045:
  2545  08FB  1003               	clrc
  2546  08FC  0CB0               	rrf	___llmod@divisor+3,f
  2547  08FD  0CAF               	rrf	___llmod@divisor+2,f
  2548  08FE  0CAE               	rrf	___llmod@divisor+1,f
  2549  08FF  0CAD               	rrf	___llmod@divisor,f
  2550  0900  3EFF               	addlw	-1
  2551  0901  1D03               	skipz
  2552  0902  28FB               	goto	u2045
  2553  0903                     l1892:
  2554  0903  3001               	movlw	1
  2555  0904  02B5               	subwf	___llmod@counter,f
  2556  0905  1D03               	btfss	3,2
  2557  0906  2908               	goto	u2051
  2558  0907  2909               	goto	u2050
  2559  0908                     u2051:
  2560  0908  28DA               	goto	l1886
  2561  0909                     u2050:
  2562  0909                     l1894:
  2563  0909  0834               	movf	___llmod@dividend+3,w
  2564  090A  00B0               	movwf	?___llmod+3
  2565  090B  0833               	movf	___llmod@dividend+2,w
  2566  090C  00AF               	movwf	?___llmod+2
  2567  090D  0832               	movf	___llmod@dividend+1,w
  2568  090E  00AE               	movwf	?___llmod+1
  2569  090F  0831               	movf	___llmod@dividend,w
  2570  0910  00AD               	movwf	?___llmod
  2571  0911                     l531:
  2572  0911  0008               	return
  2573  0912                     __end_of___llmod:
  2574                           
  2575                           	psect	text6
  2576  0A44                     __ptext6:	
  2577 ;; *************** function ___fltol *****************
  2578 ;; Defined at:
  2579 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  f1              4   40[BANK0 ] unsigned long 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  exp1            1   50[BANK0 ] unsigned char 
  2584 ;;  sign1           1   49[BANK0 ] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  4   40[BANK0 ] long 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       4       0       0       0
  2595 ;;      Locals:         0       2       0       0       0
  2596 ;;      Temps:          0       5       0       0       0
  2597 ;;      Totals:         0      11       0       0       0
  2598 ;;Total ram usage:       11 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_ftoa
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function ___fltol
  2610  0A44                     ___fltol:
  2611  0A44                     l2182:	
  2612                           ;incstack = 0
  2613                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2614                           
  2615  0A44  1003               	clrc
  2616  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0A47  0D4A               	rlf	___fltol@f1+2,w
  2619  0A48  0D4B               	rlf	___fltol@f1+3,w
  2620  0A49  00CC               	movwf	??___fltol
  2621  0A4A  084C               	movf	??___fltol,w
  2622  0A4B  00D2               	movwf	___fltol@exp1
  2623  0A4C  0852               	movf	___fltol@exp1,w
  2624  0A4D  1D03               	btfss	3,2
  2625  0A4E  2A50               	goto	u2691
  2626  0A4F  2A51               	goto	u2690
  2627  0A50                     u2691:
  2628  0A50  2A5A               	goto	l2188
  2629  0A51                     u2690:
  2630  0A51                     l2184:
  2631  0A51  3000               	movlw	0
  2632  0A52  00CB               	movwf	?___fltol+3
  2633  0A53  3000               	movlw	0
  2634  0A54  00CA               	movwf	?___fltol+2
  2635  0A55  3000               	movlw	0
  2636  0A56  00C9               	movwf	?___fltol+1
  2637  0A57  3000               	movlw	0
  2638  0A58  00C8               	movwf	?___fltol
  2639  0A59  2ABF               	goto	l495
  2640  0A5A                     l2188:
  2641  0A5A  0848               	movf	___fltol@f1,w
  2642  0A5B  00CC               	movwf	??___fltol
  2643  0A5C  0849               	movf	___fltol@f1+1,w
  2644  0A5D  00CD               	movwf	??___fltol+1
  2645  0A5E  084A               	movf	___fltol@f1+2,w
  2646  0A5F  00CE               	movwf	??___fltol+2
  2647  0A60  084B               	movf	___fltol@f1+3,w
  2648  0A61  00CF               	movwf	??___fltol+3
  2649  0A62  301F               	movlw	31
  2650  0A63                     u2705:
  2651  0A63  1003               	clrc
  2652  0A64  0CCF               	rrf	??___fltol+3,f
  2653  0A65  0CCE               	rrf	??___fltol+2,f
  2654  0A66  0CCD               	rrf	??___fltol+1,f
  2655  0A67  0CCC               	rrf	??___fltol,f
  2656  0A68                     u2700:
  2657  0A68  3EFF               	addlw	-1
  2658  0A69  1D03               	skipz
  2659  0A6A  2A63               	goto	u2705
  2660  0A6B  084C               	movf	??___fltol,w
  2661  0A6C  00D0               	movwf	??___fltol+4
  2662  0A6D  0850               	movf	??___fltol+4,w
  2663  0A6E  00D1               	movwf	___fltol@sign1
  2664  0A6F                     l2190:
  2665  0A6F  17CA               	bsf	___fltol@f1+2,7
  2666  0A70                     l2192:
  2667  0A70  30FF               	movlw	255
  2668  0A71  05C8               	andwf	___fltol@f1,f
  2669  0A72  30FF               	movlw	255
  2670  0A73  05C9               	andwf	___fltol@f1+1,f
  2671  0A74  30FF               	movlw	255
  2672  0A75  05CA               	andwf	___fltol@f1+2,f
  2673  0A76  3000               	movlw	0
  2674  0A77  05CB               	andwf	___fltol@f1+3,f
  2675  0A78                     l2194:
  2676  0A78  3096               	movlw	150
  2677  0A79  02D2               	subwf	___fltol@exp1,f
  2678  0A7A                     l2196:
  2679  0A7A  1FD2               	btfss	___fltol@exp1,7
  2680  0A7B  2A7D               	goto	u2711
  2681  0A7C  2A7E               	goto	u2710
  2682  0A7D                     u2711:
  2683  0A7D  2A98               	goto	l2206
  2684  0A7E                     u2710:
  2685  0A7E                     l2198:
  2686  0A7E  0852               	movf	___fltol@exp1,w
  2687  0A7F  3A80               	xorlw	128
  2688  0A80  3E97               	addlw	151
  2689  0A81  1803               	skipnc
  2690  0A82  2A84               	goto	u2721
  2691  0A83  2A85               	goto	u2720
  2692  0A84                     u2721:
  2693  0A84  2A86               	goto	l2204
  2694  0A85                     u2720:
  2695  0A85  2A51               	goto	l2184
  2696  0A86                     l2204:
  2697  0A86  3001               	movlw	1
  2698  0A87                     u2735:
  2699  0A87  1003               	clrc
  2700  0A88  0CCB               	rrf	___fltol@f1+3,f
  2701  0A89  0CCA               	rrf	___fltol@f1+2,f
  2702  0A8A  0CC9               	rrf	___fltol@f1+1,f
  2703  0A8B  0CC8               	rrf	___fltol@f1,f
  2704  0A8C  3EFF               	addlw	-1
  2705  0A8D  1D03               	skipz
  2706  0A8E  2A87               	goto	u2735
  2707  0A8F  3001               	movlw	1
  2708  0A90  00CC               	movwf	??___fltol
  2709  0A91  084C               	movf	??___fltol,w
  2710  0A92  07D2               	addwf	___fltol@exp1,f
  2711  0A93  1D03               	btfss	3,2
  2712  0A94  2A96               	goto	u2741
  2713  0A95  2A97               	goto	u2740
  2714  0A96                     u2741:
  2715  0A96  2A86               	goto	l2204
  2716  0A97                     u2740:
  2717  0A97  2AAF               	goto	l2214
  2718  0A98                     l2206:
  2719  0A98  3020               	movlw	32
  2720  0A99  0252               	subwf	___fltol@exp1,w
  2721  0A9A  1C03               	skipc
  2722  0A9B  2A9D               	goto	u2751
  2723  0A9C  2A9E               	goto	u2750
  2724  0A9D                     u2751:
  2725  0A9D  2AAA               	goto	l502
  2726  0A9E                     u2750:
  2727  0A9E  2A51               	goto	l2184
  2728  0A9F                     l2212:
  2729  0A9F  3001               	movlw	1
  2730  0AA0  00CC               	movwf	??___fltol
  2731  0AA1                     u2765:
  2732  0AA1  1003               	clrc
  2733  0AA2  0DC8               	rlf	___fltol@f1,f
  2734  0AA3  0DC9               	rlf	___fltol@f1+1,f
  2735  0AA4  0DCA               	rlf	___fltol@f1+2,f
  2736  0AA5  0DCB               	rlf	___fltol@f1+3,f
  2737  0AA6  0BCC               	decfsz	??___fltol,f
  2738  0AA7  2AA1               	goto	u2765
  2739  0AA8  3001               	movlw	1
  2740  0AA9  02D2               	subwf	___fltol@exp1,f
  2741  0AAA                     l502:
  2742  0AAA  0852               	movf	___fltol@exp1,w
  2743  0AAB  1D03               	btfss	3,2
  2744  0AAC  2AAE               	goto	u2771
  2745  0AAD  2AAF               	goto	u2770
  2746  0AAE                     u2771:
  2747  0AAE  2A9F               	goto	l2212
  2748  0AAF                     u2770:
  2749  0AAF                     l2214:
  2750  0AAF  0851               	movf	___fltol@sign1,w
  2751  0AB0  1903               	btfsc	3,2
  2752  0AB1  2AB3               	goto	u2781
  2753  0AB2  2AB4               	goto	u2780
  2754  0AB3                     u2781:
  2755  0AB3  2ABF               	goto	l505
  2756  0AB4                     u2780:
  2757  0AB4                     l2216:
  2758  0AB4  09C8               	comf	___fltol@f1,f
  2759  0AB5  09C9               	comf	___fltol@f1+1,f
  2760  0AB6  09CA               	comf	___fltol@f1+2,f
  2761  0AB7  09CB               	comf	___fltol@f1+3,f
  2762  0AB8  0AC8               	incf	___fltol@f1,f
  2763  0AB9  1903               	skipnz
  2764  0ABA  0AC9               	incf	___fltol@f1+1,f
  2765  0ABB  1903               	skipnz
  2766  0ABC  0ACA               	incf	___fltol@f1+2,f
  2767  0ABD  1903               	skipnz
  2768  0ABE  0ACB               	incf	___fltol@f1+3,f
  2769  0ABF                     l505:
  2770  0ABF                     l495:
  2771  0ABF  0008               	return
  2772  0AC0                     __end_of___fltol:
  2773                           
  2774                           	psect	text7
  2775  178C                     __ptext7:	
  2776 ;; *************** function ___flsub *****************
  2777 ;; Defined at:
  2778 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  a               4   20[BANK0 ] long 
  2781 ;;  b               4   24[BANK0 ] long 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  4   20[BANK0 ] long 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       8       0       0       0
  2794 ;;      Locals:         0       0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0
  2796 ;;      Totals:         0       8       0       0       0
  2797 ;;Total ram usage:        8 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:    2
  2800 ;; This function calls:
  2801 ;;		___fladd
  2802 ;; This function is called by:
  2803 ;;		_ftoa
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function ___flsub
  2809  178C                     ___flsub:
  2810  178C                     l2218:	
  2811                           ;incstack = 0
  2812                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2813                           
  2814  178C  3080               	movlw	128
  2815  178D  1283               	bcf	3,5	;RP0=0, select bank0
  2816  178E  1303               	bcf	3,6	;RP1=0, select bank0
  2817  178F  06B7               	xorwf	___flsub@a+3,f
  2818  1790                     l2220:
  2819  1790  083B               	movf	___flsub@b+3,w
  2820  1791  00A3               	movwf	___fladd@b+3
  2821  1792  083A               	movf	___flsub@b+2,w
  2822  1793  00A2               	movwf	___fladd@b+2
  2823  1794  0839               	movf	___flsub@b+1,w
  2824  1795  00A1               	movwf	___fladd@b+1
  2825  1796  0838               	movf	___flsub@b,w
  2826  1797  00A0               	movwf	___fladd@b
  2827  1798  0837               	movf	___flsub@a+3,w
  2828  1799  00A7               	movwf	___fladd@a+3
  2829  179A  0836               	movf	___flsub@a+2,w
  2830  179B  00A6               	movwf	___fladd@a+2
  2831  179C  0835               	movf	___flsub@a+1,w
  2832  179D  00A5               	movwf	___fladd@a+1
  2833  179E  0834               	movf	___flsub@a,w
  2834  179F  00A4               	movwf	___fladd@a
  2835  17A0  120A  118A  2384  160A  118A  	fcall	___fladd
  2836  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  2837  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  2838  17A7  0823               	movf	?___fladd+3,w
  2839  17A8  00B7               	movwf	?___flsub+3
  2840  17A9  0822               	movf	?___fladd+2,w
  2841  17AA  00B6               	movwf	?___flsub+2
  2842  17AB  0821               	movf	?___fladd+1,w
  2843  17AC  00B5               	movwf	?___flsub+1
  2844  17AD  0820               	movf	?___fladd,w
  2845  17AE  00B4               	movwf	?___flsub
  2846  17AF                     l648:
  2847  17AF  0008               	return
  2848  17B0                     __end_of___flsub:
  2849                           
  2850                           	psect	text8
  2851  0384                     __ptext8:	
  2852 ;; *************** function ___fladd *****************
  2853 ;; Defined at:
  2854 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  b               4    0[BANK0 ] long 
  2857 ;;  a               4    4[BANK0 ] long 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  grs             1   19[BANK0 ] unsigned char 
  2860 ;;  bexp            1   18[BANK0 ] unsigned char 
  2861 ;;  aexp            1   17[BANK0 ] unsigned char 
  2862 ;;  signs           1   16[BANK0 ] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  4    0[BANK0 ] unsigned char 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, btemp+1
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         0       8       0       0       0
  2873 ;;      Locals:         0       4       0       0       0
  2874 ;;      Temps:          0       8       0       0       0
  2875 ;;      Totals:         0      20       0       0       0
  2876 ;;Total ram usage:       20 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		___flsub
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function ___fladd
  2888  0384                     ___fladd:
  2889  0384                     l1898:	
  2890                           ;incstack = 0
  2891                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2892                           
  2893  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0386  0823               	movf	___fladd@b+3,w
  2896  0387  3980               	andlw	128
  2897  0388  00A8               	movwf	??___fladd
  2898  0389  0828               	movf	??___fladd,w
  2899  038A  00B0               	movwf	___fladd@signs
  2900  038B                     l1900:
  2901  038B  0823               	movf	___fladd@b+3,w
  2902  038C  00A8               	movwf	??___fladd
  2903  038D  0728               	addwf	??___fladd,w
  2904  038E  00A9               	movwf	??___fladd+1
  2905  038F  0829               	movf	??___fladd+1,w
  2906  0390  00B2               	movwf	___fladd@bexp
  2907  0391                     l1902:
  2908  0391  1FA2               	btfss	___fladd@b+2,7
  2909  0392  2B94               	goto	u2061
  2910  0393  2B95               	goto	u2060
  2911  0394                     u2061:
  2912  0394  2B96               	goto	l1906
  2913  0395                     u2060:
  2914  0395                     l1904:
  2915  0395  1432               	bsf	___fladd@bexp,0
  2916  0396                     l1906:
  2917  0396  0832               	movf	___fladd@bexp,w
  2918  0397  1903               	btfsc	3,2
  2919  0398  2B9A               	goto	u2071
  2920  0399  2B9B               	goto	u2070
  2921  039A                     u2071:
  2922  039A  2BAB               	goto	l1916
  2923  039B                     u2070:
  2924  039B                     l1908:
  2925  039B  0A32               	incf	___fladd@bexp,w
  2926  039C  1D03               	btfss	3,2
  2927  039D  2B9F               	goto	u2081
  2928  039E  2BA0               	goto	u2080
  2929  039F                     u2081:
  2930  039F  2BA8               	goto	l1912
  2931  03A0                     u2080:
  2932  03A0                     l1910:
  2933  03A0  3000               	movlw	0
  2934  03A1  00A3               	movwf	___fladd@b+3
  2935  03A2  3000               	movlw	0
  2936  03A3  00A2               	movwf	___fladd@b+2
  2937  03A4  3000               	movlw	0
  2938  03A5  00A1               	movwf	___fladd@b+1
  2939  03A6  3000               	movlw	0
  2940  03A7  00A0               	movwf	___fladd@b
  2941  03A8                     l1912:
  2942  03A8  17A2               	bsf	___fladd@b+2,7
  2943  03A9                     l1914:
  2944  03A9  01A3               	clrf	___fladd@b+3
  2945  03AA  2BB3               	goto	l1918
  2946  03AB                     l1916:
  2947  03AB  3000               	movlw	0
  2948  03AC  00A3               	movwf	___fladd@b+3
  2949  03AD  3000               	movlw	0
  2950  03AE  00A2               	movwf	___fladd@b+2
  2951  03AF  3000               	movlw	0
  2952  03B0  00A1               	movwf	___fladd@b+1
  2953  03B1  3000               	movlw	0
  2954  03B2  00A0               	movwf	___fladd@b
  2955  03B3                     l1918:
  2956  03B3  0827               	movf	___fladd@a+3,w
  2957  03B4  3980               	andlw	128
  2958  03B5  00A8               	movwf	??___fladd
  2959  03B6  0828               	movf	??___fladd,w
  2960  03B7  00B1               	movwf	___fladd@aexp
  2961  03B8                     l1920:
  2962  03B8  0831               	movf	___fladd@aexp,w
  2963  03B9  0630               	xorwf	___fladd@signs,w
  2964  03BA  1903               	skipnz
  2965  03BB  2BBD               	goto	u2091
  2966  03BC  2BBE               	goto	u2090
  2967  03BD                     u2091:
  2968  03BD  2BBF               	goto	l1924
  2969  03BE                     u2090:
  2970  03BE                     l1922:
  2971  03BE  1730               	bsf	___fladd@signs,6
  2972  03BF                     l1924:
  2973  03BF  0827               	movf	___fladd@a+3,w
  2974  03C0  00A8               	movwf	??___fladd
  2975  03C1  0728               	addwf	??___fladd,w
  2976  03C2  00A9               	movwf	??___fladd+1
  2977  03C3  0829               	movf	??___fladd+1,w
  2978  03C4  00B1               	movwf	___fladd@aexp
  2979  03C5                     l1926:
  2980  03C5  1FA6               	btfss	___fladd@a+2,7
  2981  03C6  2BC8               	goto	u2101
  2982  03C7  2BC9               	goto	u2100
  2983  03C8                     u2101:
  2984  03C8  2BCA               	goto	l1930
  2985  03C9                     u2100:
  2986  03C9                     l1928:
  2987  03C9  1431               	bsf	___fladd@aexp,0
  2988  03CA                     l1930:
  2989  03CA  0831               	movf	___fladd@aexp,w
  2990  03CB  1903               	btfsc	3,2
  2991  03CC  2BCE               	goto	u2111
  2992  03CD  2BCF               	goto	u2110
  2993  03CE                     u2111:
  2994  03CE  2BDF               	goto	l1940
  2995  03CF                     u2110:
  2996  03CF                     l1932:
  2997  03CF  0A31               	incf	___fladd@aexp,w
  2998  03D0  1D03               	btfss	3,2
  2999  03D1  2BD3               	goto	u2121
  3000  03D2  2BD4               	goto	u2120
  3001  03D3                     u2121:
  3002  03D3  2BDC               	goto	l1936
  3003  03D4                     u2120:
  3004  03D4                     l1934:
  3005  03D4  3000               	movlw	0
  3006  03D5  00A7               	movwf	___fladd@a+3
  3007  03D6  3000               	movlw	0
  3008  03D7  00A6               	movwf	___fladd@a+2
  3009  03D8  3000               	movlw	0
  3010  03D9  00A5               	movwf	___fladd@a+1
  3011  03DA  3000               	movlw	0
  3012  03DB  00A4               	movwf	___fladd@a
  3013  03DC                     l1936:
  3014  03DC  17A6               	bsf	___fladd@a+2,7
  3015  03DD                     l1938:
  3016  03DD  01A7               	clrf	___fladd@a+3
  3017  03DE  2BE7               	goto	l602
  3018  03DF                     l1940:
  3019  03DF  3000               	movlw	0
  3020  03E0  00A7               	movwf	___fladd@a+3
  3021  03E1  3000               	movlw	0
  3022  03E2  00A6               	movwf	___fladd@a+2
  3023  03E3  3000               	movlw	0
  3024  03E4  00A5               	movwf	___fladd@a+1
  3025  03E5  3000               	movlw	0
  3026  03E6  00A4               	movwf	___fladd@a
  3027  03E7                     l602:
  3028  03E7  0832               	movf	___fladd@bexp,w
  3029  03E8  0231               	subwf	___fladd@aexp,w
  3030  03E9  1803               	skipnc
  3031  03EA  2BEC               	goto	u2131
  3032  03EB  2BED               	goto	u2130
  3033  03EC                     u2131:
  3034  03EC  2C31               	goto	l1976
  3035  03ED                     u2130:
  3036  03ED                     l1942:
  3037  03ED  1F30               	btfss	___fladd@signs,6
  3038  03EE  2BF0               	goto	u2141
  3039  03EF  2BF1               	goto	u2140
  3040  03F0                     u2141:
  3041  03F0  2BF5               	goto	l1946
  3042  03F1                     u2140:
  3043  03F1                     l1944:
  3044  03F1  3080               	movlw	128
  3045  03F2  00A8               	movwf	??___fladd
  3046  03F3  0828               	movf	??___fladd,w
  3047  03F4  06B0               	xorwf	___fladd@signs,f
  3048  03F5                     l1946:
  3049  03F5  0832               	movf	___fladd@bexp,w
  3050  03F6  00A8               	movwf	??___fladd
  3051  03F7  0828               	movf	??___fladd,w
  3052  03F8  00B3               	movwf	___fladd@grs
  3053  03F9                     l1948:
  3054  03F9  0831               	movf	___fladd@aexp,w
  3055  03FA  00A8               	movwf	??___fladd
  3056  03FB  0828               	movf	??___fladd,w
  3057  03FC  00B2               	movwf	___fladd@bexp
  3058  03FD                     l1950:
  3059  03FD  0833               	movf	___fladd@grs,w
  3060  03FE  00A8               	movwf	??___fladd
  3061  03FF  0828               	movf	??___fladd,w
  3062  0400  00B1               	movwf	___fladd@aexp
  3063  0401                     l1952:
  3064  0401  0820               	movf	___fladd@b,w
  3065  0402  00A8               	movwf	??___fladd
  3066  0403  0828               	movf	??___fladd,w
  3067  0404  00B3               	movwf	___fladd@grs
  3068  0405                     l1954:
  3069  0405  0824               	movf	___fladd@a,w
  3070  0406  00A8               	movwf	??___fladd
  3071  0407  0828               	movf	??___fladd,w
  3072  0408  00A0               	movwf	___fladd@b
  3073  0409                     l1956:
  3074  0409  0833               	movf	___fladd@grs,w
  3075  040A  00A8               	movwf	??___fladd
  3076  040B  0828               	movf	??___fladd,w
  3077  040C  00A4               	movwf	___fladd@a
  3078  040D                     l1958:
  3079  040D  0821               	movf	___fladd@b+1,w
  3080  040E  00A8               	movwf	??___fladd
  3081  040F  0828               	movf	??___fladd,w
  3082  0410  00B3               	movwf	___fladd@grs
  3083  0411                     l1960:
  3084  0411  0825               	movf	___fladd@a+1,w
  3085  0412  00A8               	movwf	??___fladd
  3086  0413  0828               	movf	??___fladd,w
  3087  0414  00A1               	movwf	___fladd@b+1
  3088  0415                     l1962:
  3089  0415  0833               	movf	___fladd@grs,w
  3090  0416  00A8               	movwf	??___fladd
  3091  0417  0828               	movf	??___fladd,w
  3092  0418  00A5               	movwf	___fladd@a+1
  3093  0419                     l1964:
  3094  0419  0822               	movf	___fladd@b+2,w
  3095  041A  00A8               	movwf	??___fladd
  3096  041B  0828               	movf	??___fladd,w
  3097  041C  00B3               	movwf	___fladd@grs
  3098  041D                     l1966:
  3099  041D  0826               	movf	___fladd@a+2,w
  3100  041E  00A8               	movwf	??___fladd
  3101  041F  0828               	movf	??___fladd,w
  3102  0420  00A2               	movwf	___fladd@b+2
  3103  0421                     l1968:
  3104  0421  0833               	movf	___fladd@grs,w
  3105  0422  00A8               	movwf	??___fladd
  3106  0423  0828               	movf	??___fladd,w
  3107  0424  00A6               	movwf	___fladd@a+2
  3108  0425                     l1970:
  3109  0425  0823               	movf	___fladd@b+3,w
  3110  0426  00A8               	movwf	??___fladd
  3111  0427  0828               	movf	??___fladd,w
  3112  0428  00B3               	movwf	___fladd@grs
  3113  0429                     l1972:
  3114  0429  0827               	movf	___fladd@a+3,w
  3115  042A  00A8               	movwf	??___fladd
  3116  042B  0828               	movf	??___fladd,w
  3117  042C  00A3               	movwf	___fladd@b+3
  3118  042D                     l1974:
  3119  042D  0833               	movf	___fladd@grs,w
  3120  042E  00A8               	movwf	??___fladd
  3121  042F  0828               	movf	??___fladd,w
  3122  0430  00A7               	movwf	___fladd@a+3
  3123  0431                     l1976:
  3124  0431  01B3               	clrf	___fladd@grs
  3125  0432                     l1978:
  3126  0432  0831               	movf	___fladd@aexp,w
  3127  0433  00A8               	movwf	??___fladd
  3128  0434  01A9               	clrf	??___fladd+1
  3129  0435  0829               	movf	??___fladd+1,w
  3130  0436  00AB               	movwf	??___fladd+3
  3131  0437  0832               	movf	___fladd@bexp,w
  3132  0438  0228               	subwf	??___fladd,w
  3133  0439  00AA               	movwf	??___fladd+2
  3134  043A  1C03               	skipc
  3135  043B  03AB               	decf	??___fladd+3,f
  3136  043C  082B               	movf	??___fladd+3,w
  3137  043D  3A80               	xorlw	128
  3138  043E  00FF               	movwf	btemp+1
  3139  043F  3080               	movlw	128
  3140  0440  027F               	subwf	btemp+1,w
  3141  0441  1D03               	skipz
  3142  0442  2C45               	goto	u2155
  3143  0443  301A               	movlw	26
  3144  0444  022A               	subwf	??___fladd+2,w
  3145  0445                     u2155:
  3146  0445  1C03               	skipc
  3147  0446  2C48               	goto	u2151
  3148  0447  2C49               	goto	u2150
  3149  0448                     u2151:
  3150  0448  2C86               	goto	l1994
  3151  0449                     u2150:
  3152  0449                     l1980:
  3153  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3154  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3155  044B  0823               	movf	___fladd@b+3,w
  3156  044C  0422               	iorwf	___fladd@b+2,w
  3157  044D  0421               	iorwf	___fladd@b+1,w
  3158  044E  0420               	iorwf	___fladd@b,w
  3159  044F  1D03               	skipz
  3160  0450  2C52               	goto	u2161
  3161  0451  2C54               	goto	u2160
  3162  0452                     u2161:
  3163  0452  3001               	movlw	1
  3164  0453  2C55               	goto	u2170
  3165  0454                     u2160:
  3166  0454  3000               	movlw	0
  3167  0455                     u2170:
  3168  0455  00A8               	movwf	??___fladd
  3169  0456  0828               	movf	??___fladd,w
  3170  0457  00B3               	movwf	___fladd@grs
  3171  0458  3000               	movlw	0
  3172  0459  00A3               	movwf	___fladd@b+3
  3173  045A  3000               	movlw	0
  3174  045B  00A2               	movwf	___fladd@b+2
  3175  045C  3000               	movlw	0
  3176  045D  00A1               	movwf	___fladd@b+1
  3177  045E  3000               	movlw	0
  3178  045F  00A0               	movwf	___fladd@b
  3179  0460  0831               	movf	___fladd@aexp,w
  3180  0461  00A8               	movwf	??___fladd
  3181  0462  0828               	movf	??___fladd,w
  3182  0463  00B2               	movwf	___fladd@bexp
  3183  0464  2C8E               	goto	l606
  3184  0465                     l608:
  3185  0465  1C33               	btfss	___fladd@grs,0
  3186  0466  2C68               	goto	u2181
  3187  0467  2C69               	goto	u2180
  3188  0468                     u2181:
  3189  0468  2C72               	goto	l1984
  3190  0469                     u2180:
  3191  0469                     l1982:
  3192  0469  0833               	movf	___fladd@grs,w
  3193  046A  00A8               	movwf	??___fladd
  3194  046B  1003               	clrc
  3195  046C  0C28               	rrf	??___fladd,w
  3196  046D  3801               	iorlw	1
  3197  046E  00A9               	movwf	??___fladd+1
  3198  046F  0829               	movf	??___fladd+1,w
  3199  0470  00B3               	movwf	___fladd@grs
  3200  0471  2C74               	goto	l1986
  3201  0472                     l1984:
  3202  0472  1003               	clrc
  3203  0473  0CB3               	rrf	___fladd@grs,f
  3204  0474                     l1986:
  3205  0474  1C20               	btfss	___fladd@b,0
  3206  0475  2C77               	goto	u2191
  3207  0476  2C78               	goto	u2190
  3208  0477                     u2191:
  3209  0477  2C79               	goto	l1990
  3210  0478                     u2190:
  3211  0478                     l1988:
  3212  0478  17B3               	bsf	___fladd@grs,7
  3213  0479                     l1990:
  3214  0479  3001               	movlw	1
  3215  047A  00A8               	movwf	??___fladd
  3216  047B                     u2205:
  3217  047B  0D23               	rlf	___fladd@b+3,w
  3218  047C  0CA3               	rrf	___fladd@b+3,f
  3219  047D  0CA2               	rrf	___fladd@b+2,f
  3220  047E  0CA1               	rrf	___fladd@b+1,f
  3221  047F  0CA0               	rrf	___fladd@b,f
  3222  0480  0BA8               	decfsz	??___fladd& (0+127),f
  3223  0481  2C7B               	goto	u2205
  3224  0482                     l1992:
  3225  0482  3001               	movlw	1
  3226  0483  00A8               	movwf	??___fladd
  3227  0484  0828               	movf	??___fladd,w
  3228  0485  07B2               	addwf	___fladd@bexp,f
  3229  0486                     l1994:
  3230  0486  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0487  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0488  0831               	movf	___fladd@aexp,w
  3233  0489  0232               	subwf	___fladd@bexp,w
  3234  048A  1C03               	skipc
  3235  048B  2C8D               	goto	u2211
  3236  048C  2C8E               	goto	u2210
  3237  048D                     u2211:
  3238  048D  2C65               	goto	l608
  3239  048E                     u2210:
  3240  048E                     l606:
  3241  048E  1B30               	btfsc	___fladd@signs,6
  3242  048F  2C91               	goto	u2221
  3243  0490  2C92               	goto	u2220
  3244  0491                     u2221:
  3245  0491  2CDD               	goto	l2020
  3246  0492                     u2220:
  3247  0492                     l1996:
  3248  0492  0832               	movf	___fladd@bexp,w
  3249  0493  1D03               	btfss	3,2
  3250  0494  2C96               	goto	u2231
  3251  0495  2C97               	goto	u2230
  3252  0496                     u2231:
  3253  0496  2CA0               	goto	l2002
  3254  0497                     u2230:
  3255  0497                     l1998:
  3256  0497  3000               	movlw	0
  3257  0498  00A3               	movwf	?___fladd+3
  3258  0499  3000               	movlw	0
  3259  049A  00A2               	movwf	?___fladd+2
  3260  049B  3000               	movlw	0
  3261  049C  00A1               	movwf	?___fladd+1
  3262  049D  3000               	movlw	0
  3263  049E  00A0               	movwf	?___fladd
  3264  049F  2E0B               	goto	l615
  3265  04A0                     l2002:
  3266  04A0  0824               	movf	___fladd@a,w
  3267  04A1  07A0               	addwf	___fladd@b,f
  3268  04A2  0825               	movf	___fladd@a+1,w
  3269  04A3  1103               	clrz
  3270  04A4  1803               	skipnc
  3271  04A5  3E01               	addlw	1
  3272  04A6  1903               	skipnz
  3273  04A7  2CA9               	goto	u2241
  3274  04A8  07A1               	addwf	___fladd@b+1,f
  3275  04A9                     u2241:
  3276  04A9  0826               	movf	___fladd@a+2,w
  3277  04AA  1103               	clrz
  3278  04AB  1803               	skipnc
  3279  04AC  3E01               	addlw	1
  3280  04AD  1903               	skipnz
  3281  04AE  2CB0               	goto	u2242
  3282  04AF  07A2               	addwf	___fladd@b+2,f
  3283  04B0                     u2242:
  3284  04B0  0827               	movf	___fladd@a+3,w
  3285  04B1  1103               	clrz
  3286  04B2  1803               	skipnc
  3287  04B3  3E01               	addlw	1
  3288  04B4  1903               	skipnz
  3289  04B5  2CB7               	goto	u2243
  3290  04B6  07A3               	addwf	___fladd@b+3,f
  3291  04B7                     u2243:
  3292  04B7                     l2004:
  3293  04B7  1C23               	btfss	___fladd@b+3,0
  3294  04B8  2CBA               	goto	u2251
  3295  04B9  2CBB               	goto	u2250
  3296  04BA                     u2251:
  3297  04BA  2D91               	goto	l2054
  3298  04BB                     u2250:
  3299  04BB                     l2006:
  3300  04BB  1C33               	btfss	___fladd@grs,0
  3301  04BC  2CBE               	goto	u2261
  3302  04BD  2CBF               	goto	u2260
  3303  04BE                     u2261:
  3304  04BE  2CC8               	goto	l2010
  3305  04BF                     u2260:
  3306  04BF                     l2008:
  3307  04BF  0833               	movf	___fladd@grs,w
  3308  04C0  00A8               	movwf	??___fladd
  3309  04C1  1003               	clrc
  3310  04C2  0C28               	rrf	??___fladd,w
  3311  04C3  3801               	iorlw	1
  3312  04C4  00A9               	movwf	??___fladd+1
  3313  04C5  0829               	movf	??___fladd+1,w
  3314  04C6  00B3               	movwf	___fladd@grs
  3315  04C7  2CCA               	goto	l2012
  3316  04C8                     l2010:
  3317  04C8  1003               	clrc
  3318  04C9  0CB3               	rrf	___fladd@grs,f
  3319  04CA                     l2012:
  3320  04CA  1C20               	btfss	___fladd@b,0
  3321  04CB  2CCD               	goto	u2271
  3322  04CC  2CCE               	goto	u2270
  3323  04CD                     u2271:
  3324  04CD  2CCF               	goto	l2016
  3325  04CE                     u2270:
  3326  04CE                     l2014:
  3327  04CE  17B3               	bsf	___fladd@grs,7
  3328  04CF                     l2016:
  3329  04CF  3001               	movlw	1
  3330  04D0  00A8               	movwf	??___fladd
  3331  04D1                     u2285:
  3332  04D1  0D23               	rlf	___fladd@b+3,w
  3333  04D2  0CA3               	rrf	___fladd@b+3,f
  3334  04D3  0CA2               	rrf	___fladd@b+2,f
  3335  04D4  0CA1               	rrf	___fladd@b+1,f
  3336  04D5  0CA0               	rrf	___fladd@b,f
  3337  04D6  0BA8               	decfsz	??___fladd& (0+127),f
  3338  04D7  2CD1               	goto	u2285
  3339  04D8                     l2018:
  3340  04D8  3001               	movlw	1
  3341  04D9  00A8               	movwf	??___fladd
  3342  04DA  0828               	movf	??___fladd,w
  3343  04DB  07B2               	addwf	___fladd@bexp,f
  3344  04DC  2D91               	goto	l2054
  3345  04DD                     l2020:
  3346  04DD  0823               	movf	___fladd@b+3,w
  3347  04DE  3A80               	xorlw	128
  3348  04DF  00FF               	movwf	btemp+1
  3349  04E0  0827               	movf	___fladd@a+3,w
  3350  04E1  3A80               	xorlw	128
  3351  04E2  027F               	subwf	btemp+1,w
  3352  04E3  1D03               	skipz
  3353  04E4  2CEF               	goto	u2293
  3354  04E5  0826               	movf	___fladd@a+2,w
  3355  04E6  0222               	subwf	___fladd@b+2,w
  3356  04E7  1D03               	skipz
  3357  04E8  2CEF               	goto	u2293
  3358  04E9  0825               	movf	___fladd@a+1,w
  3359  04EA  0221               	subwf	___fladd@b+1,w
  3360  04EB  1D03               	skipz
  3361  04EC  2CEF               	goto	u2293
  3362  04ED  0824               	movf	___fladd@a,w
  3363  04EE  0220               	subwf	___fladd@b,w
  3364  04EF                     u2293:
  3365  04EF  1803               	skipnc
  3366  04F0  2CF2               	goto	u2291
  3367  04F1  2CF3               	goto	u2290
  3368  04F2                     u2291:
  3369  04F2  2D4B               	goto	l2030
  3370  04F3                     u2290:
  3371  04F3                     l2022:
  3372  04F3  30FF               	movlw	255
  3373  04F4  00A8               	movwf	??___fladd
  3374  04F5  30FF               	movlw	255
  3375  04F6  00A9               	movwf	??___fladd+1
  3376  04F7  30FF               	movlw	255
  3377  04F8  00AA               	movwf	??___fladd+2
  3378  04F9  30FF               	movlw	255
  3379  04FA  00AB               	movwf	??___fladd+3
  3380  04FB  0824               	movf	___fladd@a,w
  3381  04FC  00AC               	movwf	??___fladd+4
  3382  04FD  0825               	movf	___fladd@a+1,w
  3383  04FE  00AD               	movwf	??___fladd+5
  3384  04FF  0826               	movf	___fladd@a+2,w
  3385  0500  00AE               	movwf	??___fladd+6
  3386  0501  0827               	movf	___fladd@a+3,w
  3387  0502  00AF               	movwf	??___fladd+7
  3388  0503  0820               	movf	___fladd@b,w
  3389  0504  02AC               	subwf	??___fladd+4,f
  3390  0505  0821               	movf	___fladd@b+1,w
  3391  0506  1C03               	skipc
  3392  0507  0F21               	incfsz	___fladd@b+1,w
  3393  0508  2D0A               	goto	u2301
  3394  0509  2D0B               	goto	u2302
  3395  050A                     u2301:
  3396  050A  02AD               	subwf	??___fladd+5,f
  3397  050B                     u2302:
  3398  050B  0822               	movf	___fladd@b+2,w
  3399  050C  1C03               	skipc
  3400  050D  0F22               	incfsz	___fladd@b+2,w
  3401  050E  2D10               	goto	u2303
  3402  050F  2D11               	goto	u2304
  3403  0510                     u2303:
  3404  0510  02AE               	subwf	??___fladd+6,f
  3405  0511                     u2304:
  3406  0511  0823               	movf	___fladd@b+3,w
  3407  0512  1C03               	skipc
  3408  0513  0F23               	incfsz	___fladd@b+3,w
  3409  0514  2D16               	goto	u2305
  3410  0515  2D17               	goto	u2306
  3411  0516                     u2305:
  3412  0516  02AF               	subwf	??___fladd+7,f
  3413  0517                     u2306:
  3414  0517  082C               	movf	??___fladd+4,w
  3415  0518  07A8               	addwf	??___fladd,f
  3416  0519  082D               	movf	??___fladd+5,w
  3417  051A  1803               	skipnc
  3418  051B  0F2D               	incfsz	??___fladd+5,w
  3419  051C  2D1E               	goto	u2310
  3420  051D  2D1F               	goto	u2311
  3421  051E                     u2310:
  3422  051E  07A9               	addwf	??___fladd+1,f
  3423  051F                     u2311:
  3424  051F  082E               	movf	??___fladd+6,w
  3425  0520  1803               	skipnc
  3426  0521  0F2E               	incfsz	??___fladd+6,w
  3427  0522  2D24               	goto	u2312
  3428  0523  2D25               	goto	u2313
  3429  0524                     u2312:
  3430  0524  07AA               	addwf	??___fladd+2,f
  3431  0525                     u2313:
  3432  0525  082F               	movf	??___fladd+7,w
  3433  0526  1803               	skipnc
  3434  0527  0A2F               	incf	??___fladd+7,w
  3435  0528  07AB               	addwf	??___fladd+3,f
  3436  0529  082B               	movf	??___fladd+3,w
  3437  052A  00A3               	movwf	___fladd@b+3
  3438  052B  082A               	movf	??___fladd+2,w
  3439  052C  00A2               	movwf	___fladd@b+2
  3440  052D  0829               	movf	??___fladd+1,w
  3441  052E  00A1               	movwf	___fladd@b+1
  3442  052F  0828               	movf	??___fladd,w
  3443  0530  00A0               	movwf	___fladd@b
  3444  0531                     l2024:
  3445  0531  3080               	movlw	128
  3446  0532  00A8               	movwf	??___fladd
  3447  0533  0828               	movf	??___fladd,w
  3448  0534  06B0               	xorwf	___fladd@signs,f
  3449  0535  09B3               	comf	___fladd@grs,f
  3450  0536  0AB3               	incf	___fladd@grs,f
  3451  0537                     l2026:
  3452  0537  0833               	movf	___fladd@grs,w
  3453  0538  1D03               	btfss	3,2
  3454  0539  2D3B               	goto	u2321
  3455  053A  2D3C               	goto	u2320
  3456  053B                     u2321:
  3457  053B  2D59               	goto	l623
  3458  053C                     u2320:
  3459  053C                     l2028:
  3460  053C  3001               	movlw	1
  3461  053D  07A0               	addwf	___fladd@b,f
  3462  053E  3000               	movlw	0
  3463  053F  1803               	skipnc
  3464  0540  3001               	movlw	1
  3465  0541  07A1               	addwf	___fladd@b+1,f
  3466  0542  3000               	movlw	0
  3467  0543  1803               	skipnc
  3468  0544  3001               	movlw	1
  3469  0545  07A2               	addwf	___fladd@b+2,f
  3470  0546  3000               	movlw	0
  3471  0547  1803               	skipnc
  3472  0548  3001               	movlw	1
  3473  0549  07A3               	addwf	___fladd@b+3,f
  3474  054A  2D59               	goto	l623
  3475  054B                     l2030:
  3476  054B  0824               	movf	___fladd@a,w
  3477  054C  02A0               	subwf	___fladd@b,f
  3478  054D  0825               	movf	___fladd@a+1,w
  3479  054E  1C03               	skipc
  3480  054F  0F25               	incfsz	___fladd@a+1,w
  3481  0550  02A1               	subwf	___fladd@b+1,f
  3482  0551  0826               	movf	___fladd@a+2,w
  3483  0552  1C03               	skipc
  3484  0553  0F26               	incfsz	___fladd@a+2,w
  3485  0554  02A2               	subwf	___fladd@b+2,f
  3486  0555  0827               	movf	___fladd@a+3,w
  3487  0556  1C03               	skipc
  3488  0557  0F27               	incfsz	___fladd@a+3,w
  3489  0558  02A3               	subwf	___fladd@b+3,f
  3490  0559                     l623:
  3491  0559  0823               	movf	___fladd@b+3,w
  3492  055A  0422               	iorwf	___fladd@b+2,w
  3493  055B  0421               	iorwf	___fladd@b+1,w
  3494  055C  0420               	iorwf	___fladd@b,w
  3495  055D  1D03               	skipz
  3496  055E  2D60               	goto	u2331
  3497  055F  2D61               	goto	u2330
  3498  0560                     u2331:
  3499  0560  2D8D               	goto	l2052
  3500  0561                     u2330:
  3501  0561                     l2032:
  3502  0561  0833               	movf	___fladd@grs,w
  3503  0562  1D03               	btfss	3,2
  3504  0563  2D65               	goto	u2341
  3505  0564  2D66               	goto	u2340
  3506  0565                     u2341:
  3507  0565  2D8D               	goto	l2052
  3508  0566                     u2340:
  3509  0566                     l2034:
  3510  0566  3000               	movlw	0
  3511  0567  00A3               	movwf	?___fladd+3
  3512  0568  3000               	movlw	0
  3513  0569  00A2               	movwf	?___fladd+2
  3514  056A  3000               	movlw	0
  3515  056B  00A1               	movwf	?___fladd+1
  3516  056C  3000               	movlw	0
  3517  056D  00A0               	movwf	?___fladd
  3518  056E  2E0B               	goto	l615
  3519  056F                     l2038:
  3520  056F  3001               	movlw	1
  3521  0570  00A8               	movwf	??___fladd
  3522  0571                     u2355:
  3523  0571  1003               	clrc
  3524  0572  0DA0               	rlf	___fladd@b,f
  3525  0573  0DA1               	rlf	___fladd@b+1,f
  3526  0574  0DA2               	rlf	___fladd@b+2,f
  3527  0575  0DA3               	rlf	___fladd@b+3,f
  3528  0576  0BA8               	decfsz	??___fladd,f
  3529  0577  2D71               	goto	u2355
  3530  0578                     l2040:
  3531  0578  1FB3               	btfss	___fladd@grs,7
  3532  0579  2D7B               	goto	u2361
  3533  057A  2D7C               	goto	u2360
  3534  057B                     u2361:
  3535  057B  2D7D               	goto	l627
  3536  057C                     u2360:
  3537  057C                     l2042:
  3538  057C  1420               	bsf	___fladd@b,0
  3539  057D                     l627:
  3540  057D  1C33               	btfss	___fladd@grs,0
  3541  057E  2D80               	goto	u2371
  3542  057F  2D81               	goto	u2370
  3543  0580                     u2371:
  3544  0580  2D84               	goto	l2046
  3545  0581                     u2370:
  3546  0581                     l2044:
  3547  0581  1403               	setc
  3548  0582  0DB3               	rlf	___fladd@grs,f
  3549  0583  2D86               	goto	l2048
  3550  0584                     l2046:
  3551  0584  1003               	clrc
  3552  0585  0DB3               	rlf	___fladd@grs,f
  3553  0586                     l2048:
  3554  0586  0832               	movf	___fladd@bexp,w
  3555  0587  1903               	btfsc	3,2
  3556  0588  2D8A               	goto	u2381
  3557  0589  2D8B               	goto	u2380
  3558  058A                     u2381:
  3559  058A  2D8D               	goto	l2052
  3560  058B                     u2380:
  3561  058B                     l2050:
  3562  058B  3001               	movlw	1
  3563  058C  02B2               	subwf	___fladd@bexp,f
  3564  058D                     l2052:
  3565  058D  1FA2               	btfss	___fladd@b+2,7
  3566  058E  2D90               	goto	u2391
  3567  058F  2D91               	goto	u2390
  3568  0590                     u2391:
  3569  0590  2D6F               	goto	l2038
  3570  0591                     u2390:
  3571  0591                     l2054:
  3572  0591  01B1               	clrf	___fladd@aexp
  3573  0592                     l2056:
  3574  0592  1FB3               	btfss	___fladd@grs,7
  3575  0593  2D95               	goto	u2401
  3576  0594  2D96               	goto	u2400
  3577  0595                     u2401:
  3578  0595  2DA4               	goto	l2064
  3579  0596                     u2400:
  3580  0596                     l2058:
  3581  0596  0833               	movf	___fladd@grs,w
  3582  0597  397F               	andlw	127
  3583  0598  1903               	btfsc	3,2
  3584  0599  2D9B               	goto	u2411
  3585  059A  2D9C               	goto	u2410
  3586  059B                     u2411:
  3587  059B  2D9F               	goto	l633
  3588  059C                     u2410:
  3589  059C                     l2060:
  3590  059C  01B1               	clrf	___fladd@aexp
  3591  059D  0AB1               	incf	___fladd@aexp,f
  3592  059E  2DA4               	goto	l2064
  3593  059F                     l633:
  3594  059F  1C20               	btfss	___fladd@b,0
  3595  05A0  2DA2               	goto	u2421
  3596  05A1  2DA3               	goto	u2420
  3597  05A2                     u2421:
  3598  05A2  2DA4               	goto	l2064
  3599  05A3                     u2420:
  3600  05A3  2D9C               	goto	l2060
  3601  05A4                     l2064:
  3602  05A4  0831               	movf	___fladd@aexp,w
  3603  05A5  1903               	btfsc	3,2
  3604  05A6  2DA8               	goto	u2431
  3605  05A7  2DA9               	goto	u2430
  3606  05A8                     u2431:
  3607  05A8  2DDD               	goto	l636
  3608  05A9                     u2430:
  3609  05A9                     l2066:
  3610  05A9  3001               	movlw	1
  3611  05AA  07A0               	addwf	___fladd@b,f
  3612  05AB  3000               	movlw	0
  3613  05AC  1803               	skipnc
  3614  05AD  3001               	movlw	1
  3615  05AE  07A1               	addwf	___fladd@b+1,f
  3616  05AF  3000               	movlw	0
  3617  05B0  1803               	skipnc
  3618  05B1  3001               	movlw	1
  3619  05B2  07A2               	addwf	___fladd@b+2,f
  3620  05B3  3000               	movlw	0
  3621  05B4  1803               	skipnc
  3622  05B5  3001               	movlw	1
  3623  05B6  07A3               	addwf	___fladd@b+3,f
  3624  05B7                     l2068:
  3625  05B7  1C23               	btfss	___fladd@b+3,0
  3626  05B8  2DBA               	goto	u2441
  3627  05B9  2DBB               	goto	u2440
  3628  05BA                     u2441:
  3629  05BA  2DDD               	goto	l636
  3630  05BB                     u2440:
  3631  05BB                     l2070:
  3632  05BB  0820               	movf	___fladd@b,w
  3633  05BC  00A8               	movwf	??___fladd
  3634  05BD  0821               	movf	___fladd@b+1,w
  3635  05BE  00A9               	movwf	??___fladd+1
  3636  05BF  0822               	movf	___fladd@b+2,w
  3637  05C0  00AA               	movwf	??___fladd+2
  3638  05C1  0823               	movf	___fladd@b+3,w
  3639  05C2  00AB               	movwf	??___fladd+3
  3640  05C3  3001               	movlw	1
  3641  05C4  00AC               	movwf	??___fladd+4
  3642  05C5                     u2455:
  3643  05C5  0D2B               	rlf	??___fladd+3,w
  3644  05C6  0CAB               	rrf	??___fladd+3,f
  3645  05C7  0CAA               	rrf	??___fladd+2,f
  3646  05C8  0CA9               	rrf	??___fladd+1,f
  3647  05C9  0CA8               	rrf	??___fladd,f
  3648  05CA                     u2450:
  3649  05CA  0BAC               	decfsz	??___fladd+4,f
  3650  05CB  2DC5               	goto	u2455
  3651  05CC  082B               	movf	??___fladd+3,w
  3652  05CD  00A3               	movwf	___fladd@b+3
  3653  05CE  082A               	movf	??___fladd+2,w
  3654  05CF  00A2               	movwf	___fladd@b+2
  3655  05D0  0829               	movf	??___fladd+1,w
  3656  05D1  00A1               	movwf	___fladd@b+1
  3657  05D2  0828               	movf	??___fladd,w
  3658  05D3  00A0               	movwf	___fladd@b
  3659  05D4  0A32               	incf	___fladd@bexp,w
  3660  05D5  1903               	btfsc	3,2
  3661  05D6  2DD8               	goto	u2461
  3662  05D7  2DD9               	goto	u2460
  3663  05D8                     u2461:
  3664  05D8  2DDD               	goto	l636
  3665  05D9                     u2460:
  3666  05D9                     l2072:
  3667  05D9  3001               	movlw	1
  3668  05DA  00A8               	movwf	??___fladd
  3669  05DB  0828               	movf	??___fladd,w
  3670  05DC  07B2               	addwf	___fladd@bexp,f
  3671  05DD                     l636:
  3672  05DD  0A32               	incf	___fladd@bexp,w
  3673  05DE  1903               	btfsc	3,2
  3674  05DF  2DE1               	goto	u2471
  3675  05E0  2DE2               	goto	u2470
  3676  05E1                     u2471:
  3677  05E1  2DE7               	goto	l2076
  3678  05E2                     u2470:
  3679  05E2                     l2074:
  3680  05E2  0832               	movf	___fladd@bexp,w
  3681  05E3  1D03               	btfss	3,2
  3682  05E4  2DE6               	goto	u2481
  3683  05E5  2DE7               	goto	u2480
  3684  05E6                     u2481:
  3685  05E6  2DF5               	goto	l2082
  3686  05E7                     u2480:
  3687  05E7                     l2076:
  3688  05E7  3000               	movlw	0
  3689  05E8  00A3               	movwf	___fladd@b+3
  3690  05E9  3000               	movlw	0
  3691  05EA  00A2               	movwf	___fladd@b+2
  3692  05EB  3000               	movlw	0
  3693  05EC  00A1               	movwf	___fladd@b+1
  3694  05ED  3000               	movlw	0
  3695  05EE  00A0               	movwf	___fladd@b
  3696  05EF                     l2078:
  3697  05EF  0832               	movf	___fladd@bexp,w
  3698  05F0  1D03               	btfss	3,2
  3699  05F1  2DF3               	goto	u2491
  3700  05F2  2DF4               	goto	u2490
  3701  05F3                     u2491:
  3702  05F3  2DF5               	goto	l2082
  3703  05F4                     u2490:
  3704  05F4                     l2080:
  3705  05F4  01B0               	clrf	___fladd@signs
  3706  05F5                     l2082:
  3707  05F5  1C32               	btfss	___fladd@bexp,0
  3708  05F6  2DF8               	goto	u2501
  3709  05F7  2DF9               	goto	u2500
  3710  05F8                     u2501:
  3711  05F8  2DFB               	goto	l2086
  3712  05F9                     u2500:
  3713  05F9                     l2084:
  3714  05F9  17A2               	bsf	___fladd@b+2,7
  3715  05FA  2DFF               	goto	l644
  3716  05FB                     l2086:
  3717  05FB  307F               	movlw	127
  3718  05FC  00A8               	movwf	??___fladd
  3719  05FD  0828               	movf	??___fladd,w
  3720  05FE  05A2               	andwf	___fladd@b+2,f
  3721  05FF                     l644:
  3722  05FF  0832               	movf	___fladd@bexp,w
  3723  0600  00A8               	movwf	??___fladd
  3724  0601  1003               	clrc
  3725  0602  0C28               	rrf	??___fladd,w
  3726  0603  00A9               	movwf	??___fladd+1
  3727  0604  0829               	movf	??___fladd+1,w
  3728  0605  00A3               	movwf	___fladd@b+3
  3729  0606                     l2088:
  3730  0606  1FB0               	btfss	___fladd@signs,7
  3731  0607  2E09               	goto	u2511
  3732  0608  2E0A               	goto	u2510
  3733  0609                     u2511:
  3734  0609  2E0B               	goto	l645
  3735  060A                     u2510:
  3736  060A                     l2090:
  3737  060A  17A3               	bsf	___fladd@b+3,7
  3738  060B                     l645:
  3739  060B                     l615:
  3740  060B  0008               	return
  3741  060C                     __end_of___fladd:
  3742                           
  3743                           	psect	text9
  3744  175F                     __ptext9:	
  3745 ;; *************** function ___flneg *****************
  3746 ;; Defined at:
  3747 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  f1              4    0[BANK0 ] unsigned char 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  4    0[BANK0 ] unsigned char 
  3754 ;; Registers used:
  3755 ;;		wreg
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       4       0       0       0
  3762 ;;      Locals:         0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0
  3764 ;;      Totals:         0       4       0       0       0
  3765 ;;Total ram usage:        4 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    1
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_ftoa
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function ___flneg
  3777  175F                     ___flneg:
  3778  175F                     l2174:	
  3779                           ;incstack = 0
  3780                           ; Regs used in ___flneg: [wreg]
  3781                           
  3782  175F  1283               	bcf	3,5	;RP0=0, select bank0
  3783  1760  1303               	bcf	3,6	;RP1=0, select bank0
  3784  1761  0823               	movf	___flneg@f1+3,w
  3785  1762  0422               	iorwf	___flneg@f1+2,w
  3786  1763  0421               	iorwf	___flneg@f1+1,w
  3787  1764  0420               	iorwf	___flneg@f1,w
  3788  1765  1903               	skipnz
  3789  1766  2F68               	goto	u2681
  3790  1767  2F69               	goto	u2680
  3791  1768                     u2681:
  3792  1768  2F6B               	goto	l2178
  3793  1769                     u2680:
  3794  1769                     l2176:
  3795  1769  3080               	movlw	128
  3796  176A  06A3               	xorwf	___flneg@f1+3,f
  3797  176B                     l2178:
  3798  176B                     l491:
  3799  176B  0008               	return
  3800  176C                     __end_of___flneg:
  3801                           
  3802                           	psect	text10
  3803  0B4D                     __ptext10:	
  3804 ;; *************** function ___flge *****************
  3805 ;; Defined at:
  3806 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  ff1             4    0[BANK0 ] unsigned char 
  3809 ;;  ff2             4    4[BANK0 ] unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;		None               void
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       8       0       0       0
  3822 ;;      Locals:         0       0       0       0       0
  3823 ;;      Temps:          0       4       0       0       0
  3824 ;;      Totals:         0      12       0       0       0
  3825 ;;Total ram usage:       12 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_ftoa
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function ___flge
  3837  0B4D                     ___flge:
  3838  0B4D                     l2154:	
  3839                           ;incstack = 0
  3840                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3841                           
  3842  0B4D  3000               	movlw	0
  3843  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  3844  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  3845  0B50  0520               	andwf	___flge@ff1,w
  3846  0B51  00A8               	movwf	??___flge
  3847  0B52  3000               	movlw	0
  3848  0B53  0521               	andwf	___flge@ff1+1,w
  3849  0B54  00A9               	movwf	??___flge+1
  3850  0B55  3080               	movlw	128
  3851  0B56  0522               	andwf	___flge@ff1+2,w
  3852  0B57  00AA               	movwf	??___flge+2
  3853  0B58  307F               	movlw	127
  3854  0B59  0523               	andwf	___flge@ff1+3,w
  3855  0B5A  00AB               	movwf	??___flge+3
  3856  0B5B  082B               	movf	??___flge+3,w
  3857  0B5C  042A               	iorwf	??___flge+2,w
  3858  0B5D  0429               	iorwf	??___flge+1,w
  3859  0B5E  0428               	iorwf	??___flge,w
  3860  0B5F  1D03               	skipz
  3861  0B60  2B62               	goto	u2611
  3862  0B61  2B63               	goto	u2610
  3863  0B62                     u2611:
  3864  0B62  2B6B               	goto	l483
  3865  0B63                     u2610:
  3866  0B63                     l2156:
  3867  0B63  3000               	movlw	0
  3868  0B64  00A3               	movwf	___flge@ff1+3
  3869  0B65  3000               	movlw	0
  3870  0B66  00A2               	movwf	___flge@ff1+2
  3871  0B67  3000               	movlw	0
  3872  0B68  00A1               	movwf	___flge@ff1+1
  3873  0B69  3000               	movlw	0
  3874  0B6A  00A0               	movwf	___flge@ff1
  3875  0B6B                     l483:
  3876  0B6B  3000               	movlw	0
  3877  0B6C  0524               	andwf	___flge@ff2,w
  3878  0B6D  00A8               	movwf	??___flge
  3879  0B6E  3000               	movlw	0
  3880  0B6F  0525               	andwf	___flge@ff2+1,w
  3881  0B70  00A9               	movwf	??___flge+1
  3882  0B71  3080               	movlw	128
  3883  0B72  0526               	andwf	___flge@ff2+2,w
  3884  0B73  00AA               	movwf	??___flge+2
  3885  0B74  307F               	movlw	127
  3886  0B75  0527               	andwf	___flge@ff2+3,w
  3887  0B76  00AB               	movwf	??___flge+3
  3888  0B77  082B               	movf	??___flge+3,w
  3889  0B78  042A               	iorwf	??___flge+2,w
  3890  0B79  0429               	iorwf	??___flge+1,w
  3891  0B7A  0428               	iorwf	??___flge,w
  3892  0B7B  1D03               	skipz
  3893  0B7C  2B7E               	goto	u2621
  3894  0B7D  2B7F               	goto	u2620
  3895  0B7E                     u2621:
  3896  0B7E  2B87               	goto	l2160
  3897  0B7F                     u2620:
  3898  0B7F                     l2158:
  3899  0B7F  3000               	movlw	0
  3900  0B80  00A7               	movwf	___flge@ff2+3
  3901  0B81  3000               	movlw	0
  3902  0B82  00A6               	movwf	___flge@ff2+2
  3903  0B83  3000               	movlw	0
  3904  0B84  00A5               	movwf	___flge@ff2+1
  3905  0B85  3000               	movlw	0
  3906  0B86  00A4               	movwf	___flge@ff2
  3907  0B87                     l2160:
  3908  0B87  1FA3               	btfss	___flge@ff1+3,7
  3909  0B88  2B8A               	goto	u2631
  3910  0B89  2B8B               	goto	u2630
  3911  0B8A                     u2631:
  3912  0B8A  2BAF               	goto	l2164
  3913  0B8B                     u2630:
  3914  0B8B                     l2162:
  3915  0B8B  3000               	movlw	0
  3916  0B8C  00A8               	movwf	??___flge
  3917  0B8D  3000               	movlw	0
  3918  0B8E  00A9               	movwf	??___flge+1
  3919  0B8F  3000               	movlw	0
  3920  0B90  00AA               	movwf	??___flge+2
  3921  0B91  3080               	movlw	128
  3922  0B92  00AB               	movwf	??___flge+3
  3923  0B93  0820               	movf	___flge@ff1,w
  3924  0B94  02A8               	subwf	??___flge,f
  3925  0B95  0821               	movf	___flge@ff1+1,w
  3926  0B96  1C03               	skipc
  3927  0B97  0F21               	incfsz	___flge@ff1+1,w
  3928  0B98  2B9A               	goto	u2641
  3929  0B99  2B9B               	goto	u2642
  3930  0B9A                     u2641:
  3931  0B9A  02A9               	subwf	??___flge+1,f
  3932  0B9B                     u2642:
  3933  0B9B  0822               	movf	___flge@ff1+2,w
  3934  0B9C  1C03               	skipc
  3935  0B9D  0F22               	incfsz	___flge@ff1+2,w
  3936  0B9E  2BA0               	goto	u2643
  3937  0B9F  2BA1               	goto	u2644
  3938  0BA0                     u2643:
  3939  0BA0  02AA               	subwf	??___flge+2,f
  3940  0BA1                     u2644:
  3941  0BA1  0823               	movf	___flge@ff1+3,w
  3942  0BA2  1C03               	skipc
  3943  0BA3  0F23               	incfsz	___flge@ff1+3,w
  3944  0BA4  2BA6               	goto	u2645
  3945  0BA5  2BA7               	goto	u2646
  3946  0BA6                     u2645:
  3947  0BA6  02AB               	subwf	??___flge+3,f
  3948  0BA7                     u2646:
  3949  0BA7  082B               	movf	??___flge+3,w
  3950  0BA8  00A3               	movwf	___flge@ff1+3
  3951  0BA9  082A               	movf	??___flge+2,w
  3952  0BAA  00A2               	movwf	___flge@ff1+2
  3953  0BAB  0829               	movf	??___flge+1,w
  3954  0BAC  00A1               	movwf	___flge@ff1+1
  3955  0BAD  0828               	movf	??___flge,w
  3956  0BAE  00A0               	movwf	___flge@ff1
  3957  0BAF                     l2164:
  3958  0BAF  1FA7               	btfss	___flge@ff2+3,7
  3959  0BB0  2BB2               	goto	u2651
  3960  0BB1  2BB3               	goto	u2650
  3961  0BB2                     u2651:
  3962  0BB2  2BD7               	goto	l486
  3963  0BB3                     u2650:
  3964  0BB3                     l2166:
  3965  0BB3  3000               	movlw	0
  3966  0BB4  00A8               	movwf	??___flge
  3967  0BB5  3000               	movlw	0
  3968  0BB6  00A9               	movwf	??___flge+1
  3969  0BB7  3000               	movlw	0
  3970  0BB8  00AA               	movwf	??___flge+2
  3971  0BB9  3080               	movlw	128
  3972  0BBA  00AB               	movwf	??___flge+3
  3973  0BBB  0824               	movf	___flge@ff2,w
  3974  0BBC  02A8               	subwf	??___flge,f
  3975  0BBD  0825               	movf	___flge@ff2+1,w
  3976  0BBE  1C03               	skipc
  3977  0BBF  0F25               	incfsz	___flge@ff2+1,w
  3978  0BC0  2BC2               	goto	u2661
  3979  0BC1  2BC3               	goto	u2662
  3980  0BC2                     u2661:
  3981  0BC2  02A9               	subwf	??___flge+1,f
  3982  0BC3                     u2662:
  3983  0BC3  0826               	movf	___flge@ff2+2,w
  3984  0BC4  1C03               	skipc
  3985  0BC5  0F26               	incfsz	___flge@ff2+2,w
  3986  0BC6  2BC8               	goto	u2663
  3987  0BC7  2BC9               	goto	u2664
  3988  0BC8                     u2663:
  3989  0BC8  02AA               	subwf	??___flge+2,f
  3990  0BC9                     u2664:
  3991  0BC9  0827               	movf	___flge@ff2+3,w
  3992  0BCA  1C03               	skipc
  3993  0BCB  0F27               	incfsz	___flge@ff2+3,w
  3994  0BCC  2BCE               	goto	u2665
  3995  0BCD  2BCF               	goto	u2666
  3996  0BCE                     u2665:
  3997  0BCE  02AB               	subwf	??___flge+3,f
  3998  0BCF                     u2666:
  3999  0BCF  082B               	movf	??___flge+3,w
  4000  0BD0  00A7               	movwf	___flge@ff2+3
  4001  0BD1  082A               	movf	??___flge+2,w
  4002  0BD2  00A6               	movwf	___flge@ff2+2
  4003  0BD3  0829               	movf	??___flge+1,w
  4004  0BD4  00A5               	movwf	___flge@ff2+1
  4005  0BD5  0828               	movf	??___flge,w
  4006  0BD6  00A4               	movwf	___flge@ff2
  4007  0BD7                     l486:
  4008  0BD7  3080               	movlw	128
  4009  0BD8  06A3               	xorwf	___flge@ff1+3,f
  4010  0BD9  3080               	movlw	128
  4011  0BDA  06A7               	xorwf	___flge@ff2+3,f
  4012  0BDB  0827               	movf	___flge@ff2+3,w
  4013  0BDC  0223               	subwf	___flge@ff1+3,w
  4014  0BDD  1D03               	skipz
  4015  0BDE  2BE9               	goto	u2675
  4016  0BDF  0826               	movf	___flge@ff2+2,w
  4017  0BE0  0222               	subwf	___flge@ff1+2,w
  4018  0BE1  1D03               	skipz
  4019  0BE2  2BE9               	goto	u2675
  4020  0BE3  0825               	movf	___flge@ff2+1,w
  4021  0BE4  0221               	subwf	___flge@ff1+1,w
  4022  0BE5  1D03               	skipz
  4023  0BE6  2BE9               	goto	u2675
  4024  0BE7  0824               	movf	___flge@ff2,w
  4025  0BE8  0220               	subwf	___flge@ff1,w
  4026  0BE9                     u2675:
  4027  0BE9  1803               	skipnc
  4028  0BEA  2BEC               	goto	u2671
  4029  0BEB  2BED               	goto	u2670
  4030  0BEC                     u2671:
  4031  0BEC  2BEF               	goto	l2170
  4032  0BED                     u2670:
  4033  0BED                     l2168:
  4034  0BED  1003               	clrc
  4035  0BEE  2BF0               	goto	l487
  4036  0BEF                     l2170:
  4037  0BEF  1403               	setc
  4038  0BF0                     l487:
  4039  0BF0  0008               	return
  4040  0BF1                     __end_of___flge:
  4041                           
  4042                           	psect	text11
  4043  0912                     __ptext11:	
  4044 ;; *************** function _UARTSendString *****************
  4045 ;; Defined at:
  4046 ;;		line 55 in file "UART.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  4049 ;;		 -> NULL(0), ftoa@buf(17), STR_2(2), STR_1(2), 
  4050 ;;  max_length      1    2[BANK0 ] const unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  i               2    6[BANK0 ] int 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4062 ;;      Params:         0       3       0       0       0
  4063 ;;      Locals:         0       2       0       0       0
  4064 ;;      Temps:          0       3       0       0       0
  4065 ;;      Totals:         0       8       0       0       0
  4066 ;;Total ram usage:        8 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    2
  4069 ;; This function calls:
  4070 ;;		_UARTSendChar
  4071 ;; This function is called by:
  4072 ;;		_main
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function _UARTSendString
  4078  0912                     _UARTSendString:
  4079  0912                     l2616:	
  4080                           ;incstack = 0
  4081                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4082                           
  4083                           
  4084                           ;UART.c: 56:     int i = 0;
  4085  0912  1283               	bcf	3,5	;RP0=0, select bank0
  4086  0913  1303               	bcf	3,6	;RP1=0, select bank0
  4087  0914  01A6               	clrf	UARTSendString@i
  4088  0915  01A7               	clrf	UARTSendString@i+1
  4089                           
  4090                           ;UART.c: 57:     for (i=0 ; i<max_length && str[i]!='\0' ; i++) {
  4091  0916  01A6               	clrf	UARTSendString@i
  4092  0917  01A7               	clrf	UARTSendString@i+1
  4093  0918  293D               	goto	l2622
  4094  0919                     l2618:
  4095                           
  4096                           ;UART.c: 58:         UARTSendChar(str[i]);
  4097  0919  0826               	movf	UARTSendString@i,w
  4098  091A  0720               	addwf	UARTSendString@str,w
  4099  091B  00A4               	movwf	??_UARTSendString+1
  4100  091C  0821               	movf	UARTSendString@str+1,w
  4101  091D  00A3               	movwf	??_UARTSendString
  4102  091E  1803               	skipnc
  4103  091F  0AA3               	incf	??_UARTSendString,f
  4104  0920  1FA6               	btfss	UARTSendString@i,7
  4105  0921  2923               	goto	u3560
  4106  0922  03A3               	decf	??_UARTSendString,f
  4107  0923                     u3560:
  4108  0923  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0924  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0925  0823               	movf	??_UARTSendString,w
  4111  0926  00A5               	movwf	??_UARTSendString+2
  4112  0927  0825               	movf	??_UARTSendString+2,w
  4113  0928  00FF               	movwf	btemp+1
  4114  0929  0824               	movf	??_UARTSendString+1,w
  4115  092A  0084               	movwf	4
  4116  092B  120A  158A  2000  120A  158A  	fcall	stringtab
  4117  0930  160A  118A  2739  120A  158A  	fcall	_UARTSendChar
  4118  0935                     l2620:
  4119                           
  4120                           ;UART.c: 59:     }
  4121  0935  3001               	movlw	1
  4122  0936  1283               	bcf	3,5	;RP0=0, select bank0
  4123  0937  1303               	bcf	3,6	;RP1=0, select bank0
  4124  0938  07A6               	addwf	UARTSendString@i,f
  4125  0939  1803               	skipnc
  4126  093A  0AA7               	incf	UARTSendString@i+1,f
  4127  093B  3000               	movlw	0
  4128  093C  07A7               	addwf	UARTSendString@i+1,f
  4129  093D                     l2622:
  4130  093D  0827               	movf	UARTSendString@i+1,w
  4131  093E  3A80               	xorlw	128
  4132  093F  00A3               	movwf	??_UARTSendString
  4133  0940  3080               	movlw	128
  4134  0941  0223               	subwf	??_UARTSendString,w
  4135  0942  1D03               	skipz
  4136  0943  2946               	goto	u3575
  4137  0944  0822               	movf	UARTSendString@max_length,w
  4138  0945  0226               	subwf	UARTSendString@i,w
  4139  0946                     u3575:
  4140  0946  1803               	skipnc
  4141  0947  2949               	goto	u3571
  4142  0948  294A               	goto	u3570
  4143  0949                     u3571:
  4144  0949  2968               	goto	l205
  4145  094A                     u3570:
  4146  094A                     l2624:
  4147  094A  1283               	bcf	3,5	;RP0=0, select bank0
  4148  094B  1303               	bcf	3,6	;RP1=0, select bank0
  4149  094C  0826               	movf	UARTSendString@i,w
  4150  094D  0720               	addwf	UARTSendString@str,w
  4151  094E  00A4               	movwf	??_UARTSendString+1
  4152  094F  0821               	movf	UARTSendString@str+1,w
  4153  0950  00A3               	movwf	??_UARTSendString
  4154  0951  1803               	skipnc
  4155  0952  0AA3               	incf	??_UARTSendString,f
  4156  0953  1FA6               	btfss	UARTSendString@i,7
  4157  0954  2956               	goto	u3580
  4158  0955  03A3               	decf	??_UARTSendString,f
  4159  0956                     u3580:
  4160  0956  1283               	bcf	3,5	;RP0=0, select bank0
  4161  0957  1303               	bcf	3,6	;RP1=0, select bank0
  4162  0958  0823               	movf	??_UARTSendString,w
  4163  0959  00A5               	movwf	??_UARTSendString+2
  4164  095A  0825               	movf	??_UARTSendString+2,w
  4165  095B  00FF               	movwf	btemp+1
  4166  095C  0824               	movf	??_UARTSendString+1,w
  4167  095D  0084               	movwf	4
  4168  095E  120A  158A  2000  120A  158A  	fcall	stringtab
  4169  0963  3A00               	xorlw	0
  4170  0964  1D03               	skipz
  4171  0965  2967               	goto	u3591
  4172  0966  2968               	goto	u3590
  4173  0967                     u3591:
  4174  0967  2919               	goto	l2618
  4175  0968                     u3590:
  4176  0968                     l205:
  4177  0968  0008               	return
  4178  0969                     __end_of_UARTSendString:
  4179                           
  4180                           	psect	text12
  4181  1739                     __ptext12:	
  4182 ;; *************** function _UARTSendChar *****************
  4183 ;; Defined at:
  4184 ;;		line 45 in file "UART.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  c               1    wreg     const unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  c               1    6[COMMON] const unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4198 ;;      Params:         0       0       0       0       0
  4199 ;;      Locals:         1       0       0       0       0
  4200 ;;      Temps:          0       0       0       0       0
  4201 ;;      Totals:         1       0       0       0       0
  4202 ;;Total ram usage:        1 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    1
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;;		_UARTSendString
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           
  4214                           ;psect for function _UARTSendChar
  4215  1739                     _UARTSendChar:
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _UARTSendChar: [wreg]
  4219                           ;UARTSendChar@c stored from wreg
  4220  1739  00F6               	movwf	UARTSendChar@c
  4221  173A                     l2118:
  4222  173A                     l194:	
  4223                           ;UART.c: 46:     while (TXSTAbits.TRMT == 0);
  4224                           
  4225  173A  1683               	bsf	3,5	;RP0=1, select bank1
  4226  173B  1303               	bcf	3,6	;RP1=0, select bank1
  4227  173C  1C98               	btfss	24,1	;volatile
  4228  173D  2F3F               	goto	u2571
  4229  173E  2F40               	goto	u2570
  4230  173F                     u2571:
  4231  173F  2F3A               	goto	l194
  4232  1740                     u2570:
  4233  1740                     l2120:
  4234                           
  4235                           ;UART.c: 47:     TXREG = c;
  4236  1740  0876               	movf	UARTSendChar@c,w
  4237  1741  1283               	bcf	3,5	;RP0=0, select bank0
  4238  1742  1303               	bcf	3,6	;RP1=0, select bank0
  4239  1743  0099               	movwf	25	;volatile
  4240  1744                     l197:
  4241  1744  0008               	return
  4242  1745                     __end_of_UARTSendChar:
  4243                           
  4244                           	psect	text13
  4245  09D1                     __ptext13:	
  4246 ;; *************** function _UARTInit *****************
  4247 ;; Defined at:
  4248 ;;		line 14 in file "UART.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  baud_rate       4   13[BANK0 ] const unsigned long 
  4251 ;;  BRGH            1   17[BANK0 ] const unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4263 ;;      Params:         0       5       0       0       0
  4264 ;;      Locals:         0       0       0       0       0
  4265 ;;      Temps:          0       4       0       0       0
  4266 ;;      Totals:         0       9       0       0       0
  4267 ;;Total ram usage:        9 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		___lldiv
  4272 ;; This function is called by:
  4273 ;;		_main
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function _UARTInit
  4279  09D1                     _UARTInit:
  4280  09D1                     l2516:	
  4281                           ;incstack = 0
  4282                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
  4283                           
  4284                           
  4285                           ;UART.c: 16:     if (BRGH == 0) {
  4286  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  4287  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  4288  09D3  0831               	movf	UARTInit@BRGH,w
  4289  09D4  1D03               	btfss	3,2
  4290  09D5  29D7               	goto	u3491
  4291  09D6  29D8               	goto	u3490
  4292  09D7                     u3491:
  4293  09D7  2A07               	goto	l2522
  4294  09D8                     u3490:
  4295  09D8                     l2518:
  4296                           
  4297                           ;UART.c: 17:         SPBRG = 4000000/(64*baud_rate) - 1;
  4298  09D8  082D               	movf	UARTInit@baud_rate,w
  4299  09D9  00B2               	movwf	??_UARTInit
  4300  09DA  082E               	movf	UARTInit@baud_rate+1,w
  4301  09DB  00B3               	movwf	??_UARTInit+1
  4302  09DC  082F               	movf	UARTInit@baud_rate+2,w
  4303  09DD  00B4               	movwf	??_UARTInit+2
  4304  09DE  0830               	movf	UARTInit@baud_rate+3,w
  4305  09DF  00B5               	movwf	??_UARTInit+3
  4306  09E0  3006               	movlw	6
  4307  09E1                     u3505:
  4308  09E1  1003               	clrc
  4309  09E2  0DB2               	rlf	??_UARTInit,f
  4310  09E3  0DB3               	rlf	??_UARTInit+1,f
  4311  09E4  0DB4               	rlf	??_UARTInit+2,f
  4312  09E5  0DB5               	rlf	??_UARTInit+3,f
  4313  09E6                     u3500:
  4314  09E6  3EFF               	addlw	-1
  4315  09E7  1D03               	skipz
  4316  09E8  29E1               	goto	u3505
  4317  09E9  0835               	movf	??_UARTInit+3,w
  4318  09EA  00A3               	movwf	___lldiv@divisor+3
  4319  09EB  0834               	movf	??_UARTInit+2,w
  4320  09EC  00A2               	movwf	___lldiv@divisor+2
  4321  09ED  0833               	movf	??_UARTInit+1,w
  4322  09EE  00A1               	movwf	___lldiv@divisor+1
  4323  09EF  0832               	movf	??_UARTInit,w
  4324  09F0  00A0               	movwf	___lldiv@divisor
  4325  09F1  3000               	movlw	0
  4326  09F2  00A7               	movwf	___lldiv@dividend+3
  4327  09F3  303D               	movlw	61
  4328  09F4  00A6               	movwf	___lldiv@dividend+2
  4329  09F5  3009               	movlw	9
  4330  09F6  00A5               	movwf	___lldiv@dividend+1
  4331  09F7  3000               	movlw	0
  4332  09F8  00A4               	movwf	___lldiv@dividend
  4333  09F9  120A  158A  2169  120A  158A  	fcall	___lldiv
  4334  09FE  1283               	bcf	3,5	;RP0=0, select bank0
  4335  09FF  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0A00  0820               	movf	?___lldiv,w
  4337  0A01  3EFF               	addlw	255
  4338  0A02  1683               	bsf	3,5	;RP0=1, select bank1
  4339  0A03  1303               	bcf	3,6	;RP1=0, select bank1
  4340  0A04  0099               	movwf	25	;volatile
  4341  0A05                     l2520:
  4342                           
  4343                           ;UART.c: 18:         TXSTAbits.BRGH = 0;
  4344  0A05  1118               	bcf	24,2	;volatile
  4345                           
  4346                           ;UART.c: 19:     } else {
  4347  0A06  2A35               	goto	l2526
  4348  0A07                     l2522:
  4349                           
  4350                           ;UART.c: 20:         SPBRG = 4000000/(16*baud_rate) - 1;
  4351  0A07  082D               	movf	UARTInit@baud_rate,w
  4352  0A08  00B2               	movwf	??_UARTInit
  4353  0A09  082E               	movf	UARTInit@baud_rate+1,w
  4354  0A0A  00B3               	movwf	??_UARTInit+1
  4355  0A0B  082F               	movf	UARTInit@baud_rate+2,w
  4356  0A0C  00B4               	movwf	??_UARTInit+2
  4357  0A0D  0830               	movf	UARTInit@baud_rate+3,w
  4358  0A0E  00B5               	movwf	??_UARTInit+3
  4359  0A0F  3004               	movlw	4
  4360  0A10                     u3515:
  4361  0A10  1003               	clrc
  4362  0A11  0DB2               	rlf	??_UARTInit,f
  4363  0A12  0DB3               	rlf	??_UARTInit+1,f
  4364  0A13  0DB4               	rlf	??_UARTInit+2,f
  4365  0A14  0DB5               	rlf	??_UARTInit+3,f
  4366  0A15                     u3510:
  4367  0A15  3EFF               	addlw	-1
  4368  0A16  1D03               	skipz
  4369  0A17  2A10               	goto	u3515
  4370  0A18  0835               	movf	??_UARTInit+3,w
  4371  0A19  00A3               	movwf	___lldiv@divisor+3
  4372  0A1A  0834               	movf	??_UARTInit+2,w
  4373  0A1B  00A2               	movwf	___lldiv@divisor+2
  4374  0A1C  0833               	movf	??_UARTInit+1,w
  4375  0A1D  00A1               	movwf	___lldiv@divisor+1
  4376  0A1E  0832               	movf	??_UARTInit,w
  4377  0A1F  00A0               	movwf	___lldiv@divisor
  4378  0A20  3000               	movlw	0
  4379  0A21  00A7               	movwf	___lldiv@dividend+3
  4380  0A22  303D               	movlw	61
  4381  0A23  00A6               	movwf	___lldiv@dividend+2
  4382  0A24  3009               	movlw	9
  4383  0A25  00A5               	movwf	___lldiv@dividend+1
  4384  0A26  3000               	movlw	0
  4385  0A27  00A4               	movwf	___lldiv@dividend
  4386  0A28  120A  158A  2169  120A  158A  	fcall	___lldiv
  4387  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0A2F  0820               	movf	?___lldiv,w
  4390  0A30  3EFF               	addlw	255
  4391  0A31  1683               	bsf	3,5	;RP0=1, select bank1
  4392  0A32  1303               	bcf	3,6	;RP1=0, select bank1
  4393  0A33  0099               	movwf	25	;volatile
  4394  0A34                     l2524:
  4395                           
  4396                           ;UART.c: 21:         TXSTAbits.BRGH = 1;
  4397  0A34  1518               	bsf	24,2	;volatile
  4398  0A35                     l2526:
  4399                           
  4400                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  4401  0A35  1318               	bcf	24,6	;volatile
  4402  0A36                     l2528:
  4403                           
  4404                           ;UART.c: 26:     TXSTAbits.TXEN = 1;
  4405  0A36  1698               	bsf	24,5	;volatile
  4406  0A37                     l2530:
  4407                           
  4408                           ;UART.c: 27:     TXSTAbits.SYNC = 0;
  4409  0A37  1218               	bcf	24,4	;volatile
  4410  0A38                     l2532:
  4411                           
  4412                           ;UART.c: 30:     RCSTAbits.SPEN = 1;
  4413  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  4414  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  4415  0A3A  1798               	bsf	24,7	;volatile
  4416  0A3B                     l2534:
  4417                           
  4418                           ;UART.c: 31:     RCSTAbits.RX9 = 0;
  4419  0A3B  1318               	bcf	24,6	;volatile
  4420  0A3C                     l2536:
  4421                           
  4422                           ;UART.c: 32:     RCSTAbits.CREN = 1;
  4423  0A3C  1618               	bsf	24,4	;volatile
  4424  0A3D                     l2538:
  4425                           
  4426                           ;UART.c: 33:     RCSTAbits.FERR = 0;
  4427  0A3D  1118               	bcf	24,2	;volatile
  4428  0A3E                     l2540:
  4429                           
  4430                           ;UART.c: 34:     RCSTAbits.OERR = 0;
  4431  0A3E  1098               	bcf	24,1	;volatile
  4432  0A3F                     l2542:
  4433                           
  4434                           ;UART.c: 37:     TRISCbits.TRISC7 = 1;
  4435  0A3F  1683               	bsf	3,5	;RP0=1, select bank1
  4436  0A40  1303               	bcf	3,6	;RP1=0, select bank1
  4437  0A41  1787               	bsf	7,7	;volatile
  4438  0A42                     l2544:
  4439                           
  4440                           ;UART.c: 38:     TRISCbits.TRISC6 = 0;
  4441  0A42  1307               	bcf	7,6	;volatile
  4442  0A43                     l191:
  4443  0A43  0008               	return
  4444  0A44                     __end_of_UARTInit:
  4445                           
  4446                           	psect	text14
  4447  0969                     __ptext14:	
  4448 ;; *************** function ___lldiv *****************
  4449 ;; Defined at:
  4450 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  divisor         4    0[BANK0 ] unsigned long 
  4453 ;;  dividend        4    4[BANK0 ] unsigned long 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;  quotient        4    8[BANK0 ] unsigned long 
  4456 ;;  counter         1   12[BANK0 ] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  4    0[BANK0 ] unsigned long 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4466 ;;      Params:         0       8       0       0       0
  4467 ;;      Locals:         0       5       0       0       0
  4468 ;;      Temps:          1       0       0       0       0
  4469 ;;      Totals:         1      13       0       0       0
  4470 ;;Total ram usage:       14 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    1
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_UARTInit
  4477 ;;		_sprintf
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function ___lldiv
  4483  0969                     ___lldiv:
  4484  0969                     l1854:	
  4485                           ;incstack = 0
  4486                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4487                           
  4488  0969  3000               	movlw	0
  4489  096A  1283               	bcf	3,5	;RP0=0, select bank0
  4490  096B  1303               	bcf	3,6	;RP1=0, select bank0
  4491  096C  00AB               	movwf	___lldiv@quotient+3
  4492  096D  3000               	movlw	0
  4493  096E  00AA               	movwf	___lldiv@quotient+2
  4494  096F  3000               	movlw	0
  4495  0970  00A9               	movwf	___lldiv@quotient+1
  4496  0971  3000               	movlw	0
  4497  0972  00A8               	movwf	___lldiv@quotient
  4498  0973  0823               	movf	___lldiv@divisor+3,w
  4499  0974  0422               	iorwf	___lldiv@divisor+2,w
  4500  0975  0421               	iorwf	___lldiv@divisor+1,w
  4501  0976  0420               	iorwf	___lldiv@divisor,w
  4502  0977  1903               	skipnz
  4503  0978  297A               	goto	u1931
  4504  0979  297B               	goto	u1930
  4505  097A                     u1931:
  4506  097A  29C8               	goto	l1874
  4507  097B                     u1930:
  4508  097B                     l1856:
  4509  097B  01AC               	clrf	___lldiv@counter
  4510  097C  0AAC               	incf	___lldiv@counter,f
  4511  097D  298B               	goto	l1860
  4512  097E                     l1858:
  4513  097E  3001               	movlw	1
  4514  097F  00F6               	movwf	??___lldiv
  4515  0980                     u1945:
  4516  0980  1003               	clrc
  4517  0981  0DA0               	rlf	___lldiv@divisor,f
  4518  0982  0DA1               	rlf	___lldiv@divisor+1,f
  4519  0983  0DA2               	rlf	___lldiv@divisor+2,f
  4520  0984  0DA3               	rlf	___lldiv@divisor+3,f
  4521  0985  0BF6               	decfsz	??___lldiv,f
  4522  0986  2980               	goto	u1945
  4523  0987  3001               	movlw	1
  4524  0988  00F6               	movwf	??___lldiv
  4525  0989  0876               	movf	??___lldiv,w
  4526  098A  07AC               	addwf	___lldiv@counter,f
  4527  098B                     l1860:
  4528  098B  1FA3               	btfss	___lldiv@divisor+3,7
  4529  098C  298E               	goto	u1951
  4530  098D  298F               	goto	u1950
  4531  098E                     u1951:
  4532  098E  297E               	goto	l1858
  4533  098F                     u1950:
  4534  098F                     l1862:
  4535  098F  3001               	movlw	1
  4536  0990  00F6               	movwf	??___lldiv
  4537  0991                     u1965:
  4538  0991  1003               	clrc
  4539  0992  0DA8               	rlf	___lldiv@quotient,f
  4540  0993  0DA9               	rlf	___lldiv@quotient+1,f
  4541  0994  0DAA               	rlf	___lldiv@quotient+2,f
  4542  0995  0DAB               	rlf	___lldiv@quotient+3,f
  4543  0996  0BF6               	decfsz	??___lldiv,f
  4544  0997  2991               	goto	u1965
  4545  0998                     l1864:
  4546  0998  0823               	movf	___lldiv@divisor+3,w
  4547  0999  0227               	subwf	___lldiv@dividend+3,w
  4548  099A  1D03               	skipz
  4549  099B  29A6               	goto	u1975
  4550  099C  0822               	movf	___lldiv@divisor+2,w
  4551  099D  0226               	subwf	___lldiv@dividend+2,w
  4552  099E  1D03               	skipz
  4553  099F  29A6               	goto	u1975
  4554  09A0  0821               	movf	___lldiv@divisor+1,w
  4555  09A1  0225               	subwf	___lldiv@dividend+1,w
  4556  09A2  1D03               	skipz
  4557  09A3  29A6               	goto	u1975
  4558  09A4  0820               	movf	___lldiv@divisor,w
  4559  09A5  0224               	subwf	___lldiv@dividend,w
  4560  09A6                     u1975:
  4561  09A6  1C03               	skipc
  4562  09A7  29A9               	goto	u1971
  4563  09A8  29AA               	goto	u1970
  4564  09A9                     u1971:
  4565  09A9  29B9               	goto	l1870
  4566  09AA                     u1970:
  4567  09AA                     l1866:
  4568  09AA  0820               	movf	___lldiv@divisor,w
  4569  09AB  02A4               	subwf	___lldiv@dividend,f
  4570  09AC  0821               	movf	___lldiv@divisor+1,w
  4571  09AD  1C03               	skipc
  4572  09AE  0F21               	incfsz	___lldiv@divisor+1,w
  4573  09AF  02A5               	subwf	___lldiv@dividend+1,f
  4574  09B0  0822               	movf	___lldiv@divisor+2,w
  4575  09B1  1C03               	skipc
  4576  09B2  0F22               	incfsz	___lldiv@divisor+2,w
  4577  09B3  02A6               	subwf	___lldiv@dividend+2,f
  4578  09B4  0823               	movf	___lldiv@divisor+3,w
  4579  09B5  1C03               	skipc
  4580  09B6  0F23               	incfsz	___lldiv@divisor+3,w
  4581  09B7  02A7               	subwf	___lldiv@dividend+3,f
  4582  09B8                     l1868:
  4583  09B8  1428               	bsf	___lldiv@quotient,0
  4584  09B9                     l1870:
  4585  09B9  3001               	movlw	1
  4586  09BA                     u1985:
  4587  09BA  1003               	clrc
  4588  09BB  0CA3               	rrf	___lldiv@divisor+3,f
  4589  09BC  0CA2               	rrf	___lldiv@divisor+2,f
  4590  09BD  0CA1               	rrf	___lldiv@divisor+1,f
  4591  09BE  0CA0               	rrf	___lldiv@divisor,f
  4592  09BF  3EFF               	addlw	-1
  4593  09C0  1D03               	skipz
  4594  09C1  29BA               	goto	u1985
  4595  09C2                     l1872:
  4596  09C2  3001               	movlw	1
  4597  09C3  02AC               	subwf	___lldiv@counter,f
  4598  09C4  1D03               	btfss	3,2
  4599  09C5  29C7               	goto	u1991
  4600  09C6  29C8               	goto	u1990
  4601  09C7                     u1991:
  4602  09C7  298F               	goto	l1862
  4603  09C8                     u1990:
  4604  09C8                     l1874:
  4605  09C8  082B               	movf	___lldiv@quotient+3,w
  4606  09C9  00A3               	movwf	?___lldiv+3
  4607  09CA  082A               	movf	___lldiv@quotient+2,w
  4608  09CB  00A2               	movwf	?___lldiv+2
  4609  09CC  0829               	movf	___lldiv@quotient+1,w
  4610  09CD  00A1               	movwf	?___lldiv+1
  4611  09CE  0828               	movf	___lldiv@quotient,w
  4612  09CF  00A0               	movwf	?___lldiv
  4613  09D0                     l345:
  4614  09D0  0008               	return
  4615  09D1                     __end_of___lldiv:
  4616                           
  4617                           	psect	text15
  4618  060C                     __ptext15:	
  4619 ;; *************** function _I2C_Read_MPU *****************
  4620 ;; Defined at:
  4621 ;;		line 159 in file "main.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  data_send       1    wreg     PTR float 
  4624 ;;		 -> valor_arreglado(12), 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  data_send       1   58[BANK0 ] PTR float 
  4627 ;;		 -> valor_arreglado(12), 
  4628 ;;  Addr            2   56[BANK0 ] int 
  4629 ;;  temp            6   44[BANK0 ] unsigned char [6]
  4630 ;;  valor_origin    6   50[BANK0 ] int [3]
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      void 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4640 ;;      Params:         0       0       0       0       0
  4641 ;;      Locals:         0      15       0       0       0
  4642 ;;      Temps:          0       4       0       0       0
  4643 ;;      Totals:         0      19       0       0       0
  4644 ;;Total ram usage:       19 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    4
  4647 ;; This function calls:
  4648 ;;		_I2C_Master_RepeatedStart
  4649 ;;		_I2C_Master_Stop
  4650 ;;		_I2C_Master_Write
  4651 ;;		_I2C_Read
  4652 ;;		_I2C_Start
  4653 ;;		___flmul
  4654 ;;		___xxtofl
  4655 ;; This function is called by:
  4656 ;;		_main
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _I2C_Read_MPU
  4662  060C                     _I2C_Read_MPU:
  4663                           
  4664                           ;incstack = 0
  4665                           ; Regs used in _I2C_Read_MPU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4666                           ;I2C_Read_MPU@data_send stored from wreg
  4667  060C  1283               	bcf	3,5	;RP0=0, select bank0
  4668  060D  1303               	bcf	3,6	;RP1=0, select bank0
  4669  060E  00DA               	movwf	I2C_Read_MPU@data_send
  4670  060F                     l2560:
  4671                           
  4672                           ;main.c: 160:     char temp[6];;main.c: 161:     int valor_original[3];;main.c: 163:    
      +                           I2C_Start(0xD0);
  4673  060F  30D0               	movlw	208
  4674  0610  160A  118A  277C  120A  118A  	fcall	_I2C_Start
  4675  0615                     l76:	
  4676                           ;main.c: 164:     while (SSPCON2bits.ACKSTAT);
  4677                           
  4678  0615  1683               	bsf	3,5	;RP0=1, select bank1
  4679  0616  1303               	bcf	3,6	;RP1=0, select bank1
  4680  0617  1B11               	btfsc	17,6	;volatile
  4681  0618  2E1A               	goto	u3521
  4682  0619  2E1B               	goto	u3520
  4683  061A                     u3521:
  4684  061A  2E15               	goto	l76
  4685  061B                     u3520:
  4686  061B                     l2562:
  4687                           
  4688                           ;main.c: 165:     I2C_Master_Write(0x3B);
  4689  061B  303B               	movlw	59
  4690  061C  160A  118A  276C  120A  118A  	fcall	_I2C_Master_Write
  4691  0621                     l79:	
  4692                           ;main.c: 166:     while (SSPCON2bits.ACKSTAT);
  4693                           
  4694  0621  1683               	bsf	3,5	;RP0=1, select bank1
  4695  0622  1303               	bcf	3,6	;RP1=0, select bank1
  4696  0623  1B11               	btfsc	17,6	;volatile
  4697  0624  2E26               	goto	u3531
  4698  0625  2E27               	goto	u3530
  4699  0626                     u3531:
  4700  0626  2E21               	goto	l79
  4701  0627                     u3530:
  4702  0627                     l2564:
  4703                           
  4704                           ;main.c: 167:     I2C_Master_RepeatedStart();
  4705  0627  160A  118A  271E  120A  118A  	fcall	_I2C_Master_RepeatedStart
  4706                           
  4707                           ;main.c: 168:     I2C_Master_Write(0xD1);
  4708  062C  30D1               	movlw	209
  4709  062D  160A  118A  276C  120A  118A  	fcall	_I2C_Master_Write
  4710  0632                     l2566:
  4711                           
  4712                           ;main.c: 169:     for (int Addr = 0; Addr < 5; Addr++) temp[Addr] = I2C_Read(0);
  4713  0632  1283               	bcf	3,5	;RP0=0, select bank0
  4714  0633  1303               	bcf	3,6	;RP1=0, select bank0
  4715  0634  01D8               	clrf	I2C_Read_MPU@Addr
  4716  0635  01D9               	clrf	I2C_Read_MPU@Addr+1
  4717  0636                     l2572:
  4718  0636  3000               	movlw	0
  4719  0637  120A  158A  2059  120A  118A  	fcall	_I2C_Read
  4720  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4721  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4722  063E  00C8               	movwf	??_I2C_Read_MPU
  4723  063F  0858               	movf	I2C_Read_MPU@Addr,w
  4724  0640  3E4C               	addlw	(low (I2C_Read_MPU@temp| 0))& (0+255)
  4725  0641  0084               	movwf	4
  4726  0642  0848               	movf	??_I2C_Read_MPU,w
  4727  0643  1383               	bcf	3,7	;select IRP bank0
  4728  0644  0080               	movwf	0
  4729  0645                     l2574:
  4730  0645  3001               	movlw	1
  4731  0646  07D8               	addwf	I2C_Read_MPU@Addr,f
  4732  0647  1803               	skipnc
  4733  0648  0AD9               	incf	I2C_Read_MPU@Addr+1,f
  4734  0649  3000               	movlw	0
  4735  064A  07D9               	addwf	I2C_Read_MPU@Addr+1,f
  4736  064B                     l2576:
  4737  064B  0859               	movf	I2C_Read_MPU@Addr+1,w
  4738  064C  3A80               	xorlw	128
  4739  064D  00FF               	movwf	btemp+1
  4740  064E  3080               	movlw	128
  4741  064F  027F               	subwf	btemp+1,w
  4742  0650  1D03               	skipz
  4743  0651  2E54               	goto	u3545
  4744  0652  3005               	movlw	5
  4745  0653  0258               	subwf	I2C_Read_MPU@Addr,w
  4746  0654                     u3545:
  4747  0654  1C03               	skipc
  4748  0655  2E57               	goto	u3541
  4749  0656  2E58               	goto	u3540
  4750  0657                     u3541:
  4751  0657  2E36               	goto	l2572
  4752  0658                     u3540:
  4753  0658                     l2578:
  4754                           
  4755                           ;main.c: 170:     temp[5] = I2C_Read(1);
  4756  0658  3001               	movlw	1
  4757  0659  120A  158A  2059  120A  118A  	fcall	_I2C_Read
  4758  065E  1283               	bcf	3,5	;RP0=0, select bank0
  4759  065F  1303               	bcf	3,6	;RP1=0, select bank0
  4760  0660  00C8               	movwf	??_I2C_Read_MPU
  4761  0661  0848               	movf	??_I2C_Read_MPU,w
  4762  0662  00D1               	movwf	I2C_Read_MPU@temp+5
  4763                           
  4764                           ;main.c: 171:     I2C_Master_Stop();
  4765  0663  160A  118A  2715  120A  118A  	fcall	_I2C_Master_Stop
  4766  0668                     l2580:
  4767                           
  4768                           ;main.c: 173:     valor_original[0] = ((int) temp[0] << 8) | ((int) temp[1]);
  4769  0668  1283               	bcf	3,5	;RP0=0, select bank0
  4770  0669  1303               	bcf	3,6	;RP1=0, select bank0
  4771  066A  084D               	movf	I2C_Read_MPU@temp+1,w
  4772  066B  00C8               	movwf	??_I2C_Read_MPU
  4773  066C  01C9               	clrf	??_I2C_Read_MPU+1
  4774  066D  084C               	movf	I2C_Read_MPU@temp,w
  4775  066E  00CA               	movwf	??_I2C_Read_MPU+2
  4776  066F  01CB               	clrf	??_I2C_Read_MPU+3
  4777  0670  084A               	movf	??_I2C_Read_MPU+2,w
  4778  0671  00CB               	movwf	??_I2C_Read_MPU+3
  4779  0672  01CA               	clrf	??_I2C_Read_MPU+2
  4780  0673  0848               	movf	??_I2C_Read_MPU,w
  4781  0674  044A               	iorwf	??_I2C_Read_MPU+2,w
  4782  0675  00D2               	movwf	I2C_Read_MPU@valor_original
  4783  0676  0849               	movf	??_I2C_Read_MPU+1,w
  4784  0677  044B               	iorwf	??_I2C_Read_MPU+3,w
  4785  0678  00D3               	movwf	I2C_Read_MPU@valor_original+1
  4786  0679                     l2582:
  4787                           
  4788                           ;main.c: 174:     valor_original[1] = ((int) temp[2] << 8) | ((int) temp[3]);
  4789  0679  084F               	movf	I2C_Read_MPU@temp+3,w
  4790  067A  00C8               	movwf	??_I2C_Read_MPU
  4791  067B  01C9               	clrf	??_I2C_Read_MPU+1
  4792  067C  084E               	movf	I2C_Read_MPU@temp+2,w
  4793  067D  00CA               	movwf	??_I2C_Read_MPU+2
  4794  067E  01CB               	clrf	??_I2C_Read_MPU+3
  4795  067F  084A               	movf	??_I2C_Read_MPU+2,w
  4796  0680  00CB               	movwf	??_I2C_Read_MPU+3
  4797  0681  01CA               	clrf	??_I2C_Read_MPU+2
  4798  0682  0848               	movf	??_I2C_Read_MPU,w
  4799  0683  044A               	iorwf	??_I2C_Read_MPU+2,w
  4800  0684  00D4               	movwf	I2C_Read_MPU@valor_original+2
  4801  0685  0849               	movf	??_I2C_Read_MPU+1,w
  4802  0686  044B               	iorwf	??_I2C_Read_MPU+3,w
  4803  0687  00D5               	movwf	I2C_Read_MPU@valor_original+3
  4804  0688                     l2584:
  4805                           
  4806                           ;main.c: 175:     valor_original[2] = ((int) temp[4] << 8) | ((int) temp[5]);
  4807  0688  0851               	movf	I2C_Read_MPU@temp+5,w
  4808  0689  00C8               	movwf	??_I2C_Read_MPU
  4809  068A  01C9               	clrf	??_I2C_Read_MPU+1
  4810  068B  0850               	movf	I2C_Read_MPU@temp+4,w
  4811  068C  00CA               	movwf	??_I2C_Read_MPU+2
  4812  068D  01CB               	clrf	??_I2C_Read_MPU+3
  4813  068E  084A               	movf	??_I2C_Read_MPU+2,w
  4814  068F  00CB               	movwf	??_I2C_Read_MPU+3
  4815  0690  01CA               	clrf	??_I2C_Read_MPU+2
  4816  0691  0848               	movf	??_I2C_Read_MPU,w
  4817  0692  044A               	iorwf	??_I2C_Read_MPU+2,w
  4818  0693  00D6               	movwf	I2C_Read_MPU@valor_original+4
  4819  0694  0849               	movf	??_I2C_Read_MPU+1,w
  4820  0695  044B               	iorwf	??_I2C_Read_MPU+3,w
  4821  0696  00D7               	movwf	I2C_Read_MPU@valor_original+5
  4822  0697                     l2586:
  4823                           
  4824                           ;main.c: 181:     data_send[0] = ((float) valor_original[0]) * 0.0005982;
  4825  0697  303A               	movlw	58
  4826  0698  00B1               	movwf	___flmul@b+3
  4827  0699  301C               	movlw	28
  4828  069A  00B0               	movwf	___flmul@b+2
  4829  069B  30D0               	movlw	208
  4830  069C  00AF               	movwf	___flmul@b+1
  4831  069D  3086               	movlw	134
  4832  069E  00AE               	movwf	___flmul@b
  4833  069F  0852               	movf	I2C_Read_MPU@valor_original,w
  4834  06A0  00A0               	movwf	___xxtofl@val
  4835  06A1  0853               	movf	I2C_Read_MPU@valor_original+1,w
  4836  06A2  00A1               	movwf	___xxtofl@val+1
  4837  06A3  3000               	movlw	0
  4838  06A4  1BA1               	btfsc	___xxtofl@val+1,7
  4839  06A5  30FF               	movlw	255
  4840  06A6  00A2               	movwf	___xxtofl@val+2
  4841  06A7  00A3               	movwf	___xxtofl@val+3
  4842  06A8  3001               	movlw	1
  4843  06A9  120A  118A  273C  120A  118A  	fcall	___xxtofl
  4844  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  4845  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  4846  06B0  0823               	movf	?___xxtofl+3,w
  4847  06B1  00B5               	movwf	___flmul@a+3
  4848  06B2  0822               	movf	?___xxtofl+2,w
  4849  06B3  00B4               	movwf	___flmul@a+2
  4850  06B4  0821               	movf	?___xxtofl+1,w
  4851  06B5  00B3               	movwf	___flmul@a+1
  4852  06B6  0820               	movf	?___xxtofl,w
  4853  06B7  00B2               	movwf	___flmul@a
  4854  06B8  120A  118A  2023  120A  118A  	fcall	___flmul
  4855  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  4856  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  4857  06BF  085A               	movf	I2C_Read_MPU@data_send,w
  4858  06C0  0084               	movwf	4
  4859  06C1  082E               	movf	?___flmul,w
  4860  06C2  1383               	bcf	3,7	;select IRP bank0
  4861  06C3  0080               	movwf	0
  4862  06C4  0A84               	incf	4,f
  4863  06C5  082F               	movf	?___flmul+1,w
  4864  06C6  0080               	movwf	0
  4865  06C7  0A84               	incf	4,f
  4866  06C8  0830               	movf	?___flmul+2,w
  4867  06C9  0080               	movwf	0
  4868  06CA  0A84               	incf	4,f
  4869  06CB  0831               	movf	?___flmul+3,w
  4870  06CC  0080               	movwf	0
  4871  06CD                     l2588:
  4872                           
  4873                           ;main.c: 182:     data_send[1] = ((float) valor_original[1]) * 0.0005982;
  4874  06CD  303A               	movlw	58
  4875  06CE  00B1               	movwf	___flmul@b+3
  4876  06CF  301C               	movlw	28
  4877  06D0  00B0               	movwf	___flmul@b+2
  4878  06D1  30D0               	movlw	208
  4879  06D2  00AF               	movwf	___flmul@b+1
  4880  06D3  3086               	movlw	134
  4881  06D4  00AE               	movwf	___flmul@b
  4882  06D5  0854               	movf	I2C_Read_MPU@valor_original+2,w
  4883  06D6  00A0               	movwf	___xxtofl@val
  4884  06D7  0855               	movf	I2C_Read_MPU@valor_original+3,w
  4885  06D8  00A1               	movwf	___xxtofl@val+1
  4886  06D9  3000               	movlw	0
  4887  06DA  1BA1               	btfsc	___xxtofl@val+1,7
  4888  06DB  30FF               	movlw	255
  4889  06DC  00A2               	movwf	___xxtofl@val+2
  4890  06DD  00A3               	movwf	___xxtofl@val+3
  4891  06DE  3001               	movlw	1
  4892  06DF  120A  118A  273C  120A  118A  	fcall	___xxtofl
  4893  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4894  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4895  06E6  0823               	movf	?___xxtofl+3,w
  4896  06E7  00B5               	movwf	___flmul@a+3
  4897  06E8  0822               	movf	?___xxtofl+2,w
  4898  06E9  00B4               	movwf	___flmul@a+2
  4899  06EA  0821               	movf	?___xxtofl+1,w
  4900  06EB  00B3               	movwf	___flmul@a+1
  4901  06EC  0820               	movf	?___xxtofl,w
  4902  06ED  00B2               	movwf	___flmul@a
  4903  06EE  120A  118A  2023  120A  118A  	fcall	___flmul
  4904  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4905  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  4906  06F5  085A               	movf	I2C_Read_MPU@data_send,w
  4907  06F6  3E04               	addlw	4
  4908  06F7  0084               	movwf	4
  4909  06F8  082E               	movf	?___flmul,w
  4910  06F9  1383               	bcf	3,7	;select IRP bank0
  4911  06FA  0080               	movwf	0
  4912  06FB  0A84               	incf	4,f
  4913  06FC  082F               	movf	?___flmul+1,w
  4914  06FD  0080               	movwf	0
  4915  06FE  0A84               	incf	4,f
  4916  06FF  0830               	movf	?___flmul+2,w
  4917  0700  0080               	movwf	0
  4918  0701  0A84               	incf	4,f
  4919  0702  0831               	movf	?___flmul+3,w
  4920  0703  0080               	movwf	0
  4921  0704                     l2590:
  4922                           
  4923                           ;main.c: 183:     data_send[2] = ((float) valor_original[2]) * 0.0005982;
  4924  0704  303A               	movlw	58
  4925  0705  00B1               	movwf	___flmul@b+3
  4926  0706  301C               	movlw	28
  4927  0707  00B0               	movwf	___flmul@b+2
  4928  0708  30D0               	movlw	208
  4929  0709  00AF               	movwf	___flmul@b+1
  4930  070A  3086               	movlw	134
  4931  070B  00AE               	movwf	___flmul@b
  4932  070C  0856               	movf	I2C_Read_MPU@valor_original+4,w
  4933  070D  00A0               	movwf	___xxtofl@val
  4934  070E  0857               	movf	I2C_Read_MPU@valor_original+5,w
  4935  070F  00A1               	movwf	___xxtofl@val+1
  4936  0710  3000               	movlw	0
  4937  0711  1BA1               	btfsc	___xxtofl@val+1,7
  4938  0712  30FF               	movlw	255
  4939  0713  00A2               	movwf	___xxtofl@val+2
  4940  0714  00A3               	movwf	___xxtofl@val+3
  4941  0715  3001               	movlw	1
  4942  0716  120A  118A  273C  120A  118A  	fcall	___xxtofl
  4943  071B  1283               	bcf	3,5	;RP0=0, select bank0
  4944  071C  1303               	bcf	3,6	;RP1=0, select bank0
  4945  071D  0823               	movf	?___xxtofl+3,w
  4946  071E  00B5               	movwf	___flmul@a+3
  4947  071F  0822               	movf	?___xxtofl+2,w
  4948  0720  00B4               	movwf	___flmul@a+2
  4949  0721  0821               	movf	?___xxtofl+1,w
  4950  0722  00B3               	movwf	___flmul@a+1
  4951  0723  0820               	movf	?___xxtofl,w
  4952  0724  00B2               	movwf	___flmul@a
  4953  0725  120A  118A  2023  120A  118A  	fcall	___flmul
  4954  072A  1283               	bcf	3,5	;RP0=0, select bank0
  4955  072B  1303               	bcf	3,6	;RP1=0, select bank0
  4956  072C  085A               	movf	I2C_Read_MPU@data_send,w
  4957  072D  3E08               	addlw	8
  4958  072E  0084               	movwf	4
  4959  072F  082E               	movf	?___flmul,w
  4960  0730  1383               	bcf	3,7	;select IRP bank0
  4961  0731  0080               	movwf	0
  4962  0732  0A84               	incf	4,f
  4963  0733  082F               	movf	?___flmul+1,w
  4964  0734  0080               	movwf	0
  4965  0735  0A84               	incf	4,f
  4966  0736  0830               	movf	?___flmul+2,w
  4967  0737  0080               	movwf	0
  4968  0738  0A84               	incf	4,f
  4969  0739  0831               	movf	?___flmul+3,w
  4970  073A  0080               	movwf	0
  4971  073B                     l84:
  4972  073B  0008               	return
  4973  073C                     __end_of_I2C_Read_MPU:
  4974                           
  4975                           	psect	text16
  4976  073C                     __ptext16:	
  4977 ;; *************** function ___xxtofl *****************
  4978 ;; Defined at:
  4979 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  sign            1    wreg     unsigned char 
  4982 ;;  val             4    0[BANK0 ] long 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  sign            1    8[BANK0 ] unsigned char 
  4985 ;;  arg             4   10[BANK0 ] unsigned long 
  4986 ;;  exp             1    9[BANK0 ] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  4    0[BANK0 ] unsigned char 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4996 ;;      Params:         0       4       0       0       0
  4997 ;;      Locals:         0       6       0       0       0
  4998 ;;      Temps:          0       4       0       0       0
  4999 ;;      Totals:         0      14       0       0       0
  5000 ;;Total ram usage:       14 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    1
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_I2C_Read_MPU
  5007 ;;		_ftoa
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function ___xxtofl
  5013  073C                     ___xxtofl:
  5014                           
  5015                           ;incstack = 0
  5016                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5017                           ;___xxtofl@sign stored from wreg
  5018  073C  1283               	bcf	3,5	;RP0=0, select bank0
  5019  073D  1303               	bcf	3,6	;RP1=0, select bank0
  5020  073E  00A8               	movwf	___xxtofl@sign
  5021  073F                     l2364:
  5022  073F  0828               	movf	___xxtofl@sign,w
  5023  0740  1903               	btfsc	3,2
  5024  0741  2F43               	goto	u3161
  5025  0742  2F44               	goto	u3160
  5026  0743                     u3161:
  5027  0743  2F58               	goto	l2370
  5028  0744                     u3160:
  5029  0744                     l2366:
  5030  0744  1FA3               	btfss	___xxtofl@val+3,7
  5031  0745  2F47               	goto	u3171
  5032  0746  2F48               	goto	u3170
  5033  0747                     u3171:
  5034  0747  2F58               	goto	l2370
  5035  0748                     u3170:
  5036  0748                     l2368:
  5037  0748  0920               	comf	___xxtofl@val,w
  5038  0749  00AA               	movwf	___xxtofl@arg
  5039  074A  0921               	comf	___xxtofl@val+1,w
  5040  074B  00AB               	movwf	___xxtofl@arg+1
  5041  074C  0922               	comf	___xxtofl@val+2,w
  5042  074D  00AC               	movwf	___xxtofl@arg+2
  5043  074E  0923               	comf	___xxtofl@val+3,w
  5044  074F  00AD               	movwf	___xxtofl@arg+3
  5045  0750  0AAA               	incf	___xxtofl@arg,f
  5046  0751  1903               	skipnz
  5047  0752  0AAB               	incf	___xxtofl@arg+1,f
  5048  0753  1903               	skipnz
  5049  0754  0AAC               	incf	___xxtofl@arg+2,f
  5050  0755  1903               	skipnz
  5051  0756  0AAD               	incf	___xxtofl@arg+3,f
  5052  0757  2F60               	goto	l742
  5053  0758                     l2370:
  5054  0758  0823               	movf	___xxtofl@val+3,w
  5055  0759  00AD               	movwf	___xxtofl@arg+3
  5056  075A  0822               	movf	___xxtofl@val+2,w
  5057  075B  00AC               	movwf	___xxtofl@arg+2
  5058  075C  0821               	movf	___xxtofl@val+1,w
  5059  075D  00AB               	movwf	___xxtofl@arg+1
  5060  075E  0820               	movf	___xxtofl@val,w
  5061  075F  00AA               	movwf	___xxtofl@arg
  5062  0760                     l742:
  5063  0760  0823               	movf	___xxtofl@val+3,w
  5064  0761  0422               	iorwf	___xxtofl@val+2,w
  5065  0762  0421               	iorwf	___xxtofl@val+1,w
  5066  0763  0420               	iorwf	___xxtofl@val,w
  5067  0764  1D03               	skipz
  5068  0765  2F67               	goto	u3181
  5069  0766  2F68               	goto	u3180
  5070  0767                     u3181:
  5071  0767  2F71               	goto	l2376
  5072  0768                     u3180:
  5073  0768                     l2372:
  5074  0768  3000               	movlw	0
  5075  0769  00A3               	movwf	?___xxtofl+3
  5076  076A  3000               	movlw	0
  5077  076B  00A2               	movwf	?___xxtofl+2
  5078  076C  3000               	movlw	0
  5079  076D  00A1               	movwf	?___xxtofl+1
  5080  076E  3000               	movlw	0
  5081  076F  00A0               	movwf	?___xxtofl
  5082  0770  2FF7               	goto	l744
  5083  0771                     l2376:
  5084  0771  3096               	movlw	150
  5085  0772  00A4               	movwf	??___xxtofl
  5086  0773  0824               	movf	??___xxtofl,w
  5087  0774  00A9               	movwf	___xxtofl@exp
  5088  0775  2F83               	goto	l2380
  5089  0776                     l2378:
  5090  0776  3001               	movlw	1
  5091  0777  00A4               	movwf	??___xxtofl
  5092  0778  0824               	movf	??___xxtofl,w
  5093  0779  07A9               	addwf	___xxtofl@exp,f
  5094  077A  3001               	movlw	1
  5095  077B                     u3195:
  5096  077B  1003               	clrc
  5097  077C  0CAD               	rrf	___xxtofl@arg+3,f
  5098  077D  0CAC               	rrf	___xxtofl@arg+2,f
  5099  077E  0CAB               	rrf	___xxtofl@arg+1,f
  5100  077F  0CAA               	rrf	___xxtofl@arg,f
  5101  0780  3EFF               	addlw	-1
  5102  0781  1D03               	skipz
  5103  0782  2F7B               	goto	u3195
  5104  0783                     l2380:
  5105  0783  30FE               	movlw	254
  5106  0784  052D               	andwf	___xxtofl@arg+3,w
  5107  0785  1D03               	btfss	3,2
  5108  0786  2F88               	goto	u3201
  5109  0787  2F89               	goto	u3200
  5110  0788                     u3201:
  5111  0788  2F76               	goto	l2378
  5112  0789                     u3200:
  5113  0789  2FA5               	goto	l748
  5114  078A                     l2382:
  5115  078A  3001               	movlw	1
  5116  078B  00A4               	movwf	??___xxtofl
  5117  078C  0824               	movf	??___xxtofl,w
  5118  078D  07A9               	addwf	___xxtofl@exp,f
  5119  078E                     l2384:
  5120  078E  3001               	movlw	1
  5121  078F  07AA               	addwf	___xxtofl@arg,f
  5122  0790  3000               	movlw	0
  5123  0791  1803               	skipnc
  5124  0792  3001               	movlw	1
  5125  0793  07AB               	addwf	___xxtofl@arg+1,f
  5126  0794  3000               	movlw	0
  5127  0795  1803               	skipnc
  5128  0796  3001               	movlw	1
  5129  0797  07AC               	addwf	___xxtofl@arg+2,f
  5130  0798  3000               	movlw	0
  5131  0799  1803               	skipnc
  5132  079A  3001               	movlw	1
  5133  079B  07AD               	addwf	___xxtofl@arg+3,f
  5134  079C                     l2386:
  5135  079C  3001               	movlw	1
  5136  079D                     u3215:
  5137  079D  1003               	clrc
  5138  079E  0CAD               	rrf	___xxtofl@arg+3,f
  5139  079F  0CAC               	rrf	___xxtofl@arg+2,f
  5140  07A0  0CAB               	rrf	___xxtofl@arg+1,f
  5141  07A1  0CAA               	rrf	___xxtofl@arg,f
  5142  07A2  3EFF               	addlw	-1
  5143  07A3  1D03               	skipz
  5144  07A4  2F9D               	goto	u3215
  5145  07A5                     l748:
  5146  07A5  30FF               	movlw	255
  5147  07A6  052D               	andwf	___xxtofl@arg+3,w
  5148  07A7  1D03               	btfss	3,2
  5149  07A8  2FAA               	goto	u3221
  5150  07A9  2FAB               	goto	u3220
  5151  07AA                     u3221:
  5152  07AA  2F8A               	goto	l2382
  5153  07AB                     u3220:
  5154  07AB  2FB7               	goto	l2390
  5155  07AC                     l2388:
  5156  07AC  3001               	movlw	1
  5157  07AD  02A9               	subwf	___xxtofl@exp,f
  5158  07AE  3001               	movlw	1
  5159  07AF  00A4               	movwf	??___xxtofl
  5160  07B0                     u3235:
  5161  07B0  1003               	clrc
  5162  07B1  0DAA               	rlf	___xxtofl@arg,f
  5163  07B2  0DAB               	rlf	___xxtofl@arg+1,f
  5164  07B3  0DAC               	rlf	___xxtofl@arg+2,f
  5165  07B4  0DAD               	rlf	___xxtofl@arg+3,f
  5166  07B5  0BA4               	decfsz	??___xxtofl,f
  5167  07B6  2FB0               	goto	u3235
  5168  07B7                     l2390:
  5169  07B7  1BAC               	btfsc	___xxtofl@arg+2,7
  5170  07B8  2FBA               	goto	u3241
  5171  07B9  2FBB               	goto	u3240
  5172  07BA                     u3241:
  5173  07BA  2FC1               	goto	l755
  5174  07BB                     u3240:
  5175  07BB                     l2392:
  5176  07BB  3002               	movlw	2
  5177  07BC  0229               	subwf	___xxtofl@exp,w
  5178  07BD  1803               	skipnc
  5179  07BE  2FC0               	goto	u3251
  5180  07BF  2FC1               	goto	u3250
  5181  07C0                     u3251:
  5182  07C0  2FAC               	goto	l2388
  5183  07C1                     u3250:
  5184  07C1                     l755:
  5185  07C1  1829               	btfsc	___xxtofl@exp,0
  5186  07C2  2FC4               	goto	u3261
  5187  07C3  2FC5               	goto	u3260
  5188  07C4                     u3261:
  5189  07C4  2FCD               	goto	l756
  5190  07C5                     u3260:
  5191  07C5                     l2394:
  5192  07C5  30FF               	movlw	255
  5193  07C6  05AA               	andwf	___xxtofl@arg,f
  5194  07C7  30FF               	movlw	255
  5195  07C8  05AB               	andwf	___xxtofl@arg+1,f
  5196  07C9  307F               	movlw	127
  5197  07CA  05AC               	andwf	___xxtofl@arg+2,f
  5198  07CB  30FF               	movlw	255
  5199  07CC  05AD               	andwf	___xxtofl@arg+3,f
  5200  07CD                     l756:
  5201  07CD  1003               	clrc
  5202  07CE  0CA9               	rrf	___xxtofl@exp,f
  5203  07CF                     l2396:
  5204  07CF  0829               	movf	___xxtofl@exp,w
  5205  07D0  00A4               	movwf	??___xxtofl
  5206  07D1  01A5               	clrf	??___xxtofl+1
  5207  07D2  01A6               	clrf	??___xxtofl+2
  5208  07D3  01A7               	clrf	??___xxtofl+3
  5209  07D4  3018               	movlw	24
  5210  07D5                     u3275:
  5211  07D5  1003               	clrc
  5212  07D6  0DA4               	rlf	??___xxtofl,f
  5213  07D7  0DA5               	rlf	??___xxtofl+1,f
  5214  07D8  0DA6               	rlf	??___xxtofl+2,f
  5215  07D9  0DA7               	rlf	??___xxtofl+3,f
  5216  07DA                     u3270:
  5217  07DA  3EFF               	addlw	-1
  5218  07DB  1D03               	skipz
  5219  07DC  2FD5               	goto	u3275
  5220  07DD  0824               	movf	??___xxtofl,w
  5221  07DE  04AA               	iorwf	___xxtofl@arg,f
  5222  07DF  0825               	movf	??___xxtofl+1,w
  5223  07E0  04AB               	iorwf	___xxtofl@arg+1,f
  5224  07E1  0826               	movf	??___xxtofl+2,w
  5225  07E2  04AC               	iorwf	___xxtofl@arg+2,f
  5226  07E3  0827               	movf	??___xxtofl+3,w
  5227  07E4  04AD               	iorwf	___xxtofl@arg+3,f
  5228  07E5                     l2398:
  5229  07E5  0828               	movf	___xxtofl@sign,w
  5230  07E6  1903               	btfsc	3,2
  5231  07E7  2FE9               	goto	u3281
  5232  07E8  2FEA               	goto	u3280
  5233  07E9                     u3281:
  5234  07E9  2FEF               	goto	l2404
  5235  07EA                     u3280:
  5236  07EA                     l2400:
  5237  07EA  1FA3               	btfss	___xxtofl@val+3,7
  5238  07EB  2FED               	goto	u3291
  5239  07EC  2FEE               	goto	u3290
  5240  07ED                     u3291:
  5241  07ED  2FEF               	goto	l2404
  5242  07EE                     u3290:
  5243  07EE                     l2402:
  5244  07EE  17AD               	bsf	___xxtofl@arg+3,7
  5245  07EF                     l2404:
  5246  07EF  082D               	movf	___xxtofl@arg+3,w
  5247  07F0  00A3               	movwf	?___xxtofl+3
  5248  07F1  082C               	movf	___xxtofl@arg+2,w
  5249  07F2  00A2               	movwf	?___xxtofl+2
  5250  07F3  082B               	movf	___xxtofl@arg+1,w
  5251  07F4  00A1               	movwf	?___xxtofl+1
  5252  07F5  082A               	movf	___xxtofl@arg,w
  5253  07F6  00A0               	movwf	?___xxtofl
  5254  07F7                     l744:
  5255  07F7  0008               	return
  5256  07F8                     __end_of___xxtofl:
  5257                           
  5258                           	psect	text17
  5259  0023                     __ptext17:	
  5260 ;; *************** function ___flmul *****************
  5261 ;; Defined at:
  5262 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  b               4   14[BANK0 ] unsigned char 
  5265 ;;  a               4   18[BANK0 ] unsigned char 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  prod            4   34[BANK0 ] struct .
  5268 ;;  grs             4   28[BANK0 ] unsigned long 
  5269 ;;  temp            2   38[BANK0 ] struct .
  5270 ;;  bexp            1   33[BANK0 ] unsigned char 
  5271 ;;  aexp            1   32[BANK0 ] unsigned char 
  5272 ;;  sign            1   27[BANK0 ] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  4   14[BANK0 ] unsigned char 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5282 ;;      Params:         0       8       0       0       0
  5283 ;;      Locals:         0      13       0       0       0
  5284 ;;      Temps:          0       5       0       0       0
  5285 ;;      Totals:         0      26       0       0       0
  5286 ;;Total ram usage:       26 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    2
  5289 ;; This function calls:
  5290 ;;		__Umul8_16
  5291 ;; This function is called by:
  5292 ;;		_I2C_Read_MPU
  5293 ;;		_ftoa
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function ___flmul
  5299  0023                     ___flmul:
  5300  0023                     l2224:	
  5301                           ;incstack = 0
  5302                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5303                           
  5304  0023  1283               	bcf	3,5	;RP0=0, select bank0
  5305  0024  1303               	bcf	3,6	;RP1=0, select bank0
  5306  0025  0831               	movf	___flmul@b+3,w
  5307  0026  3980               	andlw	128
  5308  0027  00B6               	movwf	??___flmul
  5309  0028  0836               	movf	??___flmul,w
  5310  0029  00BB               	movwf	___flmul@sign
  5311  002A                     l2226:
  5312  002A  0831               	movf	___flmul@b+3,w
  5313  002B  00B6               	movwf	??___flmul
  5314  002C  0736               	addwf	??___flmul,w
  5315  002D  00B7               	movwf	??___flmul+1
  5316  002E  0837               	movf	??___flmul+1,w
  5317  002F  00C1               	movwf	___flmul@bexp
  5318  0030                     l2228:
  5319  0030  1FB0               	btfss	___flmul@b+2,7
  5320  0031  2833               	goto	u2791
  5321  0032  2834               	goto	u2790
  5322  0033                     u2791:
  5323  0033  2835               	goto	l2232
  5324  0034                     u2790:
  5325  0034                     l2230:
  5326  0034  1441               	bsf	___flmul@bexp,0
  5327  0035                     l2232:
  5328  0035  0841               	movf	___flmul@bexp,w
  5329  0036  1903               	btfsc	3,2
  5330  0037  2839               	goto	u2801
  5331  0038  283A               	goto	u2800
  5332  0039                     u2801:
  5333  0039  2849               	goto	l2240
  5334  003A                     u2800:
  5335  003A                     l2234:
  5336  003A  0A41               	incf	___flmul@bexp,w
  5337  003B  1D03               	btfss	3,2
  5338  003C  283E               	goto	u2811
  5339  003D  283F               	goto	u2810
  5340  003E                     u2811:
  5341  003E  2847               	goto	l2238
  5342  003F                     u2810:
  5343  003F                     l2236:
  5344  003F  3000               	movlw	0
  5345  0040  00B1               	movwf	___flmul@b+3
  5346  0041  3000               	movlw	0
  5347  0042  00B0               	movwf	___flmul@b+2
  5348  0043  3000               	movlw	0
  5349  0044  00AF               	movwf	___flmul@b+1
  5350  0045  3000               	movlw	0
  5351  0046  00AE               	movwf	___flmul@b
  5352  0047                     l2238:
  5353  0047  17B0               	bsf	___flmul@b+2,7
  5354  0048  2851               	goto	l2242
  5355  0049                     l2240:
  5356  0049  3000               	movlw	0
  5357  004A  00B1               	movwf	___flmul@b+3
  5358  004B  3000               	movlw	0
  5359  004C  00B0               	movwf	___flmul@b+2
  5360  004D  3000               	movlw	0
  5361  004E  00AF               	movwf	___flmul@b+1
  5362  004F  3000               	movlw	0
  5363  0050  00AE               	movwf	___flmul@b
  5364  0051                     l2242:
  5365  0051  0835               	movf	___flmul@a+3,w
  5366  0052  3980               	andlw	128
  5367  0053  00B6               	movwf	??___flmul
  5368  0054  0836               	movf	??___flmul,w
  5369  0055  06BB               	xorwf	___flmul@sign,f
  5370  0056                     l2244:
  5371  0056  0835               	movf	___flmul@a+3,w
  5372  0057  00B6               	movwf	??___flmul
  5373  0058  0736               	addwf	??___flmul,w
  5374  0059  00B7               	movwf	??___flmul+1
  5375  005A  0837               	movf	??___flmul+1,w
  5376  005B  00C0               	movwf	___flmul@aexp
  5377  005C                     l2246:
  5378  005C  1FB4               	btfss	___flmul@a+2,7
  5379  005D  285F               	goto	u2821
  5380  005E  2860               	goto	u2820
  5381  005F                     u2821:
  5382  005F  2861               	goto	l2250
  5383  0060                     u2820:
  5384  0060                     l2248:
  5385  0060  1440               	bsf	___flmul@aexp,0
  5386  0061                     l2250:
  5387  0061  0840               	movf	___flmul@aexp,w
  5388  0062  1903               	btfsc	3,2
  5389  0063  2865               	goto	u2831
  5390  0064  2866               	goto	u2830
  5391  0065                     u2831:
  5392  0065  2875               	goto	l2258
  5393  0066                     u2830:
  5394  0066                     l2252:
  5395  0066  0A40               	incf	___flmul@aexp,w
  5396  0067  1D03               	btfss	3,2
  5397  0068  286A               	goto	u2841
  5398  0069  286B               	goto	u2840
  5399  006A                     u2841:
  5400  006A  2873               	goto	l2256
  5401  006B                     u2840:
  5402  006B                     l2254:
  5403  006B  3000               	movlw	0
  5404  006C  00B5               	movwf	___flmul@a+3
  5405  006D  3000               	movlw	0
  5406  006E  00B4               	movwf	___flmul@a+2
  5407  006F  3000               	movlw	0
  5408  0070  00B3               	movwf	___flmul@a+1
  5409  0071  3000               	movlw	0
  5410  0072  00B2               	movwf	___flmul@a
  5411  0073                     l2256:
  5412  0073  17B4               	bsf	___flmul@a+2,7
  5413  0074  287D               	goto	l2260
  5414  0075                     l2258:
  5415  0075  3000               	movlw	0
  5416  0076  00B5               	movwf	___flmul@a+3
  5417  0077  3000               	movlw	0
  5418  0078  00B4               	movwf	___flmul@a+2
  5419  0079  3000               	movlw	0
  5420  007A  00B3               	movwf	___flmul@a+1
  5421  007B  3000               	movlw	0
  5422  007C  00B2               	movwf	___flmul@a
  5423  007D                     l2260:
  5424  007D  0840               	movf	___flmul@aexp,w
  5425  007E  1903               	btfsc	3,2
  5426  007F  2881               	goto	u2851
  5427  0080  2882               	goto	u2850
  5428  0081                     u2851:
  5429  0081  2887               	goto	l2264
  5430  0082                     u2850:
  5431  0082                     l2262:
  5432  0082  0841               	movf	___flmul@bexp,w
  5433  0083  1D03               	btfss	3,2
  5434  0084  2886               	goto	u2861
  5435  0085  2887               	goto	u2860
  5436  0086                     u2861:
  5437  0086  2890               	goto	l2268
  5438  0087                     u2860:
  5439  0087                     l2264:
  5440  0087  3000               	movlw	0
  5441  0088  00B1               	movwf	?___flmul+3
  5442  0089  3000               	movlw	0
  5443  008A  00B0               	movwf	?___flmul+2
  5444  008B  3000               	movlw	0
  5445  008C  00AF               	movwf	?___flmul+1
  5446  008D  3000               	movlw	0
  5447  008E  00AE               	movwf	?___flmul
  5448  008F  2B83               	goto	l698
  5449  0090                     l2268:
  5450  0090  082E               	movf	___flmul@b,w
  5451  0091  00B6               	movwf	??___flmul
  5452  0092  0836               	movf	??___flmul,w
  5453  0093  00F6               	movwf	__Umul8_16@multiplicand
  5454  0094  0834               	movf	___flmul@a+2,w
  5455  0095  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5456  009A  0877               	movf	?__Umul8_16+1,w
  5457  009B  1283               	bcf	3,5	;RP0=0, select bank0
  5458  009C  1303               	bcf	3,6	;RP1=0, select bank0
  5459  009D  00C7               	movwf	___flmul@temp+1
  5460  009E  0876               	movf	?__Umul8_16,w
  5461  009F  00C6               	movwf	___flmul@temp
  5462  00A0                     l2270:
  5463  00A0  0846               	movf	___flmul@temp,w
  5464  00A1  00B6               	movwf	??___flmul
  5465  00A2  01B7               	clrf	??___flmul+1
  5466  00A3  01B8               	clrf	??___flmul+2
  5467  00A4  01B9               	clrf	??___flmul+3
  5468  00A5  0839               	movf	??___flmul+3,w
  5469  00A6  00BF               	movwf	___flmul@grs+3
  5470  00A7  0838               	movf	??___flmul+2,w
  5471  00A8  00BE               	movwf	___flmul@grs+2
  5472  00A9  0837               	movf	??___flmul+1,w
  5473  00AA  00BD               	movwf	___flmul@grs+1
  5474  00AB  0836               	movf	??___flmul,w
  5475  00AC  00BC               	movwf	___flmul@grs
  5476  00AD                     l2272:
  5477  00AD  0847               	movf	___flmul@temp+1,w
  5478  00AE  00B6               	movwf	??___flmul
  5479  00AF  01B7               	clrf	??___flmul+1
  5480  00B0  01B8               	clrf	??___flmul+2
  5481  00B1  01B9               	clrf	??___flmul+3
  5482  00B2  0839               	movf	??___flmul+3,w
  5483  00B3  00C5               	movwf	___flmul@prod+3
  5484  00B4  0838               	movf	??___flmul+2,w
  5485  00B5  00C4               	movwf	___flmul@prod+2
  5486  00B6  0837               	movf	??___flmul+1,w
  5487  00B7  00C3               	movwf	___flmul@prod+1
  5488  00B8  0836               	movf	??___flmul,w
  5489  00B9  00C2               	movwf	___flmul@prod
  5490  00BA  082F               	movf	___flmul@b+1,w
  5491  00BB  00B6               	movwf	??___flmul
  5492  00BC  0836               	movf	??___flmul,w
  5493  00BD  00F6               	movwf	__Umul8_16@multiplicand
  5494  00BE  0833               	movf	___flmul@a+1,w
  5495  00BF  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5496  00C4  0877               	movf	?__Umul8_16+1,w
  5497  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  5498  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  5499  00C7  00C7               	movwf	___flmul@temp+1
  5500  00C8  0876               	movf	?__Umul8_16,w
  5501  00C9  00C6               	movwf	___flmul@temp
  5502  00CA                     l2274:
  5503  00CA  0846               	movf	___flmul@temp,w
  5504  00CB  00B6               	movwf	??___flmul
  5505  00CC  01B7               	clrf	??___flmul+1
  5506  00CD  01B8               	clrf	??___flmul+2
  5507  00CE  01B9               	clrf	??___flmul+3
  5508  00CF  0836               	movf	??___flmul,w
  5509  00D0  07BC               	addwf	___flmul@grs,f
  5510  00D1  0837               	movf	??___flmul+1,w
  5511  00D2  1103               	clrz
  5512  00D3  1803               	skipnc
  5513  00D4  3E01               	addlw	1
  5514  00D5  1903               	skipnz
  5515  00D6  28D8               	goto	u2871
  5516  00D7  07BD               	addwf	___flmul@grs+1,f
  5517  00D8                     u2871:
  5518  00D8  0838               	movf	??___flmul+2,w
  5519  00D9  1103               	clrz
  5520  00DA  1803               	skipnc
  5521  00DB  3E01               	addlw	1
  5522  00DC  1903               	skipnz
  5523  00DD  28DF               	goto	u2872
  5524  00DE  07BE               	addwf	___flmul@grs+2,f
  5525  00DF                     u2872:
  5526  00DF  0839               	movf	??___flmul+3,w
  5527  00E0  1103               	clrz
  5528  00E1  1803               	skipnc
  5529  00E2  3E01               	addlw	1
  5530  00E3  1903               	skipnz
  5531  00E4  28E6               	goto	u2873
  5532  00E5  07BF               	addwf	___flmul@grs+3,f
  5533  00E6                     u2873:
  5534  00E6                     l2276:
  5535  00E6  0847               	movf	___flmul@temp+1,w
  5536  00E7  00B6               	movwf	??___flmul
  5537  00E8  01B7               	clrf	??___flmul+1
  5538  00E9  01B8               	clrf	??___flmul+2
  5539  00EA  01B9               	clrf	??___flmul+3
  5540  00EB  0836               	movf	??___flmul,w
  5541  00EC  07C2               	addwf	___flmul@prod,f
  5542  00ED  0837               	movf	??___flmul+1,w
  5543  00EE  1103               	clrz
  5544  00EF  1803               	skipnc
  5545  00F0  3E01               	addlw	1
  5546  00F1  1903               	skipnz
  5547  00F2  28F4               	goto	u2881
  5548  00F3  07C3               	addwf	___flmul@prod+1,f
  5549  00F4                     u2881:
  5550  00F4  0838               	movf	??___flmul+2,w
  5551  00F5  1103               	clrz
  5552  00F6  1803               	skipnc
  5553  00F7  3E01               	addlw	1
  5554  00F8  1903               	skipnz
  5555  00F9  28FB               	goto	u2882
  5556  00FA  07C4               	addwf	___flmul@prod+2,f
  5557  00FB                     u2882:
  5558  00FB  0839               	movf	??___flmul+3,w
  5559  00FC  1103               	clrz
  5560  00FD  1803               	skipnc
  5561  00FE  3E01               	addlw	1
  5562  00FF  1903               	skipnz
  5563  0100  2902               	goto	u2883
  5564  0101  07C5               	addwf	___flmul@prod+3,f
  5565  0102                     u2883:
  5566  0102  0830               	movf	___flmul@b+2,w
  5567  0103  00B6               	movwf	??___flmul
  5568  0104  0836               	movf	??___flmul,w
  5569  0105  00F6               	movwf	__Umul8_16@multiplicand
  5570  0106  0832               	movf	___flmul@a,w
  5571  0107  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5572  010C  0877               	movf	?__Umul8_16+1,w
  5573  010D  1283               	bcf	3,5	;RP0=0, select bank0
  5574  010E  1303               	bcf	3,6	;RP1=0, select bank0
  5575  010F  00C7               	movwf	___flmul@temp+1
  5576  0110  0876               	movf	?__Umul8_16,w
  5577  0111  00C6               	movwf	___flmul@temp
  5578  0112                     l2278:
  5579  0112  0846               	movf	___flmul@temp,w
  5580  0113  00B6               	movwf	??___flmul
  5581  0114  01B7               	clrf	??___flmul+1
  5582  0115  01B8               	clrf	??___flmul+2
  5583  0116  01B9               	clrf	??___flmul+3
  5584  0117  0836               	movf	??___flmul,w
  5585  0118  07BC               	addwf	___flmul@grs,f
  5586  0119  0837               	movf	??___flmul+1,w
  5587  011A  1103               	clrz
  5588  011B  1803               	skipnc
  5589  011C  3E01               	addlw	1
  5590  011D  1903               	skipnz
  5591  011E  2920               	goto	u2891
  5592  011F  07BD               	addwf	___flmul@grs+1,f
  5593  0120                     u2891:
  5594  0120  0838               	movf	??___flmul+2,w
  5595  0121  1103               	clrz
  5596  0122  1803               	skipnc
  5597  0123  3E01               	addlw	1
  5598  0124  1903               	skipnz
  5599  0125  2927               	goto	u2892
  5600  0126  07BE               	addwf	___flmul@grs+2,f
  5601  0127                     u2892:
  5602  0127  0839               	movf	??___flmul+3,w
  5603  0128  1103               	clrz
  5604  0129  1803               	skipnc
  5605  012A  3E01               	addlw	1
  5606  012B  1903               	skipnz
  5607  012C  292E               	goto	u2893
  5608  012D  07BF               	addwf	___flmul@grs+3,f
  5609  012E                     u2893:
  5610  012E                     l2280:
  5611  012E  0847               	movf	___flmul@temp+1,w
  5612  012F  00B6               	movwf	??___flmul
  5613  0130  01B7               	clrf	??___flmul+1
  5614  0131  01B8               	clrf	??___flmul+2
  5615  0132  01B9               	clrf	??___flmul+3
  5616  0133  0836               	movf	??___flmul,w
  5617  0134  07C2               	addwf	___flmul@prod,f
  5618  0135  0837               	movf	??___flmul+1,w
  5619  0136  1103               	clrz
  5620  0137  1803               	skipnc
  5621  0138  3E01               	addlw	1
  5622  0139  1903               	skipnz
  5623  013A  293C               	goto	u2901
  5624  013B  07C3               	addwf	___flmul@prod+1,f
  5625  013C                     u2901:
  5626  013C  0838               	movf	??___flmul+2,w
  5627  013D  1103               	clrz
  5628  013E  1803               	skipnc
  5629  013F  3E01               	addlw	1
  5630  0140  1903               	skipnz
  5631  0141  2943               	goto	u2902
  5632  0142  07C4               	addwf	___flmul@prod+2,f
  5633  0143                     u2902:
  5634  0143  0839               	movf	??___flmul+3,w
  5635  0144  1103               	clrz
  5636  0145  1803               	skipnc
  5637  0146  3E01               	addlw	1
  5638  0147  1903               	skipnz
  5639  0148  294A               	goto	u2903
  5640  0149  07C5               	addwf	___flmul@prod+3,f
  5641  014A                     u2903:
  5642  014A                     l2282:
  5643  014A  3008               	movlw	8
  5644  014B  00B6               	movwf	??___flmul
  5645  014C                     u2915:
  5646  014C  1003               	clrc
  5647  014D  0DBC               	rlf	___flmul@grs,f
  5648  014E  0DBD               	rlf	___flmul@grs+1,f
  5649  014F  0DBE               	rlf	___flmul@grs+2,f
  5650  0150  0DBF               	rlf	___flmul@grs+3,f
  5651  0151  0BB6               	decfsz	??___flmul,f
  5652  0152  294C               	goto	u2915
  5653  0153                     l2284:
  5654  0153  082F               	movf	___flmul@b+1,w
  5655  0154  00B6               	movwf	??___flmul
  5656  0155  0836               	movf	??___flmul,w
  5657  0156  00F6               	movwf	__Umul8_16@multiplicand
  5658  0157  0832               	movf	___flmul@a,w
  5659  0158  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5660  015D  0877               	movf	?__Umul8_16+1,w
  5661  015E  1283               	bcf	3,5	;RP0=0, select bank0
  5662  015F  1303               	bcf	3,6	;RP1=0, select bank0
  5663  0160  00C7               	movwf	___flmul@temp+1
  5664  0161  0876               	movf	?__Umul8_16,w
  5665  0162  00C6               	movwf	___flmul@temp
  5666  0163                     l2286:
  5667  0163  0846               	movf	___flmul@temp,w
  5668  0164  00B6               	movwf	??___flmul
  5669  0165  0847               	movf	___flmul@temp+1,w
  5670  0166  00B7               	movwf	??___flmul+1
  5671  0167  01B8               	clrf	??___flmul+2
  5672  0168  01B9               	clrf	??___flmul+3
  5673  0169  0836               	movf	??___flmul,w
  5674  016A  07BC               	addwf	___flmul@grs,f
  5675  016B  0837               	movf	??___flmul+1,w
  5676  016C  1103               	clrz
  5677  016D  1803               	skipnc
  5678  016E  3E01               	addlw	1
  5679  016F  1903               	skipnz
  5680  0170  2972               	goto	u2921
  5681  0171  07BD               	addwf	___flmul@grs+1,f
  5682  0172                     u2921:
  5683  0172  0838               	movf	??___flmul+2,w
  5684  0173  1103               	clrz
  5685  0174  1803               	skipnc
  5686  0175  3E01               	addlw	1
  5687  0176  1903               	skipnz
  5688  0177  2979               	goto	u2922
  5689  0178  07BE               	addwf	___flmul@grs+2,f
  5690  0179                     u2922:
  5691  0179  0839               	movf	??___flmul+3,w
  5692  017A  1103               	clrz
  5693  017B  1803               	skipnc
  5694  017C  3E01               	addlw	1
  5695  017D  1903               	skipnz
  5696  017E  2980               	goto	u2923
  5697  017F  07BF               	addwf	___flmul@grs+3,f
  5698  0180                     u2923:
  5699  0180                     l2288:
  5700  0180  082E               	movf	___flmul@b,w
  5701  0181  00B6               	movwf	??___flmul
  5702  0182  0836               	movf	??___flmul,w
  5703  0183  00F6               	movwf	__Umul8_16@multiplicand
  5704  0184  0833               	movf	___flmul@a+1,w
  5705  0185  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5706  018A  0877               	movf	?__Umul8_16+1,w
  5707  018B  1283               	bcf	3,5	;RP0=0, select bank0
  5708  018C  1303               	bcf	3,6	;RP1=0, select bank0
  5709  018D  00C7               	movwf	___flmul@temp+1
  5710  018E  0876               	movf	?__Umul8_16,w
  5711  018F  00C6               	movwf	___flmul@temp
  5712  0190                     l2290:
  5713  0190  0846               	movf	___flmul@temp,w
  5714  0191  00B6               	movwf	??___flmul
  5715  0192  0847               	movf	___flmul@temp+1,w
  5716  0193  00B7               	movwf	??___flmul+1
  5717  0194  01B8               	clrf	??___flmul+2
  5718  0195  01B9               	clrf	??___flmul+3
  5719  0196  0836               	movf	??___flmul,w
  5720  0197  07BC               	addwf	___flmul@grs,f
  5721  0198  0837               	movf	??___flmul+1,w
  5722  0199  1103               	clrz
  5723  019A  1803               	skipnc
  5724  019B  3E01               	addlw	1
  5725  019C  1903               	skipnz
  5726  019D  299F               	goto	u2931
  5727  019E  07BD               	addwf	___flmul@grs+1,f
  5728  019F                     u2931:
  5729  019F  0838               	movf	??___flmul+2,w
  5730  01A0  1103               	clrz
  5731  01A1  1803               	skipnc
  5732  01A2  3E01               	addlw	1
  5733  01A3  1903               	skipnz
  5734  01A4  29A6               	goto	u2932
  5735  01A5  07BE               	addwf	___flmul@grs+2,f
  5736  01A6                     u2932:
  5737  01A6  0839               	movf	??___flmul+3,w
  5738  01A7  1103               	clrz
  5739  01A8  1803               	skipnc
  5740  01A9  3E01               	addlw	1
  5741  01AA  1903               	skipnz
  5742  01AB  29AD               	goto	u2933
  5743  01AC  07BF               	addwf	___flmul@grs+3,f
  5744  01AD                     u2933:
  5745  01AD                     l2292:
  5746  01AD  3008               	movlw	8
  5747  01AE  00B6               	movwf	??___flmul
  5748  01AF                     u2945:
  5749  01AF  1003               	clrc
  5750  01B0  0DBC               	rlf	___flmul@grs,f
  5751  01B1  0DBD               	rlf	___flmul@grs+1,f
  5752  01B2  0DBE               	rlf	___flmul@grs+2,f
  5753  01B3  0DBF               	rlf	___flmul@grs+3,f
  5754  01B4  0BB6               	decfsz	??___flmul,f
  5755  01B5  29AF               	goto	u2945
  5756  01B6  082E               	movf	___flmul@b,w
  5757  01B7  00B6               	movwf	??___flmul
  5758  01B8  0836               	movf	??___flmul,w
  5759  01B9  00F6               	movwf	__Umul8_16@multiplicand
  5760  01BA  0832               	movf	___flmul@a,w
  5761  01BB  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5762  01C0  0877               	movf	?__Umul8_16+1,w
  5763  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  5764  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  5765  01C3  00C7               	movwf	___flmul@temp+1
  5766  01C4  0876               	movf	?__Umul8_16,w
  5767  01C5  00C6               	movwf	___flmul@temp
  5768  01C6                     l2294:
  5769  01C6  0846               	movf	___flmul@temp,w
  5770  01C7  00B6               	movwf	??___flmul
  5771  01C8  0847               	movf	___flmul@temp+1,w
  5772  01C9  00B7               	movwf	??___flmul+1
  5773  01CA  01B8               	clrf	??___flmul+2
  5774  01CB  01B9               	clrf	??___flmul+3
  5775  01CC  0836               	movf	??___flmul,w
  5776  01CD  07BC               	addwf	___flmul@grs,f
  5777  01CE  0837               	movf	??___flmul+1,w
  5778  01CF  1103               	clrz
  5779  01D0  1803               	skipnc
  5780  01D1  3E01               	addlw	1
  5781  01D2  1903               	skipnz
  5782  01D3  29D5               	goto	u2951
  5783  01D4  07BD               	addwf	___flmul@grs+1,f
  5784  01D5                     u2951:
  5785  01D5  0838               	movf	??___flmul+2,w
  5786  01D6  1103               	clrz
  5787  01D7  1803               	skipnc
  5788  01D8  3E01               	addlw	1
  5789  01D9  1903               	skipnz
  5790  01DA  29DC               	goto	u2952
  5791  01DB  07BE               	addwf	___flmul@grs+2,f
  5792  01DC                     u2952:
  5793  01DC  0839               	movf	??___flmul+3,w
  5794  01DD  1103               	clrz
  5795  01DE  1803               	skipnc
  5796  01DF  3E01               	addlw	1
  5797  01E0  1903               	skipnz
  5798  01E1  29E3               	goto	u2953
  5799  01E2  07BF               	addwf	___flmul@grs+3,f
  5800  01E3                     u2953:
  5801  01E3                     l2296:
  5802  01E3  082F               	movf	___flmul@b+1,w
  5803  01E4  00B6               	movwf	??___flmul
  5804  01E5  0836               	movf	??___flmul,w
  5805  01E6  00F6               	movwf	__Umul8_16@multiplicand
  5806  01E7  0834               	movf	___flmul@a+2,w
  5807  01E8  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5808  01ED  0877               	movf	?__Umul8_16+1,w
  5809  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  5810  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  5811  01F0  00C7               	movwf	___flmul@temp+1
  5812  01F1  0876               	movf	?__Umul8_16,w
  5813  01F2  00C6               	movwf	___flmul@temp
  5814  01F3  0846               	movf	___flmul@temp,w
  5815  01F4  00B6               	movwf	??___flmul
  5816  01F5  0847               	movf	___flmul@temp+1,w
  5817  01F6  00B7               	movwf	??___flmul+1
  5818  01F7  01B8               	clrf	??___flmul+2
  5819  01F8  01B9               	clrf	??___flmul+3
  5820  01F9  0836               	movf	??___flmul,w
  5821  01FA  07C2               	addwf	___flmul@prod,f
  5822  01FB  0837               	movf	??___flmul+1,w
  5823  01FC  1103               	clrz
  5824  01FD  1803               	skipnc
  5825  01FE  3E01               	addlw	1
  5826  01FF  1903               	skipnz
  5827  0200  2A02               	goto	u2961
  5828  0201  07C3               	addwf	___flmul@prod+1,f
  5829  0202                     u2961:
  5830  0202  0838               	movf	??___flmul+2,w
  5831  0203  1103               	clrz
  5832  0204  1803               	skipnc
  5833  0205  3E01               	addlw	1
  5834  0206  1903               	skipnz
  5835  0207  2A09               	goto	u2962
  5836  0208  07C4               	addwf	___flmul@prod+2,f
  5837  0209                     u2962:
  5838  0209  0839               	movf	??___flmul+3,w
  5839  020A  1103               	clrz
  5840  020B  1803               	skipnc
  5841  020C  3E01               	addlw	1
  5842  020D  1903               	skipnz
  5843  020E  2A10               	goto	u2963
  5844  020F  07C5               	addwf	___flmul@prod+3,f
  5845  0210                     u2963:
  5846  0210                     l2298:
  5847  0210  0830               	movf	___flmul@b+2,w
  5848  0211  00B6               	movwf	??___flmul
  5849  0212  0836               	movf	??___flmul,w
  5850  0213  00F6               	movwf	__Umul8_16@multiplicand
  5851  0214  0833               	movf	___flmul@a+1,w
  5852  0215  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5853  021A  0877               	movf	?__Umul8_16+1,w
  5854  021B  1283               	bcf	3,5	;RP0=0, select bank0
  5855  021C  1303               	bcf	3,6	;RP1=0, select bank0
  5856  021D  00C7               	movwf	___flmul@temp+1
  5857  021E  0876               	movf	?__Umul8_16,w
  5858  021F  00C6               	movwf	___flmul@temp
  5859  0220                     l2300:
  5860  0220  0846               	movf	___flmul@temp,w
  5861  0221  00B6               	movwf	??___flmul
  5862  0222  0847               	movf	___flmul@temp+1,w
  5863  0223  00B7               	movwf	??___flmul+1
  5864  0224  01B8               	clrf	??___flmul+2
  5865  0225  01B9               	clrf	??___flmul+3
  5866  0226  0836               	movf	??___flmul,w
  5867  0227  07C2               	addwf	___flmul@prod,f
  5868  0228  0837               	movf	??___flmul+1,w
  5869  0229  1103               	clrz
  5870  022A  1803               	skipnc
  5871  022B  3E01               	addlw	1
  5872  022C  1903               	skipnz
  5873  022D  2A2F               	goto	u2971
  5874  022E  07C3               	addwf	___flmul@prod+1,f
  5875  022F                     u2971:
  5876  022F  0838               	movf	??___flmul+2,w
  5877  0230  1103               	clrz
  5878  0231  1803               	skipnc
  5879  0232  3E01               	addlw	1
  5880  0233  1903               	skipnz
  5881  0234  2A36               	goto	u2972
  5882  0235  07C4               	addwf	___flmul@prod+2,f
  5883  0236                     u2972:
  5884  0236  0839               	movf	??___flmul+3,w
  5885  0237  1103               	clrz
  5886  0238  1803               	skipnc
  5887  0239  3E01               	addlw	1
  5888  023A  1903               	skipnz
  5889  023B  2A3D               	goto	u2973
  5890  023C  07C5               	addwf	___flmul@prod+3,f
  5891  023D                     u2973:
  5892  023D  0830               	movf	___flmul@b+2,w
  5893  023E  00B6               	movwf	??___flmul
  5894  023F  0836               	movf	??___flmul,w
  5895  0240  00F6               	movwf	__Umul8_16@multiplicand
  5896  0241  0834               	movf	___flmul@a+2,w
  5897  0242  160A  118A  27D7  120A  118A  	fcall	__Umul8_16
  5898  0247  0877               	movf	?__Umul8_16+1,w
  5899  0248  1283               	bcf	3,5	;RP0=0, select bank0
  5900  0249  1303               	bcf	3,6	;RP1=0, select bank0
  5901  024A  00C7               	movwf	___flmul@temp+1
  5902  024B  0876               	movf	?__Umul8_16,w
  5903  024C  00C6               	movwf	___flmul@temp
  5904  024D                     l2302:
  5905  024D  0846               	movf	___flmul@temp,w
  5906  024E  00B6               	movwf	??___flmul
  5907  024F  0847               	movf	___flmul@temp+1,w
  5908  0250  00B7               	movwf	??___flmul+1
  5909  0251  01B8               	clrf	??___flmul+2
  5910  0252  01B9               	clrf	??___flmul+3
  5911  0253  3008               	movlw	8
  5912  0254                     u2985:
  5913  0254  1003               	clrc
  5914  0255  0DB6               	rlf	??___flmul,f
  5915  0256  0DB7               	rlf	??___flmul+1,f
  5916  0257  0DB8               	rlf	??___flmul+2,f
  5917  0258  0DB9               	rlf	??___flmul+3,f
  5918  0259                     u2980:
  5919  0259  3EFF               	addlw	-1
  5920  025A  1D03               	skipz
  5921  025B  2A54               	goto	u2985
  5922  025C  0836               	movf	??___flmul,w
  5923  025D  07C2               	addwf	___flmul@prod,f
  5924  025E  0837               	movf	??___flmul+1,w
  5925  025F  1103               	clrz
  5926  0260  1803               	skipnc
  5927  0261  3E01               	addlw	1
  5928  0262  1903               	skipnz
  5929  0263  2A65               	goto	u2991
  5930  0264  07C3               	addwf	___flmul@prod+1,f
  5931  0265                     u2991:
  5932  0265  0838               	movf	??___flmul+2,w
  5933  0266  1103               	clrz
  5934  0267  1803               	skipnc
  5935  0268  3E01               	addlw	1
  5936  0269  1903               	skipnz
  5937  026A  2A6C               	goto	u2992
  5938  026B  07C4               	addwf	___flmul@prod+2,f
  5939  026C                     u2992:
  5940  026C  0839               	movf	??___flmul+3,w
  5941  026D  1103               	clrz
  5942  026E  1803               	skipnc
  5943  026F  3E01               	addlw	1
  5944  0270  1903               	skipnz
  5945  0271  2A73               	goto	u2993
  5946  0272  07C5               	addwf	___flmul@prod+3,f
  5947  0273                     u2993:
  5948  0273                     l2304:
  5949  0273  083C               	movf	___flmul@grs,w
  5950  0274  00B6               	movwf	??___flmul
  5951  0275  083D               	movf	___flmul@grs+1,w
  5952  0276  00B7               	movwf	??___flmul+1
  5953  0277  083E               	movf	___flmul@grs+2,w
  5954  0278  00B8               	movwf	??___flmul+2
  5955  0279  083F               	movf	___flmul@grs+3,w
  5956  027A  00B9               	movwf	??___flmul+3
  5957  027B  3018               	movlw	24
  5958  027C                     u3005:
  5959  027C  1003               	clrc
  5960  027D  0CB9               	rrf	??___flmul+3,f
  5961  027E  0CB8               	rrf	??___flmul+2,f
  5962  027F  0CB7               	rrf	??___flmul+1,f
  5963  0280  0CB6               	rrf	??___flmul,f
  5964  0281                     u3000:
  5965  0281  3EFF               	addlw	-1
  5966  0282  1D03               	skipz
  5967  0283  2A7C               	goto	u3005
  5968  0284  0836               	movf	??___flmul,w
  5969  0285  07C2               	addwf	___flmul@prod,f
  5970  0286  0837               	movf	??___flmul+1,w
  5971  0287  1103               	clrz
  5972  0288  1803               	skipnc
  5973  0289  3E01               	addlw	1
  5974  028A  1903               	skipnz
  5975  028B  2A8D               	goto	u3011
  5976  028C  07C3               	addwf	___flmul@prod+1,f
  5977  028D                     u3011:
  5978  028D  0838               	movf	??___flmul+2,w
  5979  028E  1103               	clrz
  5980  028F  1803               	skipnc
  5981  0290  3E01               	addlw	1
  5982  0291  1903               	skipnz
  5983  0292  2A94               	goto	u3012
  5984  0293  07C4               	addwf	___flmul@prod+2,f
  5985  0294                     u3012:
  5986  0294  0839               	movf	??___flmul+3,w
  5987  0295  1103               	clrz
  5988  0296  1803               	skipnc
  5989  0297  3E01               	addlw	1
  5990  0298  1903               	skipnz
  5991  0299  2A9B               	goto	u3013
  5992  029A  07C5               	addwf	___flmul@prod+3,f
  5993  029B                     u3013:
  5994  029B                     l2306:
  5995  029B  3008               	movlw	8
  5996  029C  00B6               	movwf	??___flmul
  5997  029D                     u3025:
  5998  029D  1003               	clrc
  5999  029E  0DBC               	rlf	___flmul@grs,f
  6000  029F  0DBD               	rlf	___flmul@grs+1,f
  6001  02A0  0DBE               	rlf	___flmul@grs+2,f
  6002  02A1  0DBF               	rlf	___flmul@grs+3,f
  6003  02A2  0BB6               	decfsz	??___flmul,f
  6004  02A3  2A9D               	goto	u3025
  6005  02A4                     l2308:
  6006  02A4  0841               	movf	___flmul@bexp,w
  6007  02A5  0740               	addwf	___flmul@aexp,w
  6008  02A6  00B6               	movwf	??___flmul
  6009  02A7  01B7               	clrf	??___flmul+1
  6010  02A8  0DB7               	rlf	??___flmul+1,f
  6011  02A9  0836               	movf	??___flmul,w
  6012  02AA  3E82               	addlw	130
  6013  02AB  00C6               	movwf	___flmul@temp
  6014  02AC  0837               	movf	??___flmul+1,w
  6015  02AD  1803               	skipnc
  6016  02AE  3E01               	addlw	1
  6017  02AF  3EFF               	addlw	255
  6018  02B0  00C7               	movwf	___flmul@temp+1
  6019  02B1  2ACF               	goto	l2320
  6020  02B2                     l2310:
  6021  02B2  3001               	movlw	1
  6022  02B3  00B6               	movwf	??___flmul
  6023  02B4                     u3035:
  6024  02B4  1003               	clrc
  6025  02B5  0DC2               	rlf	___flmul@prod,f
  6026  02B6  0DC3               	rlf	___flmul@prod+1,f
  6027  02B7  0DC4               	rlf	___flmul@prod+2,f
  6028  02B8  0DC5               	rlf	___flmul@prod+3,f
  6029  02B9  0BB6               	decfsz	??___flmul,f
  6030  02BA  2AB4               	goto	u3035
  6031  02BB                     l2312:
  6032  02BB  1FBF               	btfss	___flmul@grs+3,7
  6033  02BC  2ABE               	goto	u3041
  6034  02BD  2ABF               	goto	u3040
  6035  02BE                     u3041:
  6036  02BE  2AC0               	goto	l2316
  6037  02BF                     u3040:
  6038  02BF                     l2314:
  6039  02BF  1442               	bsf	___flmul@prod,0
  6040  02C0                     l2316:
  6041  02C0  3001               	movlw	1
  6042  02C1  00B6               	movwf	??___flmul
  6043  02C2                     u3055:
  6044  02C2  1003               	clrc
  6045  02C3  0DBC               	rlf	___flmul@grs,f
  6046  02C4  0DBD               	rlf	___flmul@grs+1,f
  6047  02C5  0DBE               	rlf	___flmul@grs+2,f
  6048  02C6  0DBF               	rlf	___flmul@grs+3,f
  6049  02C7  0BB6               	decfsz	??___flmul,f
  6050  02C8  2AC2               	goto	u3055
  6051  02C9                     l2318:
  6052  02C9  30FF               	movlw	255
  6053  02CA  07C6               	addwf	___flmul@temp,f
  6054  02CB  1803               	skipnc
  6055  02CC  0AC7               	incf	___flmul@temp+1,f
  6056  02CD  30FF               	movlw	255
  6057  02CE  07C7               	addwf	___flmul@temp+1,f
  6058  02CF                     l2320:
  6059  02CF  1FC4               	btfss	___flmul@prod+2,7
  6060  02D0  2AD2               	goto	u3061
  6061  02D1  2AD3               	goto	u3060
  6062  02D2                     u3061:
  6063  02D2  2AB2               	goto	l2310
  6064  02D3                     u3060:
  6065  02D3                     l2322:
  6066  02D3  01C0               	clrf	___flmul@aexp
  6067  02D4                     l2324:
  6068  02D4  1FBF               	btfss	___flmul@grs+3,7
  6069  02D5  2AD7               	goto	u3071
  6070  02D6  2AD8               	goto	u3070
  6071  02D7                     u3071:
  6072  02D7  2AF4               	goto	l2332
  6073  02D8                     u3070:
  6074  02D8                     l2326:
  6075  02D8  30FF               	movlw	255
  6076  02D9  053C               	andwf	___flmul@grs,w
  6077  02DA  00B6               	movwf	??___flmul
  6078  02DB  30FF               	movlw	255
  6079  02DC  053D               	andwf	___flmul@grs+1,w
  6080  02DD  00B7               	movwf	??___flmul+1
  6081  02DE  30FF               	movlw	255
  6082  02DF  053E               	andwf	___flmul@grs+2,w
  6083  02E0  00B8               	movwf	??___flmul+2
  6084  02E1  307F               	movlw	127
  6085  02E2  053F               	andwf	___flmul@grs+3,w
  6086  02E3  00B9               	movwf	??___flmul+3
  6087  02E4  0839               	movf	??___flmul+3,w
  6088  02E5  0438               	iorwf	??___flmul+2,w
  6089  02E6  0437               	iorwf	??___flmul+1,w
  6090  02E7  0436               	iorwf	??___flmul,w
  6091  02E8  1903               	skipnz
  6092  02E9  2AEB               	goto	u3081
  6093  02EA  2AEC               	goto	u3080
  6094  02EB                     u3081:
  6095  02EB  2AEF               	goto	l704
  6096  02EC                     u3080:
  6097  02EC                     l2328:
  6098  02EC  01C0               	clrf	___flmul@aexp
  6099  02ED  0AC0               	incf	___flmul@aexp,f
  6100  02EE  2AF4               	goto	l2332
  6101  02EF                     l704:
  6102  02EF  1C42               	btfss	___flmul@prod,0
  6103  02F0  2AF2               	goto	u3091
  6104  02F1  2AF3               	goto	u3090
  6105  02F2                     u3091:
  6106  02F2  2AF4               	goto	l2332
  6107  02F3                     u3090:
  6108  02F3  2AEC               	goto	l2328
  6109  02F4                     l2332:
  6110  02F4  0840               	movf	___flmul@aexp,w
  6111  02F5  1903               	btfsc	3,2
  6112  02F6  2AF8               	goto	u3101
  6113  02F7  2AF9               	goto	u3100
  6114  02F8                     u3101:
  6115  02F8  2B2A               	goto	l2342
  6116  02F9                     u3100:
  6117  02F9                     l2334:
  6118  02F9  3001               	movlw	1
  6119  02FA  07C2               	addwf	___flmul@prod,f
  6120  02FB  3000               	movlw	0
  6121  02FC  1803               	skipnc
  6122  02FD  3001               	movlw	1
  6123  02FE  07C3               	addwf	___flmul@prod+1,f
  6124  02FF  3000               	movlw	0
  6125  0300  1803               	skipnc
  6126  0301  3001               	movlw	1
  6127  0302  07C4               	addwf	___flmul@prod+2,f
  6128  0303  3000               	movlw	0
  6129  0304  1803               	skipnc
  6130  0305  3001               	movlw	1
  6131  0306  07C5               	addwf	___flmul@prod+3,f
  6132  0307                     l2336:
  6133  0307  1C45               	btfss	___flmul@prod+3,0
  6134  0308  2B0A               	goto	u3111
  6135  0309  2B0B               	goto	u3110
  6136  030A                     u3111:
  6137  030A  2B2A               	goto	l2342
  6138  030B                     u3110:
  6139  030B                     l2338:
  6140  030B  0842               	movf	___flmul@prod,w
  6141  030C  00B6               	movwf	??___flmul
  6142  030D  0843               	movf	___flmul@prod+1,w
  6143  030E  00B7               	movwf	??___flmul+1
  6144  030F  0844               	movf	___flmul@prod+2,w
  6145  0310  00B8               	movwf	??___flmul+2
  6146  0311  0845               	movf	___flmul@prod+3,w
  6147  0312  00B9               	movwf	??___flmul+3
  6148  0313  3001               	movlw	1
  6149  0314  00BA               	movwf	??___flmul+4
  6150  0315                     u3125:
  6151  0315  0D39               	rlf	??___flmul+3,w
  6152  0316  0CB9               	rrf	??___flmul+3,f
  6153  0317  0CB8               	rrf	??___flmul+2,f
  6154  0318  0CB7               	rrf	??___flmul+1,f
  6155  0319  0CB6               	rrf	??___flmul,f
  6156  031A                     u3120:
  6157  031A  0BBA               	decfsz	??___flmul+4,f
  6158  031B  2B15               	goto	u3125
  6159  031C  0839               	movf	??___flmul+3,w
  6160  031D  00C5               	movwf	___flmul@prod+3
  6161  031E  0838               	movf	??___flmul+2,w
  6162  031F  00C4               	movwf	___flmul@prod+2
  6163  0320  0837               	movf	??___flmul+1,w
  6164  0321  00C3               	movwf	___flmul@prod+1
  6165  0322  0836               	movf	??___flmul,w
  6166  0323  00C2               	movwf	___flmul@prod
  6167  0324                     l2340:
  6168  0324  3001               	movlw	1
  6169  0325  07C6               	addwf	___flmul@temp,f
  6170  0326  1803               	skipnc
  6171  0327  0AC7               	incf	___flmul@temp+1,f
  6172  0328  3000               	movlw	0
  6173  0329  07C7               	addwf	___flmul@temp+1,f
  6174  032A                     l2342:
  6175  032A  0847               	movf	___flmul@temp+1,w
  6176  032B  3A80               	xorlw	128
  6177  032C  00FF               	movwf	btemp+1
  6178  032D  3080               	movlw	128
  6179  032E  027F               	subwf	btemp+1,w
  6180  032F  1D03               	skipz
  6181  0330  2B33               	goto	u3135
  6182  0331  30FF               	movlw	255
  6183  0332  0246               	subwf	___flmul@temp,w
  6184  0333                     u3135:
  6185  0333  1C03               	skipc
  6186  0334  2B36               	goto	u3131
  6187  0335  2B37               	goto	u3130
  6188  0336                     u3131:
  6189  0336  2B42               	goto	l2346
  6190  0337                     u3130:
  6191  0337                     l2344:
  6192  0337  307F               	movlw	127
  6193  0338  1283               	bcf	3,5	;RP0=0, select bank0
  6194  0339  1303               	bcf	3,6	;RP1=0, select bank0
  6195  033A  00C5               	movwf	___flmul@prod+3
  6196  033B  3080               	movlw	128
  6197  033C  00C4               	movwf	___flmul@prod+2
  6198  033D  3000               	movlw	0
  6199  033E  00C3               	movwf	___flmul@prod+1
  6200  033F  3000               	movlw	0
  6201  0340  00C2               	movwf	___flmul@prod
  6202  0341  2B77               	goto	l710
  6203  0342                     l2346:
  6204  0342  1283               	bcf	3,5	;RP0=0, select bank0
  6205  0343  1303               	bcf	3,6	;RP1=0, select bank0
  6206  0344  0847               	movf	___flmul@temp+1,w
  6207  0345  3A80               	xorlw	128
  6208  0346  00FF               	movwf	btemp+1
  6209  0347  3080               	movlw	128
  6210  0348  027F               	subwf	btemp+1,w
  6211  0349  1D03               	skipz
  6212  034A  2B4D               	goto	u3145
  6213  034B  3001               	movlw	1
  6214  034C  0246               	subwf	___flmul@temp,w
  6215  034D                     u3145:
  6216  034D  1803               	skipnc
  6217  034E  2B50               	goto	u3141
  6218  034F  2B51               	goto	u3140
  6219  0350                     u3141:
  6220  0350  2B5D               	goto	l2352
  6221  0351                     u3140:
  6222  0351                     l2348:
  6223  0351  3000               	movlw	0
  6224  0352  1283               	bcf	3,5	;RP0=0, select bank0
  6225  0353  1303               	bcf	3,6	;RP1=0, select bank0
  6226  0354  00C5               	movwf	___flmul@prod+3
  6227  0355  3000               	movlw	0
  6228  0356  00C4               	movwf	___flmul@prod+2
  6229  0357  3000               	movlw	0
  6230  0358  00C3               	movwf	___flmul@prod+1
  6231  0359  3000               	movlw	0
  6232  035A  00C2               	movwf	___flmul@prod
  6233  035B                     l2350:
  6234  035B  01BB               	clrf	___flmul@sign
  6235  035C  2B77               	goto	l710
  6236  035D                     l2352:
  6237  035D  1283               	bcf	3,5	;RP0=0, select bank0
  6238  035E  1303               	bcf	3,6	;RP1=0, select bank0
  6239  035F  0846               	movf	___flmul@temp,w
  6240  0360  00B6               	movwf	??___flmul
  6241  0361  0836               	movf	??___flmul,w
  6242  0362  00C1               	movwf	___flmul@bexp
  6243  0363  30FF               	movlw	255
  6244  0364  05C2               	andwf	___flmul@prod,f
  6245  0365  30FF               	movlw	255
  6246  0366  05C3               	andwf	___flmul@prod+1,f
  6247  0367  307F               	movlw	127
  6248  0368  05C4               	andwf	___flmul@prod+2,f
  6249  0369  3000               	movlw	0
  6250  036A  05C5               	andwf	___flmul@prod+3,f
  6251  036B                     l2354:
  6252  036B  1C41               	btfss	___flmul@bexp,0
  6253  036C  2B6E               	goto	u3151
  6254  036D  2B6F               	goto	u3150
  6255  036E                     u3151:
  6256  036E  2B70               	goto	l2358
  6257  036F                     u3150:
  6258  036F                     l2356:
  6259  036F  17C4               	bsf	___flmul@prod+2,7
  6260  0370                     l2358:
  6261  0370  0841               	movf	___flmul@bexp,w
  6262  0371  00B6               	movwf	??___flmul
  6263  0372  1003               	clrc
  6264  0373  0C36               	rrf	??___flmul,w
  6265  0374  00B7               	movwf	??___flmul+1
  6266  0375  0837               	movf	??___flmul+1,w
  6267  0376  00C5               	movwf	___flmul@prod+3
  6268  0377                     l710:
  6269  0377  083B               	movf	___flmul@sign,w
  6270  0378  00B6               	movwf	??___flmul
  6271  0379  0836               	movf	??___flmul,w
  6272  037A  04C5               	iorwf	___flmul@prod+3,f
  6273  037B                     l2360:
  6274  037B  0845               	movf	___flmul@prod+3,w
  6275  037C  00B1               	movwf	?___flmul+3
  6276  037D  0844               	movf	___flmul@prod+2,w
  6277  037E  00B0               	movwf	?___flmul+2
  6278  037F  0843               	movf	___flmul@prod+1,w
  6279  0380  00AF               	movwf	?___flmul+1
  6280  0381  0842               	movf	___flmul@prod,w
  6281  0382  00AE               	movwf	?___flmul
  6282  0383                     l698:
  6283  0383  0008               	return
  6284  0384                     __end_of___flmul:
  6285                           
  6286                           	psect	text18
  6287  17D7                     __ptext18:	
  6288 ;; *************** function __Umul8_16 *****************
  6289 ;; Defined at:
  6290 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  multiplier      1    wreg     unsigned char 
  6293 ;;  multiplicand    1    6[COMMON] unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  multiplier      1    6[BANK0 ] unsigned char 
  6296 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  6297 ;;  product         2    2[BANK0 ] unsigned int 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  2    6[COMMON] unsigned int 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6307 ;;      Params:         2       0       0       0       0
  6308 ;;      Locals:         0       5       0       0       0
  6309 ;;      Temps:          0       2       0       0       0
  6310 ;;      Totals:         2       7       0       0       0
  6311 ;;Total ram usage:        9 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		___flmul
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function __Umul8_16
  6323  17D7                     __Umul8_16:
  6324                           
  6325                           ;incstack = 0
  6326                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6327                           ;__Umul8_16@multiplier stored from wreg
  6328  17D7  1283               	bcf	3,5	;RP0=0, select bank0
  6329  17D8  1303               	bcf	3,6	;RP1=0, select bank0
  6330  17D9  00A6               	movwf	__Umul8_16@multiplier
  6331  17DA                     l2092:
  6332  17DA  01A2               	clrf	__Umul8_16@product
  6333  17DB  01A3               	clrf	__Umul8_16@product+1
  6334  17DC                     l2094:
  6335  17DC  0876               	movf	__Umul8_16@multiplicand,w
  6336  17DD  00A0               	movwf	??__Umul8_16
  6337  17DE  01A1               	clrf	??__Umul8_16+1
  6338  17DF  0820               	movf	??__Umul8_16,w
  6339  17E0  00A4               	movwf	__Umul8_16@word_mpld
  6340  17E1  0821               	movf	??__Umul8_16+1,w
  6341  17E2  00A5               	movwf	__Umul8_16@word_mpld+1
  6342  17E3                     l2096:
  6343  17E3  1C26               	btfss	__Umul8_16@multiplier,0
  6344  17E4  2FE6               	goto	u2521
  6345  17E5  2FE7               	goto	u2520
  6346  17E6                     u2521:
  6347  17E6  2FED               	goto	l717
  6348  17E7                     u2520:
  6349  17E7                     l2098:
  6350  17E7  0824               	movf	__Umul8_16@word_mpld,w
  6351  17E8  07A2               	addwf	__Umul8_16@product,f
  6352  17E9  1803               	skipnc
  6353  17EA  0AA3               	incf	__Umul8_16@product+1,f
  6354  17EB  0825               	movf	__Umul8_16@word_mpld+1,w
  6355  17EC  07A3               	addwf	__Umul8_16@product+1,f
  6356  17ED                     l717:
  6357  17ED  3001               	movlw	1
  6358  17EE                     u2535:
  6359  17EE  1003               	clrc
  6360  17EF  0DA4               	rlf	__Umul8_16@word_mpld,f
  6361  17F0  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  6362  17F1  3EFF               	addlw	-1
  6363  17F2  1D03               	skipz
  6364  17F3  2FEE               	goto	u2535
  6365  17F4  1003               	clrc
  6366  17F5  0CA6               	rrf	__Umul8_16@multiplier,f
  6367  17F6                     l2100:
  6368  17F6  0826               	movf	__Umul8_16@multiplier,w
  6369  17F7  1D03               	btfss	3,2
  6370  17F8  2FFA               	goto	u2541
  6371  17F9  2FFB               	goto	u2540
  6372  17FA                     u2541:
  6373  17FA  2FE3               	goto	l2096
  6374  17FB                     u2540:
  6375  17FB                     l2102:
  6376  17FB  0823               	movf	__Umul8_16@product+1,w
  6377  17FC  00F7               	movwf	?__Umul8_16+1
  6378  17FD  0822               	movf	__Umul8_16@product,w
  6379  17FE  00F6               	movwf	?__Umul8_16
  6380  17FF                     l719:
  6381  17FF  0008               	return
  6382  1800                     __end_of__Umul8_16:
  6383                           
  6384                           	psect	text19
  6385  177C                     __ptext19:	
  6386 ;; *************** function _I2C_Start *****************
  6387 ;; Defined at:
  6388 ;;		line 24 in file "I2C.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  add             1    wreg     unsigned char 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  add             1    7[COMMON] unsigned char 
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0, pclath, cstack
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6402 ;;      Params:         0       0       0       0       0
  6403 ;;      Locals:         1       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0
  6405 ;;      Totals:         1       0       0       0       0
  6406 ;;Total ram usage:        1 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    3
  6409 ;; This function calls:
  6410 ;;		_I2C_Master_Wait
  6411 ;;		_I2C_Master_Write
  6412 ;; This function is called by:
  6413 ;;		_I2C_Read_MPU
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           
  6418                           ;psect for function _I2C_Start
  6419  177C                     _I2C_Start:
  6420                           
  6421                           ;incstack = 0
  6422                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6423                           ;I2C_Start@add stored from wreg
  6424  177C  00F7               	movwf	I2C_Start@add
  6425  177D                     l2130:
  6426                           
  6427                           ;I2C.c: 25:     I2C_Master_Wait();
  6428  177D  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  6429  1782                     l2132:
  6430                           
  6431                           ;I2C.c: 26:     SEN = 1;
  6432  1782  1683               	bsf	3,5	;RP0=1, select bank1
  6433  1783  1303               	bcf	3,6	;RP1=0, select bank1
  6434  1784  1411               	bsf	17,0	;volatile
  6435                           
  6436                           ;I2C.c: 27:     I2C_Master_Write(add);
  6437  1785  0877               	movf	I2C_Start@add,w
  6438  1786  160A  118A  276C  160A  118A  	fcall	_I2C_Master_Write
  6439  178B                     l131:
  6440  178B  0008               	return
  6441  178C                     __end_of_I2C_Start:
  6442                           
  6443                           	psect	text20
  6444  0859                     __ptext20:	
  6445 ;; *************** function _I2C_Read *****************
  6446 ;; Defined at:
  6447 ;;		line 70 in file "I2C.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  ACK_NACK        1    wreg     unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  ACK_NACK        1    0[BANK0 ] unsigned char 
  6452 ;;  Data            1    1[BANK0 ] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0, pclath, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6462 ;;      Params:         0       0       0       0       0
  6463 ;;      Locals:         0       2       0       0       0
  6464 ;;      Temps:          1       0       0       0       0
  6465 ;;      Totals:         1       2       0       0       0
  6466 ;;Total ram usage:        3 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    2
  6469 ;; This function calls:
  6470 ;;		_I2C_ACK
  6471 ;;		_I2C_Master_Wait
  6472 ;;		_I2C_NACK
  6473 ;; This function is called by:
  6474 ;;		_I2C_Read_MPU
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           
  6479                           ;psect for function _I2C_Read
  6480  0859                     _I2C_Read:
  6481                           
  6482                           ;incstack = 0
  6483                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  6484                           ;I2C_Read@ACK_NACK stored from wreg
  6485  0859  1283               	bcf	3,5	;RP0=0, select bank0
  6486  085A  1303               	bcf	3,6	;RP1=0, select bank0
  6487  085B  00A0               	movwf	I2C_Read@ACK_NACK
  6488  085C                     l2138:
  6489                           
  6490                           ;I2C.c: 71:     I2C_Master_Wait();
  6491  085C  160A  118A  2745  120A  158A  	fcall	_I2C_Master_Wait
  6492  0861                     l2140:
  6493                           
  6494                           ;I2C.c: 73:     unsigned char Data;;I2C.c: 74:     RCEN = 1;
  6495  0861  1683               	bsf	3,5	;RP0=1, select bank1
  6496  0862  1303               	bcf	3,6	;RP1=0, select bank1
  6497  0863  1591               	bsf	17,3	;volatile
  6498  0864                     l164:	
  6499                           ;I2C.c: 75:     while (!BF);
  6500                           
  6501  0864  1C14               	btfss	20,0	;volatile
  6502  0865  2867               	goto	u2581
  6503  0866  2868               	goto	u2580
  6504  0867                     u2581:
  6505  0867  2864               	goto	l164
  6506  0868                     u2580:
  6507  0868                     l2142:
  6508                           
  6509                           ;I2C.c: 76:     Data = SSPBUF;
  6510  0868  1283               	bcf	3,5	;RP0=0, select bank0
  6511  0869  1303               	bcf	3,6	;RP1=0, select bank0
  6512  086A  0813               	movf	19,w	;volatile
  6513  086B  00F6               	movwf	??_I2C_Read
  6514  086C  0876               	movf	??_I2C_Read,w
  6515  086D  00A1               	movwf	I2C_Read@Data
  6516  086E                     l2144:
  6517                           
  6518                           ;I2C.c: 77:     if (ACK_NACK == 0)
  6519  086E  0820               	movf	I2C_Read@ACK_NACK,w
  6520  086F  1D03               	btfss	3,2
  6521  0870  2872               	goto	u2591
  6522  0871  2873               	goto	u2590
  6523  0872                     u2591:
  6524  0872  2879               	goto	l2148
  6525  0873                     u2590:
  6526  0873                     l2146:
  6527                           
  6528                           ;I2C.c: 78:         I2C_ACK();
  6529  0873  160A  118A  2727  120A  158A  	fcall	_I2C_ACK
  6530  0878  287E               	goto	l169
  6531  0879                     l2148:
  6532                           
  6533                           ;I2C.c: 80:         I2C_NACK();
  6534  0879  160A  118A  2730  120A  158A  	fcall	_I2C_NACK
  6535  087E                     l169:
  6536  087E  1283               	bcf	3,5	;RP0=0, select bank0
  6537  087F  1303               	bcf	3,6	;RP1=0, select bank0
  6538  0880  1D8C               	btfss	12,3	;volatile
  6539  0881  2883               	goto	u2601
  6540  0882  2884               	goto	u2600
  6541  0883                     u2601:
  6542  0883  287E               	goto	l169
  6543  0884                     u2600:
  6544  0884                     l171:
  6545                           
  6546                           ;I2C.c: 82:     SSPIF = 0;
  6547  0884  118C               	bcf	12,3	;volatile
  6548  0885                     l2150:
  6549                           
  6550                           ;I2C.c: 83:     return Data;
  6551  0885  0821               	movf	I2C_Read@Data,w
  6552  0886                     l172:
  6553  0886  0008               	return
  6554  0887                     __end_of_I2C_Read:
  6555                           
  6556                           	psect	text21
  6557  1730                     __ptext21:	
  6558 ;; *************** function _I2C_NACK *****************
  6559 ;; Defined at:
  6560 ;;		line 46 in file "I2C.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		None
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6574 ;;      Params:         0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    1
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_I2C_Read
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function _I2C_NACK
  6590  1730                     _I2C_NACK:
  6591  1730                     l1838:	
  6592                           ;incstack = 0
  6593                           ; Regs used in _I2C_NACK: []
  6594                           
  6595                           
  6596                           ;I2C.c: 47:     ACKDT = 1;
  6597  1730  1683               	bsf	3,5	;RP0=1, select bank1
  6598  1731  1303               	bcf	3,6	;RP1=0, select bank1
  6599  1732  1691               	bsf	17,5	;volatile
  6600                           
  6601                           ;I2C.c: 48:     ACKEN = 1;
  6602  1733  1611               	bsf	17,4	;volatile
  6603  1734                     l146:	
  6604                           ;I2C.c: 49:     while (ACKEN);
  6605                           
  6606  1734  1A11               	btfsc	17,4	;volatile
  6607  1735  2F37               	goto	u1881
  6608  1736  2F38               	goto	u1880
  6609  1737                     u1881:
  6610  1737  2F34               	goto	l146
  6611  1738                     u1880:
  6612  1738                     l149:
  6613  1738  0008               	return
  6614  1739                     __end_of_I2C_NACK:
  6615                           
  6616                           	psect	text22
  6617  1727                     __ptext22:	
  6618 ;; *************** function _I2C_ACK *****************
  6619 ;; Defined at:
  6620 ;;		line 40 in file "I2C.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      void 
  6627 ;; Registers used:
  6628 ;;		None
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6634 ;;      Params:         0       0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0
  6637 ;;      Totals:         0       0       0       0       0
  6638 ;;Total ram usage:        0 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    1
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_I2C_Read
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           
  6649                           ;psect for function _I2C_ACK
  6650  1727                     _I2C_ACK:
  6651  1727                     l1836:	
  6652                           ;incstack = 0
  6653                           ; Regs used in _I2C_ACK: []
  6654                           
  6655                           
  6656                           ;I2C.c: 41:     ACKDT = 0;
  6657  1727  1683               	bsf	3,5	;RP0=1, select bank1
  6658  1728  1303               	bcf	3,6	;RP1=0, select bank1
  6659  1729  1291               	bcf	17,5	;volatile
  6660                           
  6661                           ;I2C.c: 42:     ACKEN = 1;
  6662  172A  1611               	bsf	17,4	;volatile
  6663  172B                     l140:	
  6664                           ;I2C.c: 43:     while (ACKEN);
  6665                           
  6666  172B  1A11               	btfsc	17,4	;volatile
  6667  172C  2F2E               	goto	u1871
  6668  172D  2F2F               	goto	u1870
  6669  172E                     u1871:
  6670  172E  2F2B               	goto	l140
  6671  172F                     u1870:
  6672  172F                     l143:
  6673  172F  0008               	return
  6674  1730                     __end_of_I2C_ACK:
  6675                           
  6676                           	psect	text23
  6677  171E                     __ptext23:	
  6678 ;; *************** function _I2C_Master_RepeatedStart *****************
  6679 ;; Defined at:
  6680 ;;		line 30 in file "I2C.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;		None
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  1    wreg      void 
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0, pclath, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6694 ;;      Params:         0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0
  6696 ;;      Temps:          0       0       0       0       0
  6697 ;;      Totals:         0       0       0       0       0
  6698 ;;Total ram usage:        0 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    2
  6701 ;; This function calls:
  6702 ;;		_I2C_Master_Wait
  6703 ;; This function is called by:
  6704 ;;		_I2C_Read_MPU
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           
  6709                           ;psect for function _I2C_Master_RepeatedStart
  6710  171E                     _I2C_Master_RepeatedStart:
  6711  171E                     l2134:	
  6712                           ;incstack = 0
  6713                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6714                           
  6715                           
  6716                           ;I2C.c: 31:     I2C_Master_Wait();
  6717  171E  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  6718  1723                     l2136:
  6719                           
  6720                           ;I2C.c: 32:     RSEN = 1;
  6721  1723  1683               	bsf	3,5	;RP0=1, select bank1
  6722  1724  1303               	bcf	3,6	;RP1=0, select bank1
  6723  1725  1491               	bsf	17,1	;volatile
  6724  1726                     l134:
  6725  1726  0008               	return
  6726  1727                     __end_of_I2C_Master_RepeatedStart:
  6727                           
  6728                           	psect	text24
  6729  1752                     __ptext24:	
  6730 ;; *************** function _I2C_Master_Init *****************
  6731 ;; Defined at:
  6732 ;;		line 6 in file "I2C.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;		None
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6746 ;;      Params:         0       0       0       0       0
  6747 ;;      Locals:         0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0
  6749 ;;      Totals:         0       0       0       0       0
  6750 ;;Total ram usage:        0 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    1
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_main
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function _I2C_Master_Init
  6762  1752                     _I2C_Master_Init:
  6763  1752                     l2546:	
  6764                           ;incstack = 0
  6765                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  6766                           
  6767                           
  6768                           ;I2C.c: 7:     SSPCON = 0x28;
  6769  1752  3028               	movlw	40
  6770  1753  1283               	bcf	3,5	;RP0=0, select bank0
  6771  1754  1303               	bcf	3,6	;RP1=0, select bank0
  6772  1755  0094               	movwf	20	;volatile
  6773  1756                     l2548:
  6774                           
  6775                           ;I2C.c: 8:     SSPCON2 = 0x00;
  6776  1756  1683               	bsf	3,5	;RP0=1, select bank1
  6777  1757  1303               	bcf	3,6	;RP1=0, select bank1
  6778  1758  0191               	clrf	17	;volatile
  6779  1759                     l2550:
  6780                           
  6781                           ;I2C.c: 9:     SSPSTAT = 0x00;
  6782  1759  0194               	clrf	20	;volatile
  6783                           
  6784                           ;I2C.c: 10:     SSPADD = ((4000000 / 4) / 100000) - 1;
  6785  175A  3009               	movlw	9
  6786  175B  0093               	movwf	19	;volatile
  6787  175C                     l2552:
  6788                           
  6789                           ;I2C.c: 11:     TRISCbits.TRISC3 = 1;
  6790  175C  1587               	bsf	7,3	;volatile
  6791  175D                     l2554:
  6792                           
  6793                           ;I2C.c: 12:     TRISCbits.TRISC4 = 1;
  6794  175D  1607               	bsf	7,4	;volatile
  6795  175E                     l119:
  6796  175E  0008               	return
  6797  175F                     __end_of_I2C_Master_Init:
  6798                           
  6799                           	psect	text25
  6800  0AC0                     __ptext25:	
  6801 ;; *************** function _I2C_MPU_Init *****************
  6802 ;; Defined at:
  6803 ;;		line 125 in file "main.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      void 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0, pclath, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6817 ;;      Params:         0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0
  6820 ;;      Totals:         0       0       0       0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    3
  6824 ;; This function calls:
  6825 ;;		_I2C_Master_Start
  6826 ;;		_I2C_Master_Stop
  6827 ;;		_I2C_Master_Write
  6828 ;; This function is called by:
  6829 ;;		_main
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           
  6834                           ;psect for function _I2C_MPU_Init
  6835  0AC0                     _I2C_MPU_Init:
  6836  0AC0                     l2556:	
  6837                           ;incstack = 0
  6838                           ; Regs used in _I2C_MPU_Init: [wreg+status,2+status,0+pclath+cstack]
  6839                           
  6840                           
  6841                           ;main.c: 127:     I2C_Master_Start();
  6842  0AC0  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6843                           
  6844                           ;main.c: 128:     I2C_Master_Write(0xD0);
  6845  0AC5  30D0               	movlw	208
  6846  0AC6  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6847                           
  6848                           ;main.c: 129:     I2C_Master_Write(0x6B);
  6849  0ACB  306B               	movlw	107
  6850  0ACC  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6851                           
  6852                           ;main.c: 130:     I2C_Master_Write(0x01);
  6853  0AD1  3001               	movlw	1
  6854  0AD2  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6855                           
  6856                           ;main.c: 131:     I2C_Master_Stop();
  6857  0AD7  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6858                           
  6859                           ;main.c: 133:     I2C_Master_Start();
  6860  0ADC  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6861                           
  6862                           ;main.c: 134:     I2C_Master_Write(0xD0);
  6863  0AE1  30D0               	movlw	208
  6864  0AE2  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6865                           
  6866                           ;main.c: 135:     I2C_Master_Write(0x19);
  6867  0AE7  3019               	movlw	25
  6868  0AE8  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6869                           
  6870                           ;main.c: 136:     I2C_Master_Write(0x07);
  6871  0AED  3007               	movlw	7
  6872  0AEE  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6873                           
  6874                           ;main.c: 137:     I2C_Master_Stop();
  6875  0AF3  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6876                           
  6877                           ;main.c: 139:     I2C_Master_Start();
  6878  0AF8  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6879                           
  6880                           ;main.c: 140:     I2C_Master_Write(0xD0);
  6881  0AFD  30D0               	movlw	208
  6882  0AFE  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6883                           
  6884                           ;main.c: 141:     I2C_Master_Write(0x1A);
  6885  0B03  301A               	movlw	26
  6886  0B04  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6887                           
  6888                           ;main.c: 142:     I2C_Master_Write(0x00);
  6889  0B09  3000               	movlw	0
  6890  0B0A  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6891                           
  6892                           ;main.c: 143:     I2C_Master_Stop();
  6893  0B0F  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6894                           
  6895                           ;main.c: 145:     I2C_Master_Start();
  6896  0B14  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6897                           
  6898                           ;main.c: 146:     I2C_Master_Write(0xD0);
  6899  0B19  30D0               	movlw	208
  6900  0B1A  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6901                           
  6902                           ;main.c: 147:     I2C_Master_Write(0x1B);
  6903  0B1F  301B               	movlw	27
  6904  0B20  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6905                           
  6906                           ;main.c: 148:     I2C_Master_Write(0x00);
  6907  0B25  3000               	movlw	0
  6908  0B26  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6909                           
  6910                           ;main.c: 149:     I2C_Master_Stop();
  6911  0B2B  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6912                           
  6913                           ;main.c: 151:     I2C_Master_Start();
  6914  0B30  160A  118A  270C  120A  158A  	fcall	_I2C_Master_Start
  6915                           
  6916                           ;main.c: 152:     I2C_Master_Write(0xD0);
  6917  0B35  30D0               	movlw	208
  6918  0B36  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6919                           
  6920                           ;main.c: 153:     I2C_Master_Write(0x1C);
  6921  0B3B  301C               	movlw	28
  6922  0B3C  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6923                           
  6924                           ;main.c: 154:     I2C_Master_Write(0x00);
  6925  0B41  3000               	movlw	0
  6926  0B42  160A  118A  276C  120A  158A  	fcall	_I2C_Master_Write
  6927                           
  6928                           ;main.c: 155:     I2C_Master_Stop();
  6929  0B47  160A  118A  2715  120A  158A  	fcall	_I2C_Master_Stop
  6930  0B4C                     l73:
  6931  0B4C  0008               	return
  6932  0B4D                     __end_of_I2C_MPU_Init:
  6933                           
  6934                           	psect	text26
  6935  176C                     __ptext26:	
  6936 ;; *************** function _I2C_Master_Write *****************
  6937 ;; Defined at:
  6938 ;;		line 52 in file "I2C.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  data            1    wreg     unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  data            1    6[COMMON] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      unsigned char 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0, pclath, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6952 ;;      Params:         0       0       0       0       0
  6953 ;;      Locals:         1       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0
  6955 ;;      Totals:         1       0       0       0       0
  6956 ;;Total ram usage:        1 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    2
  6959 ;; This function calls:
  6960 ;;		_I2C_Master_Wait
  6961 ;; This function is called by:
  6962 ;;		_I2C_MPU_Init
  6963 ;;		_I2C_Read_MPU
  6964 ;;		_I2C_Start
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _I2C_Master_Write
  6970  176C                     _I2C_Master_Write:
  6971                           
  6972                           ;incstack = 0
  6973                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6974                           ;I2C_Master_Write@data stored from wreg
  6975  176C  00F6               	movwf	I2C_Master_Write@data
  6976  176D                     l1832:
  6977                           
  6978                           ;I2C.c: 53:     I2C_Master_Wait();
  6979  176D  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  6980  1772                     l1834:
  6981                           
  6982                           ;I2C.c: 54:     SSPBUF = data;
  6983  1772  0876               	movf	I2C_Master_Write@data,w
  6984  1773  1283               	bcf	3,5	;RP0=0, select bank0
  6985  1774  1303               	bcf	3,6	;RP1=0, select bank0
  6986  1775  0093               	movwf	19	;volatile
  6987  1776                     l152:	
  6988                           ;I2C.c: 55:     while (!SSPIF);
  6989                           
  6990  1776  1D8C               	btfss	12,3	;volatile
  6991  1777  2F79               	goto	u1861
  6992  1778  2F7A               	goto	u1860
  6993  1779                     u1861:
  6994  1779  2F76               	goto	l152
  6995  177A                     u1860:
  6996  177A                     l154:
  6997                           
  6998                           ;I2C.c: 56:     SSPIF = 0;
  6999  177A  118C               	bcf	12,3	;volatile
  7000  177B                     l155:	
  7001                           ;I2C.c: 57:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  7002                           
  7003  177B  0008               	return
  7004  177C                     __end_of_I2C_Master_Write:
  7005                           
  7006                           	psect	text27
  7007  1715                     __ptext27:	
  7008 ;; *************** function _I2C_Master_Stop *****************
  7009 ;; Defined at:
  7010 ;;		line 35 in file "I2C.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0, pclath, cstack
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7024 ;;      Params:         0       0       0       0       0
  7025 ;;      Locals:         0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0
  7027 ;;      Totals:         0       0       0       0       0
  7028 ;;Total ram usage:        0 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    2
  7031 ;; This function calls:
  7032 ;;		_I2C_Master_Wait
  7033 ;; This function is called by:
  7034 ;;		_I2C_MPU_Init
  7035 ;;		_I2C_Read_MPU
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function _I2C_Master_Stop
  7041  1715                     _I2C_Master_Stop:
  7042  1715                     l2126:	
  7043                           ;incstack = 0
  7044                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7045                           
  7046                           
  7047                           ;I2C.c: 36:     I2C_Master_Wait();
  7048  1715  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  7049  171A                     l2128:
  7050                           
  7051                           ;I2C.c: 37:     PEN = 1;
  7052  171A  1683               	bsf	3,5	;RP0=1, select bank1
  7053  171B  1303               	bcf	3,6	;RP1=0, select bank1
  7054  171C  1511               	bsf	17,2	;volatile
  7055  171D                     l137:
  7056  171D  0008               	return
  7057  171E                     __end_of_I2C_Master_Stop:
  7058                           
  7059                           	psect	text28
  7060  170C                     __ptext28:	
  7061 ;; *************** function _I2C_Master_Start *****************
  7062 ;; Defined at:
  7063 ;;		line 19 in file "I2C.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      void 
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0, pclath, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7077 ;;      Params:         0       0       0       0       0
  7078 ;;      Locals:         0       0       0       0       0
  7079 ;;      Temps:          0       0       0       0       0
  7080 ;;      Totals:         0       0       0       0       0
  7081 ;;Total ram usage:        0 bytes
  7082 ;; Hardware stack levels used:    1
  7083 ;; Hardware stack levels required when called:    2
  7084 ;; This function calls:
  7085 ;;		_I2C_Master_Wait
  7086 ;; This function is called by:
  7087 ;;		_I2C_MPU_Init
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           
  7092                           ;psect for function _I2C_Master_Start
  7093  170C                     _I2C_Master_Start:
  7094  170C                     l2122:	
  7095                           ;incstack = 0
  7096                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7097                           
  7098                           
  7099                           ;I2C.c: 20:     I2C_Master_Wait();
  7100  170C  160A  118A  2745  160A  118A  	fcall	_I2C_Master_Wait
  7101  1711                     l2124:
  7102                           
  7103                           ;I2C.c: 21:     SEN = 1;
  7104  1711  1683               	bsf	3,5	;RP0=1, select bank1
  7105  1712  1303               	bcf	3,6	;RP1=0, select bank1
  7106  1713  1411               	bsf	17,0	;volatile
  7107  1714                     l128:
  7108  1714  0008               	return
  7109  1715                     __end_of_I2C_Master_Start:
  7110                           
  7111                           	psect	text29
  7112  1745                     __ptext29:	
  7113 ;; *************** function _I2C_Master_Wait *****************
  7114 ;; Defined at:
  7115 ;;		line 15 in file "I2C.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;		None
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, status,2
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7129 ;;      Params:         0       0       0       0       0
  7130 ;;      Locals:         0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0
  7132 ;;      Totals:         0       0       0       0       0
  7133 ;;Total ram usage:        0 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:    1
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		_I2C_Master_Start
  7140 ;;		_I2C_Start
  7141 ;;		_I2C_Master_RepeatedStart
  7142 ;;		_I2C_Master_Stop
  7143 ;;		_I2C_Master_Write
  7144 ;;		_I2C_Read
  7145 ;;		_I2C_Read_Byte
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           
  7150                           ;psect for function _I2C_Master_Wait
  7151  1745                     _I2C_Master_Wait:
  7152  1745                     l1828:	
  7153                           ;incstack = 0
  7154                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7155                           
  7156  1745                     l122:	
  7157                           ;I2C.c: 16:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7158                           
  7159  1745  1683               	bsf	3,5	;RP0=1, select bank1
  7160  1746  1303               	bcf	3,6	;RP1=0, select bank1
  7161  1747  1914               	btfsc	20,2	;volatile
  7162  1748  2F4A               	goto	u1841
  7163  1749  2F4B               	goto	u1840
  7164  174A                     u1841:
  7165  174A  2F45               	goto	l122
  7166  174B                     u1840:
  7167  174B                     l1830:
  7168  174B  0811               	movf	17,w	;volatile
  7169  174C  391F               	andlw	31
  7170  174D  1D03               	btfss	3,2
  7171  174E  2F50               	goto	u1851
  7172  174F  2F51               	goto	u1850
  7173  1750                     u1851:
  7174  1750  2F45               	goto	l122
  7175  1751                     u1850:
  7176  1751                     l125:
  7177  1751  0008               	return
  7178  1752                     __end_of_I2C_Master_Wait:
  7179                           
  7180                           	psect	text30
  7181  0887                     __ptext30:	
  7182 ;; *************** function _isr *****************
  7183 ;; Defined at:
  7184 ;;		line 53 in file "main.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  opcionUART      1    5[COMMON] unsigned char 
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7198 ;;      Params:         0       0       0       0       0
  7199 ;;      Locals:         1       0       0       0       0
  7200 ;;      Temps:          5       0       0       0       0
  7201 ;;      Totals:         6       0       0       0       0
  7202 ;;Total ram usage:        6 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; This function calls:
  7205 ;;		Nothing
  7206 ;; This function is called by:
  7207 ;;		Interrupt level 1
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _isr
  7213  0887                     _isr:
  7214  0887                     i1l1698:
  7215                           
  7216                           ;main.c: 54:         buffer = ftoa(valor_arreglado[1], status);
  7217  0887  1283               	bcf	3,5	;RP0=0, select bank0
  7218  0888  1303               	bcf	3,6	;RP1=0, select bank0
  7219  0889  1E8C               	btfss	12,5	;volatile
  7220  088A  288C               	goto	u178_21
  7221  088B  288D               	goto	u178_20
  7222  088C                     u178_21:
  7223  088C  28B3               	goto	i1l62
  7224  088D                     u178_20:
  7225  088D                     i1l1700:
  7226                           
  7227                           ;main.c: 55:         UARTSendString(" ", 10);
  7228  088D  081A               	movf	26,w	;volatile
  7229  088E  00F0               	movwf	??_isr
  7230  088F  0870               	movf	??_isr,w
  7231  0890  00F5               	movwf	isr@opcionUART
  7232                           
  7233                           ;main.c: 56:         UARTSendString(buffer, 6);
  7234  0891  289D               	goto	i1l1712
  7235  0892                     i1l1702:
  7236                           
  7237                           ;main.c: 59:         UARTSendString(" ", 10);
  7238  0892  0185               	clrf	5	;volatile
  7239                           
  7240                           ;main.c: 60:         UARTSendString(buffer, 6);
  7241  0893  28B3               	goto	i1l62
  7242  0894                     i1l1704:
  7243  0894  3001               	movlw	1
  7244  0895  0085               	movwf	5	;volatile
  7245  0896  28B3               	goto	i1l62
  7246  0897                     i1l1706:
  7247  0897  3002               	movlw	2
  7248  0898  0085               	movwf	5	;volatile
  7249  0899  28B3               	goto	i1l62
  7250  089A                     i1l1708:
  7251  089A  3003               	movlw	3
  7252  089B  0085               	movwf	5	;volatile
  7253  089C  28B3               	goto	i1l62
  7254  089D                     i1l1712:
  7255  089D  0875               	movf	isr@opcionUART,w
  7256  089E  00F0               	movwf	??_isr
  7257  089F  01F1               	clrf	??_isr+1
  7258                           
  7259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7260                           ; Switch size 1, requested type "simple"
  7261                           ; Number of cases is 1, Range of values is 0 to 0
  7262                           ; switch strategies available:
  7263                           ; Name         Instructions Cycles
  7264                           ; simple_byte            4     3 (average)
  7265                           ; direct_byte           11     8 (fixed)
  7266                           ; jumptable            260     6 (fixed)
  7267                           ;	Chosen strategy is simple_byte
  7268  08A0  0871               	movf	??_isr+1,w
  7269  08A1  3A00               	xorlw	0	; case 0
  7270  08A2  1903               	skipnz
  7271  08A3  28A5               	goto	i1l2718
  7272  08A4  28B3               	goto	i1l62
  7273  08A5                     i1l2718:
  7274                           
  7275                           ; Switch size 1, requested type "simple"
  7276                           ; Number of cases is 4, Range of values is 97 to 100
  7277                           ; switch strategies available:
  7278                           ; Name         Instructions Cycles
  7279                           ; simple_byte           13     7 (average)
  7280                           ; direct_byte           23    11 (fixed)
  7281                           ; jumptable            263     9 (fixed)
  7282                           ;	Chosen strategy is simple_byte
  7283  08A5  0870               	movf	??_isr,w
  7284  08A6  3A61               	xorlw	97	; case 97
  7285  08A7  1903               	skipnz
  7286  08A8  2892               	goto	i1l1702
  7287  08A9  3A03               	xorlw	3	; case 98
  7288  08AA  1903               	skipnz
  7289  08AB  2894               	goto	i1l1704
  7290  08AC  3A01               	xorlw	1	; case 99
  7291  08AD  1903               	skipnz
  7292  08AE  2897               	goto	i1l1706
  7293  08AF  3A07               	xorlw	7	; case 100
  7294  08B0  1903               	skipnz
  7295  08B1  289A               	goto	i1l1708
  7296  08B2  28B3               	goto	i1l62
  7297  08B3                     i1l62:
  7298  08B3  0874               	movf	??_isr+4,w
  7299  08B4  008A               	movwf	10
  7300  08B5  0873               	movf	??_isr+3,w
  7301  08B6  0084               	movwf	4
  7302  08B7  0E72               	swapf	??_isr+2,w
  7303  08B8  0083               	movwf	3
  7304  08B9  0EFE               	swapf	btemp,f
  7305  08BA  0E7E               	swapf	btemp,w
  7306  08BB  0009               	retfie
  7307  08BC                     __end_of_isr:
  7308  007E                     btemp	set	126	;btemp
  7309  007E                     wtemp0	set	126
  7310                           
  7311                           	psect	intentry
  7312  0004                     __pintentry:	
  7313                           ;incstack = 0
  7314                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  7315                           
  7316  0004                     interrupt_function:
  7317  007E                     saved_w	set	btemp
  7318  0004  00FE               	movwf	btemp
  7319  0005  0E03               	swapf	3,w
  7320  0006  00F2               	movwf	??_isr+2
  7321  0007  0804               	movf	4,w
  7322  0008  00F3               	movwf	??_isr+3
  7323  0009  080A               	movf	10,w
  7324  000A  00F4               	movwf	??_isr+4
  7325  000B  120A  158A  2887   	ljmp	_isr
  7326                           
  7327                           	psect	config
  7328                           
  7329                           ;Config register CONFIG1 @ 0x2007
  7330                           ;	Oscillator Selection bits
  7331                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7332                           ;	Watchdog Timer Enable bit
  7333                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7334                           ;	Power-up Timer Enable bit
  7335                           ;	PWRTE = OFF, PWRT disabled
  7336                           ;	RE3/MCLR pin function select bit
  7337                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7338                           ;	Code Protection bit
  7339                           ;	CP = OFF, Program memory code protection is disabled
  7340                           ;	Data Code Protection bit
  7341                           ;	CPD = OFF, Data memory code protection is disabled
  7342                           ;	Brown Out Reset Selection bits
  7343                           ;	BOREN = OFF, BOR disabled
  7344                           ;	Internal External Switchover bit
  7345                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7346                           ;	Fail-Safe Clock Monitor Enabled bit
  7347                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7348                           ;	Low Voltage Programming Enable bit
  7349                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7350                           ;	In-Circuit Debugger Mode bit
  7351                           ;	DEBUG = 0x1, unprogrammed default
  7352  2007                     	org	8199
  7353  2007  20D4               	dw	8404
  7354                           
  7355                           ;Config register CONFIG2 @ 0x2008
  7356                           ;	Brown-out Reset Selection bit
  7357                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7358                           ;	Flash Program Memory Self Write Enable bits
  7359                           ;	WRT = OFF, Write protection off
  7360  2008                     	org	8200
  7361  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    40
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     70      73
    BANK1            80      0      29
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> NULL(NULL[0]), RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    UARTSendString@str	PTR const unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), STR_2(CODE[2]), STR_1(CODE[2]), 

    I2C_Read_MPU@data_send	PTR float  size(1) Largest target is 12
		 -> valor_arreglado(BANK1[12]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    buffer	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK1[17]), 


Critical Paths under _main in COMMON

    _sprintf->___llmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___llmod->___lldiv
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv
    _I2C_Read_MPU->_I2C_Start
    ___flmul->__Umul8_16
    _I2C_Start->_I2C_Master_Write
    _I2C_MPU_Init->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ftoa
    _ftoa->___fltol
    _sprintf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    _UARTInit->___lldiv
    _I2C_Read_MPU->___flmul
    ___flmul->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15640
                                             67 BANK0      3     3      0
                       _I2C_MPU_Init
                    _I2C_Master_Init
                       _I2C_Read_MPU
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
                               _ftoa
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                16    10      6    9764
                                             51 BANK0     16    10      6
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             34    25      9    2414
                                             22 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              6 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              6 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     311
                                              7 COMMON     1     1      0
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2333
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2136
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     334
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       8     5      3     917
                                              0 BANK0      8     5      3
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      22
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     836
                                             13 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              6 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Read_MPU                                        19    19      0    4079
                                             40 BANK0     19    19      0
           _I2C_Master_RepeatedStart
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_Read
                          _I2C_Start
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              6 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            1     1      0      44
                                              7 COMMON     1     1      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0      45
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                            _I2C_ACK
                    _I2C_Master_Wait
                           _I2C_NACK
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_MPU_Init                                         0     0      0      22
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              6 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0      15
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_MPU_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
   _I2C_Read_MPU
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read
       _I2C_ACK
       _I2C_Master_Wait
       _I2C_NACK
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar
   _ftoa
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      1D       7       36.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 17:40:37 2021

                UARTInit@baud_rate 002D                                  pc 0002  
               __size_of_I2C_Start 0010                                 _BF 04A0  
                               l73 0B4C                                 l84 073B  
                               l76 0615                                 l79 0621  
            __size_of_I2C_MPU_Init 008D                                 fsr 0004  
              ___wmul@multiplicand 0022                __Umul8_16@word_mpld 0024  
                              l122 1745                                l131 178B  
                              l140 172B                                l125 1751  
                              l205 0968                                l134 1726  
                              l119 175E                                l143 172F  
                              l311 17D6                                l128 1714  
                              l152 1776                                l137 171D  
                              l154 177A                                l146 1734  
                              l155 177B                                l171 0884  
                              l172 0886                                l164 0864  
                              l149 1738                                l309 17BE  
                              l502 0AAA                                l191 0A43  
                              l169 087E                                l345 09D0  
                              l505 0ABF                                l194 173A  
                              l602 03E7                                l531 0911  
                              l197 1744                                l710 0377  
                              l606 048E                                l623 0559  
                              l615 060B                                l704 02EF  
                              l608 0465                                l633 059F  
                              l802 0F46                                l483 0B6B  
                              l491 176B                                l627 057D  
                              l644 05FF                                l636 05DD  
                              l717 17ED                                l645 060B  
                              l813 0FFF                                l742 0760  
                              l486 0BD7                                l719 17FF  
                              l487 0BF0                                l495 0ABF  
                              l744 07F7                                l648 17AF  
                              l818 0858                                l755 07C1  
                              l756 07CD                                l748 07A5  
                              l765 0CC5                                l791 0E76  
                              l698 0383                                l794 0E9C  
                              _PEN 048A                                _SEN 0488  
                  __end_of_I2C_ACK 1730                                _isr 0887  
                              fsr0 0004                                indf 0000  
                     ___flmul@aexp 0040                       ___flmul@bexp 0041  
                     ___flmul@sign 003B                       ___flmul@temp 0046  
                     ___flmul@prod 0042                       ___fltol@exp1 0052  
                             l2010 04C8                               l2002 04A0  
                             l2100 17F6                               l2012 04CA  
                             l2004 04B7                               l2020 04DD  
                             l2102 17FB                               l2022 04F3  
                             l2030 054B                               l2014 04CE  
                             l2006 04BB                               l2110 084F  
                             l2120 1740                               l2040 0578  
                             l2032 0561                               l2024 0531  
                             l2016 04CF                               l2008 04BF  
                             l2112 0855                               l2122 170C  
                             l2130 177D                               l2050 058B  
                             l2042 057C                               l2034 0566  
                             l2026 0537                               l2018 04D8  
                             l2114 0857                               l2106 0848  
                             l2124 1711                               l2140 0861  
                             l2132 1782                               l2300 0220  
                             l2060 059C                               l2044 0581  
                             l2052 058D                               l2028 053C  
                             l2220 1790                               l2212 0A9F  
                             l2204 0A86                               l2108 0849  
                             l2126 1715                               l2134 171E  
                             l2150 0885                               l2142 0868  
                             l2310 02B2                               l2302 024D  
                             l2230 0034                               l2118 173A  
                             l2070 05BB                               l2046 0584  
                             l2038 056F                               l2054 0591  
                             l2214 0AAF                               l2206 0A98  
                             l2128 171A                               l2136 1723  
                             l2144 086E                               l2312 02BB  
                             l2320 02CF                               l2304 0273  
                             l2240 0049                               l2232 0035  
                             l2224 0023                               l2400 07EA  
                             l2160 0B87                               l2080 05F4  
                             l2072 05D9                               l2064 05A4  
                             l2056 0592                               l2048 0586  
                             l2216 0AB4                               l2146 0873  
                             l2138 085C                               l2322 02D3  
                             l2314 02BF                               l2306 029B  
                             l2250 0061                               l2242 0051  
                             l2234 003A                               l2226 002A  
                             l2402 07EE                               l2170 0BEF  
                             l2162 0B8B                               l2154 0B4D  
                             l2090 060A                               l2082 05F5  
                             l2074 05E2                               l2066 05A9  
                             l2058 0596                               l2218 178C  
                             l2410 0DBC                               l2148 0879  
                             l2092 17DA                               l2340 0324  
                             l2332 02F4                               l2324 02D4  
                             l2316 02C0                               l2308 02A4  
                             l2260 007D                               l2252 0066  
                             l2244 0056                               l2236 003F  
                             l2228 0030                               l2404 07EF  
                             l2164 0BAF                               l2156 0B63  
                             l2084 05F9                               l2076 05E7  
                             l2068 05B7                               l2500 0FD0  
                             l2420 0DE1                               l2412 0DC2  
                             l2094 17DC                               l2350 035B  
                             l2334 02F9                               l2342 032A  
                             l2326 02D8                               l2318 02C9  
                             l2270 00A0                               l2262 0082  
                             l2254 006B                               l2246 005C  
                             l2238 0047                               l2166 0BB3  
                             l2158 0B7F                               l2174 175F  
                             l2086 05FB                               l2078 05EF  
                             l2190 0A6F                               l2182 0A44  
                             l2502 0FD7                               l2422 0DE5  
                             l2430 0E21                               l2414 0DC9  
                             l2096 17E3                               l2360 037B  
                             l2352 035D                               l2344 0337  
                             l2336 0307                               l2328 02EC  
                             l2280 012E                               l2272 00AD  
                             l2264 0087                               l2256 0073  
                             l2248 0060                               l2520 0A05  
                             l2168 0BED                               l2176 1769  
                             l2088 0606                               l2192 0A70  
                             l2184 0A51                               l2504 0FDB  
                             l2440 0E5E                               l2432 0E2F  
                             l2424 0DFA                               l2416 0DCE  
                             l2408 0DB7                               l2600 0C19  
                             l2098 17E7                               l2354 036B  
                             l2346 0342                               l2338 030B  
                             l2290 0190                               l2282 014A  
                             l2274 00CA                               l2258 0075  
                             l2370 0758                               l2530 0A37  
                             l2522 0A07                               l2178 176B  
                             l2194 0A78                               l2450 0E7D  
                             l2442 0E62                               l2434 0E33  
                             l2426 0E0D                               l2418 0DD1  
                             l2506 0FE9                               l2610 0CAA  
                             l2602 0C1D                               l2356 036F  
                             l2348 0351                               l2292 01AD  
                             l2284 0153                               l2276 00E6  
                             l2268 0090                               l2380 0783  
                             l2372 0768                               l2364 073F  
                             l2540 0A3E                               l2532 0A38  
                             l2524 0A34                               l2516 09D1  
                             l2620 0935                               l1900 038B  
                             l2196 0A7A                               l2188 0A5A  
                             l2460 0EC5                               l2452 0EA0  
                             l2508 0FFB                               l2436 0E36  
                             l2444 0E73                               l2428 0E11  
                             l2612 0CC4                               l2604 0C34  
                             l1830 174B                               l2550 1759  
                             l2358 0370                               l2294 01C6  
                             l2286 0163                               l2278 0112  
                             l2390 07B7                               l2382 078A  
                             l2366 0744                               l2542 0A3F  
                             l2534 0A3B                               l2526 0A35  
                             l2518 09D8                               l2622 093D  
                             l1910 03A0                               l1902 0391  
                             l2198 0A7E                               l2462 0ECB  
                             l2454 0EAE                               l2446 0E78  
                             l2438 0E4B                               l2606 0C4D  
                             l2630 0CD7                               l1832 176D  
                             l2552 175C                               l2296 01E3  
                             l2288 0180                               l2392 07BB  
                             l2384 078E                               l2376 0771  
                             l2368 0748                               l2560 060F  
                             l2544 0A42                               l2536 0A3C  
                             l2528 0A36                               l2624 094A  
                             l2616 0912                               l1920 03B8  
                             l1912 03A8                               l1904 0395  
                             l1840 17B0                               l2480 0F27  
                             l2472 0EDB                               l2464 0ED3  
                             l2456 0EB3                               l2608 0C7C  
                             l2640 0CF0                               l2632 0CD8  
                             l1834 1772                               l2554 175D  
                             l2546 1752                               l2298 0210  
                             l2394 07C5                               l2386 079C  
                             l2378 0776                               l2562 061B  
                             l2538 0A3D                               l2618 0919  
                             l1930 03CA                               l1922 03BE  
                             l1914 03A9                               l1906 0396  
                             l1850 17D2                               l1842 17B2  
                             l2490 0F63                               l2482 0F2E  
                             l2466 0ED9                               l2458 0EC1  
                             l2650 0D27                               l2642 0CF1  
                             l2634 0CE9                               l2626 0CC6  
                             l1828 1745                               l2556 0AC0  
                             l2548 1756                               l1836 1727  
                             l2396 07CF                               l2388 07AC  
                             l2580 0668                               l2572 0636  
                             l2564 0627                               l1860 098B  
                             l1932 03CF                               l1940 03DF  
                             l1924 03BF                               l1908 039B  
                             l1916 03AB                               l1844 17B8  
                             l2492 0F69                               l2484 0F3D  
                             l2476 0F12                               l2716 0E91  
                             l2660 0D8E                               l2652 0D34  
                             l2644 0CF6                               l2636 0CEC  
                             l2628 0CD4                               l1838 1730  
                             l2398 07E5                               l2590 0704  
                             l2582 0679                               l2574 0645  
                             l2566 0632                               l1870 09B9  
                             l1862 098F                               l1854 0969  
                             l1950 03FD                               l1942 03ED  
                             l1934 03D4                               l1926 03C5  
                             l1918 03B3                               l1846 17C5  
                             l2494 0F70                               l2486 0F53  
                             l2478 0F1C                               l2662 0D9B  
                             l2654 0D53                               l2646 0CFB  
                             l2638 0CED                               l2584 0688  
                             l2576 064B                               l1872 09C2  
                             l1864 0998                               l1856 097B  
                             l1960 0411                               l1952 0401  
                             l1944 03F1                               l1936 03DC  
                             l1928 03C9                               l1880 08C6  
                             l1848 17CC                               l2496 0F74  
                             l2488 0F5F                               l2664 0DAA  
                             l2656 0D60                               l2648 0D01  
                             l2586 0697                               l2578 0658  
                             l1866 09AA                               l1858 097E  
                             l1874 09C8                               l1970 0425  
                             l1962 0415                               l1954 0405  
                             l1946 03F5                               l1938 03DD  
                             l1890 08FA                               l1882 08C9  
                             l2498 0F81                               l2594 0BF1  
                             l2658 0D6F                               l2588 06CD  
                             l1868 09B8                               l1980 0449  
                             l1972 0429                               l1964 0419  
                             l1956 0409                               l1948 03F9  
                             l1892 0903                               l1884 08D6  
                             l2596 0BF7                               l1990 0479  
                             l1982 0469                               l1974 042D  
                             l1966 041D                               l1958 040D  
                             l1886 08DA                               l1894 0909  
                             l1878 08BC                               l2598 0C10  
                             l1992 0482                               l1984 0472  
                             l1968 0421                               l1976 0431  
                             l1888 08EC                               l1986 0474  
                             l1994 0486                               l1978 0432  
                             l1898 0384                               l1996 0492  
                             l1988 0478                               l1998 0497  
                             ?_isr 0070                               STR_1 0843  
                             STR_2 0843                               STR_3 0838  
                             u2000 08C6                               u2001 08C5  
                             u2100 03C9                               u2020 08DA  
                             u2101 03C8                               u2021 08D9  
                             u2110 03CF                               u2030 08EC  
                             u2111 03CE                               u2031 08EB  
                             u2015 08CB                               u3000 0281  
                             u2120 03D4                               u2121 03D3  
                             u2210 048E                               u2130 03ED  
                             u2050 0909                               u3011 028D  
                             u2211 048D                               u2131 03EC  
                             u2051 0908                               u2035 08E8  
                             u3100 02F9                               u3012 0294  
                             u2220 0492                               u2140 03F1  
                             u2060 0395                               u3101 02F8  
                             u3013 029B                               u3005 027C  
                             u2301 050A                               u2221 0491  
                             u2205 047B                               u2141 03F0  
                             u2061 0394                               u2045 08FB  
                             u3110 030B                               u2310 051E  
                             u2302 050B                               u2230 0497  
                             u2150 0449                               u2070 039B  
                             u3111 030A                               u2311 051F  
                             u2303 0510                               u2231 0496  
                             u2151 0448                               u2071 039A  
                             u3120 031A                               u3040 02BF  
                             u3200 0789                               u2400 0596  
                             u2320 053C                               u2312 0524  
                             u2304 0511                               u2160 0454  
                             u2080 03A0                               u3041 02BE  
                             u3025 029D                               u3201 0788  
                             u2401 0595                               u2321 053B  
                             u2313 0525                               u2305 0516  
                             u2241 04A9                               u2161 0452  
                             u2081 039F                               u3130 0337  
                             u2410 059C                               u2330 0561  
                             u2306 0517                               u2250 04BB  
                             u2242 04B0                               u2170 0455  
                             u2090 03BE                               u3131 0336  
                             u3035 02B4                               u2411 059B  
                             u2331 0560                               u2251 04BA  
                             u2243 04B7                               u2155 0445  
                             u2091 03BD                               u3140 0351  
                             u3060 02D3                               u3220 07AB  
                             u2500 05F9                               u2420 05A3  
                             u2340 0566                               u2260 04BF  
                             u2180 0469                               u3300 0DC2  
                             u3141 0350                               u3125 0315  
                             u3061 02D2                               u3221 07AA  
                             u2501 05F8                               u2421 05A2  
                             u2341 0565                               u2261 04BE  
                             u2181 0468                               u3301 0DC1  
                             u3150 036F                               u3070 02D8  
                             u2510 060A                               u2430 05A9  
                             u2270 04CE                               u2190 0478  
                             u3310 0DE1                               u3151 036E  
                             u3135 0333                               u3071 02D7  
                             u3055 02C2                               u3215 079D  
                             u2511 0609                               u2431 05A8  
                             u2271 04CD                               u2191 0477  
                             u3311 0DE0                               u2600 0884  
                             u2520 17E7                               u3080 02EC  
                             u3240 07BB                               u3160 0744  
                             u2440 05BB                               u2360 057C  
                             u3400 0F1C                               u3320 0E21  
                             u2601 0883                               u2521 17E6  
                             u3145 034D                               u3081 02EB  
                             u3241 07BA                               u3161 0743  
                             u2441 05BA                               u2361 057B  
                             u3401 0F1B                               u3321 0E20  
                             u3090 02F3                               u3250 07C1  
                             u3170 0748                               u2610 0B63  
                             u2450 05CA                               u2370 0581  
                             u2290 04F3                               u3410 0F27  
                             u3330 0E2F                               u3091 02F2  
                             u3251 07C0                               u3235 07B0  
                             u3171 0747                               u2611 0B62  
                             u2371 0580                               u2355 0571  
                             u2291 04F2                               u3411 0F26  
                             u3331 0E2E                               u2540 17FB  
                             u3260 07C5                               u3180 0768  
                             u3500 09E6                               u2620 0B7F  
                             u2460 05D9                               u2380 058B  
                             u2700 0A68                               u3420 0F3D  
                             u3340 0E72                               u2541 17FA  
                             u3261 07C4                               u3181 0767  
                             u2621 0B7E                               u2461 05D8  
                             u2381 058A                               u2293 04EF  
                             u2285 04D1                               u3421 0F3C  
                             u3341 0E71                               u3270 07DA  
                             u3510 0A15                               u2630 0B8B  
                             u2470 05E2                               u2390 0591  
                             u2710 0A7E                               u2550 084F  
                             u3430 0F53                               u3350 0EA0  
                             u2535 17EE                               u2631 0B8A  
                             u2471 05E1                               u2455 05C5  
                             u2391 0590                               u2711 0A7D  
                             u2551 084E                               u3431 0F52  
                             u3415 0F23                               u3351 0E9F  
                             u1840 174B                               u2800 003A  
                             u3280 07EA                               u3520 061B  
                             u2480 05E7                               u2720 0A85  
                             u1920 17D2                               u2560 0855  
                             u3440 0F69                               u3360 0ECB  
                             u1841 174A                               u2801 0039  
                             u3281 07E9                               u3521 061A  
                             u3505 09E1                               u2641 0B9A  
                             u2481 05E6                               u2721 0A84  
                             u2705 0A63                               u1921 17D1  
                             u1905 17BF                               u2561 0854  
                             u3441 0F68                               u3425 0F39  
                             u3361 0ECA                               u1850 1751  
                             u2810 003F                               u3290 07EE  
                             u3530 0627                               u1930 097B  
                             u2570 1740                               u2650 0BB3  
                             u2642 0B9B                               u2490 05F4  
                             u3450 0F80                               u3370 0ED3  
                             u1851 1750                               u2811 003E  
                             u3291 07ED                               u3275 07D5  
                             u3195 077B                               u3531 0626  
                             u1931 097A                               u3515 0A10  
                             u2571 173F                               u2651 0BB2  
                             u2643 0BA0                               u2491 05F3  
                             u1915 17C6                               u3451 0F7F  
                             u3435 0F4F                               u3371 0ED2  
                             u1860 177A                               u2580 0868  
                             u2820 0060                               u3540 0658  
                             u2644 0BA1                               u2740 0A97  
                             u1861 1779                               u2581 0867  
                             u2901 013C                               u2821 005F  
                             u3541 0657                               u2661 0BC2  
                             u2645 0BA6                               u2741 0A96  
                             u1870 172F                               u2590 0873  
                             u2902 0143                               u2830 0066  
                             u1950 098F                               u2670 0BED  
                             u2662 0BC3                               u2646 0BA7  
                             u2750 0A9E                               u3470 0FE9  
                             u3390 0F11                               u3550 0C10  
                             u1871 172E                               u2591 0872  
                             u2903 014A                               u2831 0065  
                             u1951 098E                               u2671 0BEC  
                             u2663 0BC8                               u2751 0A9D  
                             u2735 0A87                               u3471 0FE8  
                             u3391 0F10                               u3551 0C0F  
                             u1880 1738                               u2840 006B  
                             u3560 0923                               u2664 0BC9  
                             u2680 1769                               u3480 0FFB  
                             u1881 1737                               u2921 0172  
                             u2841 006A                               u3545 0654  
                             u1945 0980                               u2665 0BCE  
                             u2681 1768                               u3481 0FFA  
                             u3465 0F8C                               u3385 0EDE  
                             u3617 0CCE                               u2922 0179  
                             u2850 0082                               u1970 09AA  
                             u3490 09D8                               u3570 094A  
                             u2666 0BCF                               u2770 0AAF  
                             u2690 0A51                               u1890 17B8  
                             u2931 019F                               u2923 0180  
                             u2915 014C                               u2851 0081  
                             u1971 09A9                               u3491 09D7  
                             u3571 0949                               u2675 0BE9  
                             u2771 0AAE                               u2691 0A50  
                             u1891 17B7                               u3395 0F0D  
                             u2932 01A6                               u2860 0087  
                             u3580 0956                               u2780 0AB4  
                             u2933 01AD                               u2861 0086  
                             u1965 0991                               u2781 0AB3  
                             u2765 0AA1                               u2790 0034  
                             u1990 09C8                               u3590 0968  
                             u2951 01D5                               u2871 00D8  
                             u2791 0033                               u1991 09C7  
                             u1975 09A6                               u3591 0967  
                             u3575 0946                               u2952 01DC  
                             u2872 00DF                               u2961 0202  
                             u2953 01E3                               u2945 01AF  
                             u2881 00F4                               u2873 00E6  
                             u1985 09BA                               u2962 0209  
                             u2882 00FB                               u2971 022F  
                             u2963 0210                               u2891 0120  
                             u2883 0102                               u2980 0259  
                             u2972 0236                               u2892 0127  
                             _RCEN 048B                               u2973 023D  
                             u2893 012E                               i1l62 08B3  
                             u2991 0265                               u2992 026C  
                             u2993 0273                               u2985 0254  
                             _RSEN 0489                   __end_of_I2C_NACK 1739  
            __size_of_I2C_Read_MPU 0130   __end_of_I2C_Master_RepeatedStart 1727  
                             _main 0CC6                               _ftoa 0BF1  
                 __end_of_I2C_Read 0887                               btemp 007E  
                             start 000E                       _I2C_MPU_Init 0AC0  
                            ??_isr 0070                   ?_I2C_Master_Init 0070  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                    ___fltol@sign1 0051                    __end_of___fladd 060C  
                            ?_main 0070                              _ACKEN 048C  
                            ?_ftoa 0053                              _ACKDT 048D  
                  __end_of___flneg 176C                    __end_of___flmul 0384  
                  __end_of___flsub 17B0                    __end_of___fltol 0AC0  
                            _ANSEL 0188                    __end_of___lldiv 09D1  
                  __end_of___llmod 0912                              _RCREG 001A  
                            _SPBRG 0099                              _PORTA 0005  
                            _SSPIF 0063                              _TXREG 0019  
                 __end_of_UARTInit 0A44                       _I2C_Read_MPU 060C  
                  __end_of_dpowers 0838                    __end_of_isdigit 0859  
       I2C_Read_MPU@valor_original 0052                              ftoa@f 0053  
                            ftoa@l 005E                  __end_of_I2C_Start 178C  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 1000  
                  __initialization 0011                       __end_of_main 0DB4  
            I2C_Read_MPU@data_send 005A                       __end_of_ftoa 0CC6  
                        ??_I2C_ACK 0076                             ??_main 0063  
                           ??_ftoa 0059                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0070                 ??_I2C_Master_Start 0076  
               ??_I2C_Master_Write 0076                   ___llmod@dividend 0031  
                           _ANSELH 0189                             i1l1700 088D  
                           i1l1702 0892                             i1l1704 0894  
                           i1l1712 089D                             i1l1706 0897  
                           i1l1708 089A                             i1l2718 08A5  
                           i1l1698 0887                             u178_20 088D  
                           u178_21 088C                             _SSPADD 0093  
                           _SSPCON 0014                             _SSPBUF 0013  
                 __end_of___xxtofl 07F8           _I2C_Master_RepeatedStart 171E  
                           ___flge 0B4D                   I2C_Read@ACK_NACK 0020  
                        ??___fladd 0028                             ___wmul 17B0  
                        ??___flneg 0076                          ??___flmul 0036  
                        ??___flsub 0076                          ??___fltol 004C  
                        ??___lldiv 0076                          ??___llmod 0077  
                           _buffer 0068            __size_of_UARTSendString 0057  
                           _status 0066                             ftoa@cp 0062  
                        ?_I2C_NACK 0070                          ??_isdigit 0076  
                        ?_I2C_Read 0070                 __size_of__Umul8_16 0029  
                           saved_w 007E                    _valor_arreglado 00B1  
                        ??_sprintf 003F                         ___flge@ff1 0020  
                       ___flge@ff2 0024                       ___xxtofl@arg 002A  
                     ___xxtofl@exp 0029                       ___xxtofl@val 0020  
          __end_of__initialization 001F                         ___flneg@f1 0020  
                       ___fltol@f1 0048                     __pcstackCOMMON 0070  
                        ?_UARTInit 002D                         ??_I2C_NACK 0076  
                       ??_I2C_Read 0076           UARTSendString@max_length 0022  
                     sprintf@width 004B                         __pbssBANK0 0066  
                       __pbssBANK1 00A0                       I2C_Read@Data 0021  
                __end_of__Umul8_16 1800                         __pmaintext 0CC6  
                          ?___flge 0020                            ?___wmul 0020  
                       ??_UARTInit 0032                         __pintentry 0004  
                          _I2C_ACK 1727                            _ACKSTAT 048E  
                        ?___xxtofl 0020                            _SSPCON2 0091  
                 I2C_Read_MPU@Addr 0058                            _SSPSTAT 0094  
                       __stringtab 0800                      ?_UARTSendChar 0070  
                 I2C_Read_MPU@temp 004C                       I2C_Start@add 0077  
                        _I2C_Start 177C                    __size_of___flge 00A4  
                          ___fladd 0384                            ___flneg 175F  
                          ___flmul 0023                            ___flsub 178C  
                          ___fltol 0A44                            ___lldiv 0969  
                  __size_of___wmul 0027                            ___llmod 08BC  
                   _UARTSendString 0912                            __ptext1 0BF1  
                          __ptext2 0DB4                            __ptext3 0847  
                          __ptext4 17B0                            __ptext5 08BC  
                          __ptext6 0A44                            __ptext7 178C  
                          __ptext8 0384                            __ptext9 175F  
                          _dpowers 0810                            _isdigit 0847  
                     __size_of_isr 0035                         ??___xxtofl 0024  
         __size_of_I2C_Master_Init 000D           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                            _sprintf 0DB4  
                          clrloop0 07F9               end_of_initialization 001F  
                   ??_UARTSendChar 0076                            ftoa@buf 00A0  
                          ftoa@rem 005A         ??_I2C_Master_RepeatedStart 0076  
                       ?_I2C_Start 0070          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 0010                    ___lldiv@divisor 0020  
                  ___lldiv@counter 002C                          _RCSTAbits 0018  
           __end_of_UARTSendString 0969                          _PORTAbits 0005  
                      ___fladd@grs 0033                      ___xxtofl@sign 0028  
                        _TRISAbits 0085                  __size_of_I2C_NACK 0009  
                        _TRISCbits 0087                  __size_of_I2C_Read 002E  
                      ___flmul@grs 003C                          _TXSTAbits 0098  
                  ?_UARTSendString 0020                     __end_of___flge 0BF1  
                   __end_of___wmul 17D7                  __size_of_UARTInit 0073  
              start_initialization 0011                        __end_of_isr 08BC  
                       ftoa@status 0057                  ??_I2C_Master_Init 0076  
                ??_I2C_Master_Wait 0076                  ??_I2C_Master_Stop 0076  
                  ___llmod@divisor 002D                        ??_I2C_Start 0077  
                  ___llmod@counter 0035                      ?_I2C_MPU_Init 0070  
                         ??___flge 0028                           ??___wmul 0076  
                        __Umul8_16 17D7                           ?_I2C_ACK 0070  
             __end_of_UARTSendChar 1745                          ___fladd@a 0024  
                        ___fladd@b 0020                          ___flmul@a 0032  
                        ___flmul@b 002E                          ___flsub@a 0034  
                        ___flsub@b 0038                          ___latbits 0002  
                    __pcstackBANK0 0020                      ?_I2C_Read_MPU 0070  
                __size_of___xxtofl 00BC                        sprintf@flag 0044  
                      sprintf@prec 004D                     ??_I2C_MPU_Init 0077  
                 _I2C_Master_Start 170C                   _I2C_Master_Write 176C  
                    UARTSendChar@c 0076                           ?___fladd 0020  
                         ?___flneg 0020                           ?___flmul 002E  
                         ?___flsub 0034                           ?___fltol 0048  
                         ?___lldiv 0020                           ?___llmod 002D  
                       ?__Umul8_16 0076               I2C_Master_Write@data 0076  
                        __pstrings 0800                           _I2C_NACK 1730  
                         ?_isdigit 0070                           _I2C_Read 0859  
                   ??_I2C_Read_MPU 0048                           ?_sprintf 0036  
                interrupt_function 0004                     ___wmul@product 0076  
                        clear_ram0 07F8                    UARTSendString@i 0026  
                         _PIR1bits 000C                           _UARTInit 09D1  
                 __size_of_I2C_ACK 0009                        __stringbase 080F  
                ___wmul@multiplier 0020                   ??_UARTSendString 0023  
                    isr@opcionUART 0075              __size_of_UARTSendChar 000C  
                     UARTInit@BRGH 0031                        ??__Umul8_16 0020  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___fladd 0288  
                 __size_of___flneg 000D                   __size_of___flmul 0361  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___flsub 0024  
                 __size_of___fltol 007C                   __size_of___lldiv 0068  
                 __size_of___llmod 0056                 __end_of__stringtab 0810  
                      _isdigit$923 0076               __end_of_I2C_MPU_Init 0B4D  
                       sprintf@val 0046                    _I2C_Master_Init 1752  
                         ___xxtofl 073C                    _I2C_Master_Wait 1745  
                  _I2C_Master_Stop 1715                   __size_of_isdigit 0012  
                         __ptext10 0B4D                           __ptext11 0912  
                         __ptext20 0859                           __ptext12 1739  
                         __ptext21 1730                           __ptext13 09D1  
                         __ptext30 0887                           __ptext22 1727  
                         __ptext14 0969                           __ptext23 171E  
                         __ptext15 060C                           __ptext24 1752  
                         __ptext16 073C                           __ptext25 0AC0  
                         __ptext17 0023                           __ptext26 176C  
                         __ptext18 17D7                           __ptext27 1715  
                         __ptext19 177C                           __ptext28 170C  
                         __ptext29 1745                   __size_of_sprintf 024C  
                     _UARTSendChar 1739                      __size_of_main 00EE  
                    __size_of_ftoa 00D5               __end_of_I2C_Read_MPU 073C  
         __end_of_I2C_Master_Start 1715           __end_of_I2C_Master_Write 177C  
                         isdigit@c 0077                  UARTSendString@str 0020  
                         intlevel1 0000                          sprintf@ap 0045  
                        sprintf@sp 004A                   ___lldiv@dividend 0024  
                        stringcode 080A            __end_of_I2C_Master_Init 175F  
          __end_of_I2C_Master_Wait 1752            __end_of_I2C_Master_Stop 171E  
           __Umul8_16@multiplicand 0076                           sprintf@c 004F  
                         sprintf@f 0036                   ___lldiv@quotient 0028  
                         stringdir 080A                           stringtab 0800  
                      _SSPCON2bits 0091                      ___fladd@signs 0030  
                     ___fladd@aexp 0031                       ___fladd@bexp 0032  
             __Umul8_16@multiplier 0026                  __Umul8_16@product 0022  
