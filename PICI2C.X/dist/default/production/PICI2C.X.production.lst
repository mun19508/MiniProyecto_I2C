

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 17:58:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.31
    23                           ; Generated 13/10/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  001A                     _RCREG	set	26
   370  0019                     _TXREG	set	25
   371  0018                     _RCSTAbits	set	24
   372  0013                     _SSPBUF	set	19
   373  0014                     _SSPCON	set	20
   374  0005                     _PORTA	set	5
   375  000B                     _INTCONbits	set	11
   376  0005                     _PORTAbits	set	5
   377  000C                     _PIR1bits	set	12
   378  0063                     _SSPIF	set	99
   379  005E                     _PEIE	set	94
   380  005F                     _GIE	set	95
   381  0098                     _TXSTAbits	set	152
   382  0099                     _SPBRG	set	153
   383  0091                     _SSPCON2bits	set	145
   384  0093                     _SSPADD	set	147
   385  0094                     _SSPSTAT	set	148
   386  0091                     _SSPCON2	set	145
   387  0085                     _TRISAbits	set	133
   388  0087                     _TRISCbits	set	135
   389  008C                     _PIE1bits	set	140
   390  04A0                     _BF	set	1184
   391  048B                     _RCEN	set	1163
   392  048C                     _ACKEN	set	1164
   393  048D                     _ACKDT	set	1165
   394  0463                     _SSPIE	set	1123
   395  043C                     _TRISC4	set	1084
   396  043B                     _TRISC3	set	1083
   397  0488                     _SEN	set	1160
   398  0189                     _ANSELH	set	393
   399  0188                     _ANSEL	set	392
   400                           
   401                           	psect	strings
   402  01E9                     __pstrings:
   403  01E9                     stringtab:
   404  01E9                     __stringtab:
   405  01E9                     stringcode:	
   406                           ;	String table - string pointers are 1 byte each
   407                           
   408  01E9                     stringdir:
   409  01E9  3001               	movlw	high stringdir
   410  01EA  008A               	movwf	10
   411  01EB  0804               	movf	4,w
   412  01EC  0A84               	incf	4,f
   413  01ED  0782               	addwf	2,f
   414  01EE                     __stringbase:
   415  01EE  3400               	retlw	0
   416  01EF                     __end_of__stringtab:
   417  01EF                     STR_1:
   418  01EF  3453               	retlw	83	;'S'
   419  01F0  3431               	retlw	49	;'1'
   420  01F1  3400               	retlw	0
   421                           
   422                           	psect	cinit
   423  000F                     start_initialization:	
   424                           ; #config settings
   425                           
   426  000F                     __initialization:
   427                           
   428                           ; Clear objects allocated to COMMON
   429  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   430  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   431  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   432  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   433                           
   434                           ; Clear objects allocated to BANK0
   435  0013  1283               	bcf	3,5	;RP0=0, select bank0
   436  0014  1303               	bcf	3,6	;RP1=0, select bank0
   437  0015  01BA               	clrf	__pbssBANK0& (0+127)
   438  0016  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   439  0017  01BC               	clrf	(__pbssBANK0+2)& (0+127)
   440  0018  01BD               	clrf	(__pbssBANK0+3)& (0+127)
   441  0019  01BE               	clrf	(__pbssBANK0+4)& (0+127)
   442  001A  01BF               	clrf	(__pbssBANK0+5)& (0+127)
   443  001B  01C0               	clrf	(__pbssBANK0+6)& (0+127)
   444  001C  01C1               	clrf	(__pbssBANK0+7)& (0+127)
   445  001D  01C2               	clrf	(__pbssBANK0+8)& (0+127)
   446  001E  01C3               	clrf	(__pbssBANK0+9)& (0+127)
   447  001F                     end_of_initialization:	
   448                           ;End of C runtime variable initialization code
   449                           
   450  001F                     __end_of__initialization:
   451  001F  0183               	clrf	3
   452  0020  120A  118A  28FE   	ljmp	_main	;jump to C main() function
   453                           
   454                           	psect	bssCOMMON
   455  0075                     __pbssCOMMON:
   456  0075                     _Gy:
   457  0075                     	ds	2
   458  0077                     _Gx:
   459  0077                     	ds	2
   460                           
   461                           	psect	bssBANK0
   462  003A                     __pbssBANK0:
   463  003A                     _temperature:
   464  003A                     	ds	2
   465  003C                     _Pz:
   466  003C                     	ds	2
   467  003E                     _Py:
   468  003E                     	ds	2
   469  0040                     _Px:
   470  0040                     	ds	2
   471  0042                     _Gz:
   472  0042                     	ds	2
   473                           
   474                           	psect	cstackCOMMON
   475  0070                     __pcstackCOMMON:
   476  0070                     ?_UARTReadChar:
   477  0070                     ?_UARTSendChar:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_isr:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_main:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_UARTDataReady:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ??_UARTDataReady:	
   490                           ; 1 bytes @ 0x0
   491                           
   492                           
   493                           ; 1 bytes @ 0x0
   494  0070                     	ds	1
   495  0071                     ??_UARTReadChar:
   496  0071                     ??_isr:	
   497                           ; 1 bytes @ 0x1
   498                           
   499                           
   500                           ; 1 bytes @ 0x1
   501  0071                     	ds	3
   502  0074                     isr@rcUART:
   503                           
   504                           ; 1 bytes @ 0x4
   505  0074                     	ds	1
   506  0075                     ??_UARTSendChar:
   507                           
   508                           	psect	cstackBANK0
   509  0020                     __pcstackBANK0:	
   510                           ; 1 bytes @ 0x5
   511                           
   512  0020                     ?___lldiv:
   513  0020                     UARTSendChar@c:	
   514                           ; 4 bytes @ 0x0
   515                           
   516  0020                     ___lldiv@divisor:	
   517                           ; 1 bytes @ 0x0
   518                           
   519                           
   520                           ; 4 bytes @ 0x0
   521  0020                     	ds	1
   522  0021                     ?_UARTSendString:
   523  0021                     UARTSendString@max_length:	
   524                           ; 1 bytes @ 0x1
   525                           
   526                           
   527                           ; 1 bytes @ 0x1
   528  0021                     	ds	1
   529  0022                     ??_UARTSendString:
   530                           
   531                           ; 1 bytes @ 0x2
   532  0022                     	ds	1
   533  0023                     UARTSendString@str:
   534                           
   535                           ; 1 bytes @ 0x3
   536  0023                     	ds	1
   537  0024                     UARTSendString@i:
   538  0024                     ___lldiv@dividend:	
   539                           ; 2 bytes @ 0x4
   540                           
   541                           
   542                           ; 4 bytes @ 0x4
   543  0024                     	ds	4
   544  0028                     ??___lldiv:
   545                           
   546                           ; 1 bytes @ 0x8
   547  0028                     	ds	1
   548  0029                     ___lldiv@quotient:
   549                           
   550                           ; 4 bytes @ 0x9
   551  0029                     	ds	4
   552  002D                     ___lldiv@counter:
   553                           
   554                           ; 1 bytes @ 0xD
   555  002D                     	ds	1
   556  002E                     ?_UARTInit:
   557  002E                     UARTInit@baud_rate:	
   558                           ; 1 bytes @ 0xE
   559                           
   560                           
   561                           ; 4 bytes @ 0xE
   562  002E                     	ds	4
   563  0032                     UARTInit@BRGH:
   564                           
   565                           ; 1 bytes @ 0x12
   566  0032                     	ds	1
   567  0033                     ??_UARTInit:
   568                           
   569                           ; 1 bytes @ 0x13
   570  0033                     	ds	4
   571  0037                     ??_main:
   572                           
   573                           ; 1 bytes @ 0x17
   574  0037                     	ds	1
   575  0038                     main@count:
   576                           
   577                           ; 2 bytes @ 0x18
   578  0038                     	ds	2
   579                           
   580                           	psect	maintext
   581  00FE                     __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 69 in file "main.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  count           2   24[BANK0 ] int 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : B00/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       2       0       0       0
   603 ;;      Temps:          0       1       0       0       0
   604 ;;      Totals:         0       3       0       0       0
   605 ;;Total ram usage:        3 bytes
   606 ;; Hardware stack levels required when called:    5
   607 ;; This function calls:
   608 ;;		_UARTInit
   609 ;;		_UARTSendChar
   610 ;;		_UARTSendString
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _main
   618  00FE                     _main:
   619  00FE                     l1206:	
   620                           ;incstack = 0
   621                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   622                           
   623  00FE  1683               	bsf	3,5	;RP0=1, select bank3
   624  00FF  1703               	bsf	3,6	;RP1=1, select bank3
   625  0100  0188               	clrf	8	;volatile
   626  0101  0189               	clrf	9	;volatile
   627  0102                     l1208:
   628  0102  3000               	movlw	0
   629  0103  1283               	bcf	3,5	;RP0=0, select bank0
   630  0104  1303               	bcf	3,6	;RP1=0, select bank0
   631  0105  00B1               	movwf	UARTInit@baud_rate+3
   632  0106  3000               	movlw	0
   633  0107  00B0               	movwf	UARTInit@baud_rate+2
   634  0108  3025               	movlw	37
   635  0109  00AF               	movwf	UARTInit@baud_rate+1
   636  010A  3080               	movlw	128
   637  010B  00AE               	movwf	UARTInit@baud_rate
   638  010C  01B2               	clrf	UARTInit@BRGH
   639  010D  0AB2               	incf	UARTInit@BRGH,f
   640  010E  120A  118A  2023  120A  118A  	fcall	_UARTInit
   641  0113                     l1210:
   642  0113  178B               	bsf	11,7	;volatile
   643  0114                     l1212:
   644  0114  170B               	bsf	11,6	;volatile
   645  0115                     l1214:
   646  0115  1683               	bsf	3,5	;RP0=1, select bank1
   647  0116  1303               	bcf	3,6	;RP1=0, select bank1
   648  0117  168C               	bsf	12,5	;volatile
   649  0118                     l1216:
   650  0118  1307               	bcf	7,6	;volatile
   651  0119                     l1218:
   652  0119  1787               	bsf	7,7	;volatile
   653  011A                     l1220:
   654  011A  1005               	bcf	5,0	;volatile
   655  011B                     l1222:
   656  011B  1085               	bcf	5,1	;volatile
   657  011C                     l1224:
   658  011C  1283               	bcf	3,5	;RP0=0, select bank0
   659  011D  1303               	bcf	3,6	;RP1=0, select bank0
   660  011E  1005               	bcf	5,0	;volatile
   661  011F                     l1226:
   662  011F  1085               	bcf	5,1	;volatile
   663  0120                     l1228:
   664  0120  01B8               	clrf	main@count
   665  0121  01B9               	clrf	main@count+1
   666  0122                     l55:
   667  0122  307C               	movlw	124
   668  0123  120A  118A  21CD  120A  118A  	fcall	_UARTSendChar
   669  0128                     l1230:
   670  0128  3005               	movlw	5
   671  0129  1283               	bcf	3,5	;RP0=0, select bank0
   672  012A  1303               	bcf	3,6	;RP1=0, select bank0
   673  012B  00B7               	movwf	??_main
   674  012C  0837               	movf	??_main,w
   675  012D  00A1               	movwf	UARTSendString@max_length
   676  012E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   677  012F  120A  118A  2193  120A  118A  	fcall	_UARTSendString
   678  0134                     l1232:
   679  0134  1283               	bcf	3,5	;RP0=0, select bank0
   680  0135  1303               	bcf	3,6	;RP1=0, select bank0
   681  0136  0839               	movf	main@count+1,w
   682  0137  3A80               	xorlw	128
   683  0138  00FF               	movwf	btemp+1
   684  0139  3080               	movlw	128
   685  013A  027F               	subwf	btemp+1,w
   686  013B  1D03               	skipz
   687  013C  293F               	goto	u615
   688  013D  3015               	movlw	21
   689  013E  0238               	subwf	main@count,w
   690  013F                     u615:
   691  013F  1803               	skipnc
   692  0140  2942               	goto	u611
   693  0141  2943               	goto	u610
   694  0142                     u611:
   695  0142  294E               	goto	l1236
   696  0143                     u610:
   697  0143                     l1234:
   698  0143  3001               	movlw	1
   699  0144  1283               	bcf	3,5	;RP0=0, select bank0
   700  0145  1303               	bcf	3,6	;RP1=0, select bank0
   701  0146  0085               	movwf	5	;volatile
   702  0147  3001               	movlw	1
   703  0148  07B8               	addwf	main@count,f
   704  0149  1803               	skipnc
   705  014A  0AB9               	incf	main@count+1,f
   706  014B  3000               	movlw	0
   707  014C  07B9               	addwf	main@count+1,f
   708  014D  2922               	goto	l55
   709  014E                     l1236:
   710  014E  3002               	movlw	2
   711  014F  1283               	bcf	3,5	;RP0=0, select bank0
   712  0150  1303               	bcf	3,6	;RP1=0, select bank0
   713  0151  0085               	movwf	5	;volatile
   714  0152  2922               	goto	l55
   715  0153  120A  118A  280C   	ljmp	start
   716  0156                     __end_of_main:
   717                           
   718                           	psect	text1
   719  0193                     __ptext1:	
   720 ;; *************** function _UARTSendString *****************
   721 ;; Defined at:
   722 ;;		line 54 in file "UART.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  str             1    wreg     PTR const unsigned char 
   725 ;;		 -> STR_1(3), 
   726 ;;  max_length      1    1[BANK0 ] const unsigned char 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  str             1    3[BANK0 ] PTR const unsigned char 
   729 ;;		 -> STR_1(3), 
   730 ;;  i               2    4[BANK0 ] int 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       1       0       0       0
   741 ;;      Locals:         0       3       0       0       0
   742 ;;      Temps:          0       1       0       0       0
   743 ;;      Totals:         0       5       0       0       0
   744 ;;Total ram usage:        5 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    4
   747 ;; This function calls:
   748 ;;		_UARTSendChar
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           
   755                           ;psect for function _UARTSendString
   756  0193                     _UARTSendString:
   757                           
   758                           ;incstack = 0
   759                           ; Regs used in _UARTSendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   760                           ;UARTSendString@str stored from wreg
   761  0193  1283               	bcf	3,5	;RP0=0, select bank0
   762  0194  1303               	bcf	3,6	;RP1=0, select bank0
   763  0195  00A3               	movwf	UARTSendString@str
   764  0196                     l1196:
   765                           
   766                           ;UART.c: 55:     int i = 0;
   767  0196  01A4               	clrf	UARTSendString@i
   768  0197  01A5               	clrf	UARTSendString@i+1
   769                           
   770                           ;UART.c: 56:     for (i = 0; i < max_length && str[i] != '\0'; i++) {
   771  0198  01A4               	clrf	UARTSendString@i
   772  0199  01A5               	clrf	UARTSendString@i+1
   773  019A  29B0               	goto	l1202
   774  019B                     l1198:
   775                           
   776                           ;UART.c: 57:         UARTSendChar(str[i]);
   777  019B  0824               	movf	UARTSendString@i,w
   778  019C  0723               	addwf	UARTSendString@str,w
   779  019D  0084               	movwf	4
   780  019E  120A  118A  21E9  120A  118A  	fcall	stringdir
   781  01A3  120A  118A  21CD  120A  118A  	fcall	_UARTSendChar
   782  01A8                     l1200:
   783                           
   784                           ;UART.c: 58:     }
   785  01A8  3001               	movlw	1
   786  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   787  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   788  01AB  07A4               	addwf	UARTSendString@i,f
   789  01AC  1803               	skipnc
   790  01AD  0AA5               	incf	UARTSendString@i+1,f
   791  01AE  3000               	movlw	0
   792  01AF  07A5               	addwf	UARTSendString@i+1,f
   793  01B0                     l1202:
   794  01B0  0825               	movf	UARTSendString@i+1,w
   795  01B1  3A80               	xorlw	128
   796  01B2  00A2               	movwf	??_UARTSendString
   797  01B3  3080               	movlw	128
   798  01B4  0222               	subwf	??_UARTSendString,w
   799  01B5  1D03               	skipz
   800  01B6  29B9               	goto	u595
   801  01B7  0821               	movf	UARTSendString@max_length,w
   802  01B8  0224               	subwf	UARTSendString@i,w
   803  01B9                     u595:
   804  01B9  1803               	skipnc
   805  01BA  29BC               	goto	u591
   806  01BB  29BD               	goto	u590
   807  01BC                     u591:
   808  01BC  29CC               	goto	l192
   809  01BD                     u590:
   810  01BD                     l1204:
   811  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   812  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   813  01BF  0824               	movf	UARTSendString@i,w
   814  01C0  0723               	addwf	UARTSendString@str,w
   815  01C1  0084               	movwf	4
   816  01C2  120A  118A  21E9  120A  118A  	fcall	stringdir
   817  01C7  3A00               	xorlw	0
   818  01C8  1D03               	skipz
   819  01C9  29CB               	goto	u601
   820  01CA  29CC               	goto	u600
   821  01CB                     u601:
   822  01CB  299B               	goto	l1198
   823  01CC                     u600:
   824  01CC                     l192:
   825  01CC  0008               	return
   826  01CD                     __end_of_UARTSendString:
   827                           
   828                           	psect	text2
   829  01CD                     __ptext2:	
   830 ;; *************** function _UARTSendChar *****************
   831 ;; Defined at:
   832 ;;		line 44 in file "UART.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  c               1    wreg     const unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  c               1    0[BANK0 ] const unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       0       0       0       0
   847 ;;      Locals:         0       1       0       0       0
   848 ;;      Temps:          0       0       0       0       0
   849 ;;      Totals:         0       1       0       0       0
   850 ;;Total ram usage:        1 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    3
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_main
   857 ;;		_UARTSendString
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _UARTSendChar
   863  01CD                     _UARTSendChar:
   864                           
   865                           ;incstack = 0
   866                           ; Regs used in _UARTSendChar: [wreg]
   867                           ;UARTSendChar@c stored from wreg
   868  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   869  01CE  1303               	bcf	3,6	;RP1=0, select bank0
   870  01CF  00A0               	movwf	UARTSendChar@c
   871  01D0                     l1138:
   872  01D0                     l181:	
   873                           ;UART.c: 45:     while (TXSTAbits.TRMT == 0);
   874                           
   875  01D0  1683               	bsf	3,5	;RP0=1, select bank1
   876  01D1  1303               	bcf	3,6	;RP1=0, select bank1
   877  01D2  1C98               	btfss	24,1	;volatile
   878  01D3  29D5               	goto	u481
   879  01D4  29D6               	goto	u480
   880  01D5                     u481:
   881  01D5  29D0               	goto	l181
   882  01D6                     u480:
   883  01D6                     l1140:
   884                           
   885                           ;UART.c: 46:     TXREG = c;
   886  01D6  1283               	bcf	3,5	;RP0=0, select bank0
   887  01D7  1303               	bcf	3,6	;RP1=0, select bank0
   888  01D8  0820               	movf	UARTSendChar@c,w
   889  01D9  0099               	movwf	25	;volatile
   890  01DA                     l184:
   891  01DA  0008               	return
   892  01DB                     __end_of_UARTSendChar:
   893                           
   894                           	psect	text3
   895  0023                     __ptext3:	
   896 ;; *************** function _UARTInit *****************
   897 ;; Defined at:
   898 ;;		line 13 in file "UART.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  baud_rate       4   14[BANK0 ] const unsigned long 
   901 ;;  BRGH            1   18[BANK0 ] const unsigned char 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, pclath, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       5       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          0       4       0       0       0
   916 ;;      Totals:         0       9       0       0       0
   917 ;;Total ram usage:        9 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    4
   920 ;; This function calls:
   921 ;;		___lldiv
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _UARTInit
   929  0023                     _UARTInit:
   930  0023                     l1166:	
   931                           ;incstack = 0
   932                           ; Regs used in _UARTInit: [wreg+status,2+status,0+pclath+cstack]
   933                           
   934                           
   935                           ;UART.c: 15:     if (BRGH == 0) {
   936  0023  1283               	bcf	3,5	;RP0=0, select bank0
   937  0024  1303               	bcf	3,6	;RP1=0, select bank0
   938  0025  0832               	movf	UARTInit@BRGH,w
   939  0026  1D03               	btfss	3,2
   940  0027  2829               	goto	u561
   941  0028  282A               	goto	u560
   942  0029                     u561:
   943  0029  2859               	goto	l1172
   944  002A                     u560:
   945  002A                     l1168:
   946                           
   947                           ;UART.c: 16:         SPBRG = 4000000 / (64 * baud_rate) - 1;
   948  002A  082E               	movf	UARTInit@baud_rate,w
   949  002B  00B3               	movwf	??_UARTInit
   950  002C  082F               	movf	UARTInit@baud_rate+1,w
   951  002D  00B4               	movwf	??_UARTInit+1
   952  002E  0830               	movf	UARTInit@baud_rate+2,w
   953  002F  00B5               	movwf	??_UARTInit+2
   954  0030  0831               	movf	UARTInit@baud_rate+3,w
   955  0031  00B6               	movwf	??_UARTInit+3
   956  0032  3006               	movlw	6
   957  0033                     u575:
   958  0033  1003               	clrc
   959  0034  0DB3               	rlf	??_UARTInit,f
   960  0035  0DB4               	rlf	??_UARTInit+1,f
   961  0036  0DB5               	rlf	??_UARTInit+2,f
   962  0037  0DB6               	rlf	??_UARTInit+3,f
   963  0038                     u570:
   964  0038  3EFF               	addlw	-1
   965  0039  1D03               	skipz
   966  003A  2833               	goto	u575
   967  003B  0836               	movf	??_UARTInit+3,w
   968  003C  00A3               	movwf	___lldiv@divisor+3
   969  003D  0835               	movf	??_UARTInit+2,w
   970  003E  00A2               	movwf	___lldiv@divisor+2
   971  003F  0834               	movf	??_UARTInit+1,w
   972  0040  00A1               	movwf	___lldiv@divisor+1
   973  0041  0833               	movf	??_UARTInit,w
   974  0042  00A0               	movwf	___lldiv@divisor
   975  0043  3000               	movlw	0
   976  0044  00A7               	movwf	___lldiv@dividend+3
   977  0045  303D               	movlw	61
   978  0046  00A6               	movwf	___lldiv@dividend+2
   979  0047  3009               	movlw	9
   980  0048  00A5               	movwf	___lldiv@dividend+1
   981  0049  3000               	movlw	0
   982  004A  00A4               	movwf	___lldiv@dividend
   983  004B  120A  118A  2096  120A  118A  	fcall	___lldiv
   984  0050  1283               	bcf	3,5	;RP0=0, select bank0
   985  0051  1303               	bcf	3,6	;RP1=0, select bank0
   986  0052  0820               	movf	?___lldiv,w
   987  0053  3EFF               	addlw	255
   988  0054  1683               	bsf	3,5	;RP0=1, select bank1
   989  0055  1303               	bcf	3,6	;RP1=0, select bank1
   990  0056  0099               	movwf	25	;volatile
   991  0057                     l1170:
   992                           
   993                           ;UART.c: 17:         TXSTAbits.BRGH = 0;
   994  0057  1118               	bcf	24,2	;volatile
   995                           
   996                           ;UART.c: 18:     } else {
   997  0058  2887               	goto	l1176
   998  0059                     l1172:
   999                           
  1000                           ;UART.c: 19:         SPBRG = 4000000 / (16 * baud_rate) - 1;
  1001  0059  082E               	movf	UARTInit@baud_rate,w
  1002  005A  00B3               	movwf	??_UARTInit
  1003  005B  082F               	movf	UARTInit@baud_rate+1,w
  1004  005C  00B4               	movwf	??_UARTInit+1
  1005  005D  0830               	movf	UARTInit@baud_rate+2,w
  1006  005E  00B5               	movwf	??_UARTInit+2
  1007  005F  0831               	movf	UARTInit@baud_rate+3,w
  1008  0060  00B6               	movwf	??_UARTInit+3
  1009  0061  3004               	movlw	4
  1010  0062                     u585:
  1011  0062  1003               	clrc
  1012  0063  0DB3               	rlf	??_UARTInit,f
  1013  0064  0DB4               	rlf	??_UARTInit+1,f
  1014  0065  0DB5               	rlf	??_UARTInit+2,f
  1015  0066  0DB6               	rlf	??_UARTInit+3,f
  1016  0067                     u580:
  1017  0067  3EFF               	addlw	-1
  1018  0068  1D03               	skipz
  1019  0069  2862               	goto	u585
  1020  006A  0836               	movf	??_UARTInit+3,w
  1021  006B  00A3               	movwf	___lldiv@divisor+3
  1022  006C  0835               	movf	??_UARTInit+2,w
  1023  006D  00A2               	movwf	___lldiv@divisor+2
  1024  006E  0834               	movf	??_UARTInit+1,w
  1025  006F  00A1               	movwf	___lldiv@divisor+1
  1026  0070  0833               	movf	??_UARTInit,w
  1027  0071  00A0               	movwf	___lldiv@divisor
  1028  0072  3000               	movlw	0
  1029  0073  00A7               	movwf	___lldiv@dividend+3
  1030  0074  303D               	movlw	61
  1031  0075  00A6               	movwf	___lldiv@dividend+2
  1032  0076  3009               	movlw	9
  1033  0077  00A5               	movwf	___lldiv@dividend+1
  1034  0078  3000               	movlw	0
  1035  0079  00A4               	movwf	___lldiv@dividend
  1036  007A  120A  118A  2096  120A  118A  	fcall	___lldiv
  1037  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0081  0820               	movf	?___lldiv,w
  1040  0082  3EFF               	addlw	255
  1041  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1042  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1043  0085  0099               	movwf	25	;volatile
  1044  0086                     l1174:
  1045                           
  1046                           ;UART.c: 20:         TXSTAbits.BRGH = 1;
  1047  0086  1518               	bsf	24,2	;volatile
  1048  0087                     l1176:
  1049                           
  1050                           ;UART.c: 24:     TXSTAbits.TX9 = 0;
  1051  0087  1318               	bcf	24,6	;volatile
  1052  0088                     l1178:
  1053                           
  1054                           ;UART.c: 25:     TXSTAbits.TXEN = 1;
  1055  0088  1698               	bsf	24,5	;volatile
  1056  0089                     l1180:
  1057                           
  1058                           ;UART.c: 26:     TXSTAbits.SYNC = 0;
  1059  0089  1218               	bcf	24,4	;volatile
  1060  008A                     l1182:
  1061                           
  1062                           ;UART.c: 29:     RCSTAbits.SPEN = 1;
  1063  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1064  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1065  008C  1798               	bsf	24,7	;volatile
  1066  008D                     l1184:
  1067                           
  1068                           ;UART.c: 30:     RCSTAbits.RX9 = 0;
  1069  008D  1318               	bcf	24,6	;volatile
  1070  008E                     l1186:
  1071                           
  1072                           ;UART.c: 31:     RCSTAbits.CREN = 1;
  1073  008E  1618               	bsf	24,4	;volatile
  1074  008F                     l1188:
  1075                           
  1076                           ;UART.c: 32:     RCSTAbits.FERR = 0;
  1077  008F  1118               	bcf	24,2	;volatile
  1078  0090                     l1190:
  1079                           
  1080                           ;UART.c: 33:     RCSTAbits.OERR = 0;
  1081  0090  1098               	bcf	24,1	;volatile
  1082  0091                     l1192:
  1083                           
  1084                           ;UART.c: 36:     TRISCbits.TRISC7 = 1;
  1085  0091  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0092  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0093  1787               	bsf	7,7	;volatile
  1088  0094                     l1194:
  1089                           
  1090                           ;UART.c: 37:     TRISCbits.TRISC6 = 0;
  1091  0094  1307               	bcf	7,6	;volatile
  1092  0095                     l178:
  1093  0095  0008               	return
  1094  0096                     __end_of_UARTInit:
  1095                           
  1096                           	psect	text4
  1097  0096                     __ptext4:	
  1098 ;; *************** function ___lldiv *****************
  1099 ;; Defined at:
  1100 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  divisor         4    0[BANK0 ] unsigned long 
  1103 ;;  dividend        4    4[BANK0 ] unsigned long 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  quotient        4    9[BANK0 ] unsigned long 
  1106 ;;  counter         1   13[BANK0 ] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  4    0[BANK0 ] unsigned long 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       8       0       0       0
  1117 ;;      Locals:         0       5       0       0       0
  1118 ;;      Temps:          0       1       0       0       0
  1119 ;;      Totals:         0      14       0       0       0
  1120 ;;Total ram usage:       14 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    3
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_UARTInit
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function ___lldiv
  1132  0096                     ___lldiv:
  1133  0096                     l1142:	
  1134                           ;incstack = 0
  1135                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1136                           
  1137  0096  3000               	movlw	0
  1138  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0099  00AC               	movwf	___lldiv@quotient+3
  1141  009A  3000               	movlw	0
  1142  009B  00AB               	movwf	___lldiv@quotient+2
  1143  009C  3000               	movlw	0
  1144  009D  00AA               	movwf	___lldiv@quotient+1
  1145  009E  3000               	movlw	0
  1146  009F  00A9               	movwf	___lldiv@quotient
  1147  00A0  0823               	movf	___lldiv@divisor+3,w
  1148  00A1  0422               	iorwf	___lldiv@divisor+2,w
  1149  00A2  0421               	iorwf	___lldiv@divisor+1,w
  1150  00A3  0420               	iorwf	___lldiv@divisor,w
  1151  00A4  1903               	skipnz
  1152  00A5  28A7               	goto	u491
  1153  00A6  28A8               	goto	u490
  1154  00A7                     u491:
  1155  00A7  28F5               	goto	l1162
  1156  00A8                     u490:
  1157  00A8                     l1144:
  1158  00A8  01AD               	clrf	___lldiv@counter
  1159  00A9  0AAD               	incf	___lldiv@counter,f
  1160  00AA  28B8               	goto	l1148
  1161  00AB                     l1146:
  1162  00AB  3001               	movlw	1
  1163  00AC  00A8               	movwf	??___lldiv
  1164  00AD                     u505:
  1165  00AD  1003               	clrc
  1166  00AE  0DA0               	rlf	___lldiv@divisor,f
  1167  00AF  0DA1               	rlf	___lldiv@divisor+1,f
  1168  00B0  0DA2               	rlf	___lldiv@divisor+2,f
  1169  00B1  0DA3               	rlf	___lldiv@divisor+3,f
  1170  00B2  0BA8               	decfsz	??___lldiv,f
  1171  00B3  28AD               	goto	u505
  1172  00B4  3001               	movlw	1
  1173  00B5  00A8               	movwf	??___lldiv
  1174  00B6  0828               	movf	??___lldiv,w
  1175  00B7  07AD               	addwf	___lldiv@counter,f
  1176  00B8                     l1148:
  1177  00B8  1FA3               	btfss	___lldiv@divisor+3,7
  1178  00B9  28BB               	goto	u511
  1179  00BA  28BC               	goto	u510
  1180  00BB                     u511:
  1181  00BB  28AB               	goto	l1146
  1182  00BC                     u510:
  1183  00BC                     l1150:
  1184  00BC  3001               	movlw	1
  1185  00BD  00A8               	movwf	??___lldiv
  1186  00BE                     u525:
  1187  00BE  1003               	clrc
  1188  00BF  0DA9               	rlf	___lldiv@quotient,f
  1189  00C0  0DAA               	rlf	___lldiv@quotient+1,f
  1190  00C1  0DAB               	rlf	___lldiv@quotient+2,f
  1191  00C2  0DAC               	rlf	___lldiv@quotient+3,f
  1192  00C3  0BA8               	decfsz	??___lldiv,f
  1193  00C4  28BE               	goto	u525
  1194  00C5                     l1152:
  1195  00C5  0823               	movf	___lldiv@divisor+3,w
  1196  00C6  0227               	subwf	___lldiv@dividend+3,w
  1197  00C7  1D03               	skipz
  1198  00C8  28D3               	goto	u535
  1199  00C9  0822               	movf	___lldiv@divisor+2,w
  1200  00CA  0226               	subwf	___lldiv@dividend+2,w
  1201  00CB  1D03               	skipz
  1202  00CC  28D3               	goto	u535
  1203  00CD  0821               	movf	___lldiv@divisor+1,w
  1204  00CE  0225               	subwf	___lldiv@dividend+1,w
  1205  00CF  1D03               	skipz
  1206  00D0  28D3               	goto	u535
  1207  00D1  0820               	movf	___lldiv@divisor,w
  1208  00D2  0224               	subwf	___lldiv@dividend,w
  1209  00D3                     u535:
  1210  00D3  1C03               	skipc
  1211  00D4  28D6               	goto	u531
  1212  00D5  28D7               	goto	u530
  1213  00D6                     u531:
  1214  00D6  28E6               	goto	l1158
  1215  00D7                     u530:
  1216  00D7                     l1154:
  1217  00D7  0820               	movf	___lldiv@divisor,w
  1218  00D8  02A4               	subwf	___lldiv@dividend,f
  1219  00D9  0821               	movf	___lldiv@divisor+1,w
  1220  00DA  1C03               	skipc
  1221  00DB  0F21               	incfsz	___lldiv@divisor+1,w
  1222  00DC  02A5               	subwf	___lldiv@dividend+1,f
  1223  00DD  0822               	movf	___lldiv@divisor+2,w
  1224  00DE  1C03               	skipc
  1225  00DF  0F22               	incfsz	___lldiv@divisor+2,w
  1226  00E0  02A6               	subwf	___lldiv@dividend+2,f
  1227  00E1  0823               	movf	___lldiv@divisor+3,w
  1228  00E2  1C03               	skipc
  1229  00E3  0F23               	incfsz	___lldiv@divisor+3,w
  1230  00E4  02A7               	subwf	___lldiv@dividend+3,f
  1231  00E5                     l1156:
  1232  00E5  1429               	bsf	___lldiv@quotient,0
  1233  00E6                     l1158:
  1234  00E6  3001               	movlw	1
  1235  00E7                     u545:
  1236  00E7  1003               	clrc
  1237  00E8  0CA3               	rrf	___lldiv@divisor+3,f
  1238  00E9  0CA2               	rrf	___lldiv@divisor+2,f
  1239  00EA  0CA1               	rrf	___lldiv@divisor+1,f
  1240  00EB  0CA0               	rrf	___lldiv@divisor,f
  1241  00EC  3EFF               	addlw	-1
  1242  00ED  1D03               	skipz
  1243  00EE  28E7               	goto	u545
  1244  00EF                     l1160:
  1245  00EF  3001               	movlw	1
  1246  00F0  02AD               	subwf	___lldiv@counter,f
  1247  00F1  1D03               	btfss	3,2
  1248  00F2  28F4               	goto	u551
  1249  00F3  28F5               	goto	u550
  1250  00F4                     u551:
  1251  00F4  28BC               	goto	l1150
  1252  00F5                     u550:
  1253  00F5                     l1162:
  1254  00F5  082C               	movf	___lldiv@quotient+3,w
  1255  00F6  00A3               	movwf	?___lldiv+3
  1256  00F7  082B               	movf	___lldiv@quotient+2,w
  1257  00F8  00A2               	movwf	?___lldiv+2
  1258  00F9  082A               	movf	___lldiv@quotient+1,w
  1259  00FA  00A1               	movwf	?___lldiv+1
  1260  00FB  0829               	movf	___lldiv@quotient,w
  1261  00FC  00A0               	movwf	?___lldiv
  1262  00FD                     l332:
  1263  00FD  0008               	return
  1264  00FE                     __end_of___lldiv:
  1265                           
  1266                           	psect	text5
  1267  0156                     __ptext5:	
  1268 ;; *************** function _isr *****************
  1269 ;; Defined at:
  1270 ;;		line 45 in file "main.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  rcUART          1    4[COMMON] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         0       0       0       0       0
  1285 ;;      Locals:         1       0       0       0       0
  1286 ;;      Temps:          3       0       0       0       0
  1287 ;;      Totals:         4       0       0       0       0
  1288 ;;Total ram usage:        4 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    2
  1291 ;; This function calls:
  1292 ;;		_UARTReadChar
  1293 ;; This function is called by:
  1294 ;;		Interrupt level 1
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _isr
  1300  0156                     _isr:
  1301  0156                     i1l890:
  1302                           
  1303                           ;main.c: 48: 
  1304  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0158  1E8C               	btfss	12,5	;volatile
  1307  0159  295B               	goto	u19_21
  1308  015A  295C               	goto	u19_20
  1309  015B                     u19_21:
  1310  015B  298C               	goto	i1l50
  1311  015C                     u19_20:
  1312  015C                     i1l892:
  1313                           
  1314                           ;main.c: 49:     TRISAbits.TRISA0 = 0;
  1315  015C  120A  118A  21DB  120A  118A  	fcall	_UARTReadChar
  1316  0161  00F1               	movwf	??_isr
  1317  0162  0871               	movf	??_isr,w
  1318  0163  00F4               	movwf	isr@rcUART
  1319  0164                     i1l894:
  1320                           
  1321                           ;main.c: 50:     TRISAbits.TRISA1 = 0;
  1322  0164  3041               	movlw	65
  1323  0165  0674               	xorwf	isr@rcUART,w
  1324  0166  1D03               	btfss	3,2
  1325  0167  2969               	goto	u20_21
  1326  0168  296A               	goto	u20_20
  1327  0169                     u20_21:
  1328  0169  296E               	goto	i1l898
  1329  016A                     u20_20:
  1330  016A                     i1l896:
  1331                           
  1332                           ;main.c: 51: 
  1333  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1334  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1335  016C  1005               	bcf	5,0	;volatile
  1336                           
  1337                           ;main.c: 52:     PORTAbits.RA0 = 0;
  1338  016D  1085               	bcf	5,1	;volatile
  1339  016E                     i1l898:
  1340                           
  1341                           ;main.c: 54:     int count = 0;
  1342  016E  3042               	movlw	66
  1343  016F  0674               	xorwf	isr@rcUART,w
  1344  0170  1D03               	btfss	3,2
  1345  0171  2973               	goto	u21_21
  1346  0172  2974               	goto	u21_20
  1347  0173                     u21_21:
  1348  0173  2978               	goto	i1l902
  1349  0174                     u21_20:
  1350  0174                     i1l900:
  1351                           
  1352                           ;main.c: 55: 
  1353  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0176  1405               	bsf	5,0	;volatile
  1356                           
  1357                           ;main.c: 56:     while (1) {
  1358  0177  1085               	bcf	5,1	;volatile
  1359  0178                     i1l902:
  1360                           
  1361                           ;main.c: 58:         UARTSendString("S1", 5);
  1362  0178  3043               	movlw	67
  1363  0179  0674               	xorwf	isr@rcUART,w
  1364  017A  1D03               	btfss	3,2
  1365  017B  297D               	goto	u22_21
  1366  017C  297E               	goto	u22_20
  1367  017D                     u22_21:
  1368  017D  2982               	goto	i1l906
  1369  017E                     u22_20:
  1370  017E                     i1l904:
  1371                           
  1372                           ;main.c: 59:         if(count<= 20){
  1373  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1374  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0180  1005               	bcf	5,0	;volatile
  1376                           
  1377                           ;main.c: 60:             PORTA = 1;
  1378  0181  1485               	bsf	5,1	;volatile
  1379  0182                     i1l906:
  1380                           
  1381                           ;main.c: 62:         }else{
  1382  0182  3044               	movlw	68
  1383  0183  0674               	xorwf	isr@rcUART,w
  1384  0184  1D03               	btfss	3,2
  1385  0185  2987               	goto	u23_21
  1386  0186  2988               	goto	u23_20
  1387  0187                     u23_21:
  1388  0187  298C               	goto	i1l50
  1389  0188                     u23_20:
  1390  0188                     i1l908:
  1391                           
  1392                           ;main.c: 63:             PORTA= 2;
  1393  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1395  018A  1405               	bsf	5,0	;volatile
  1396                           
  1397                           ;main.c: 64:         }
  1398  018B  1485               	bsf	5,1	;volatile
  1399  018C                     i1l50:
  1400  018C  0873               	movf	??_isr+2,w
  1401  018D  008A               	movwf	10
  1402  018E  0E72               	swapf	??_isr+1,w
  1403  018F  0083               	movwf	3
  1404  0190  0EFE               	swapf	btemp,f
  1405  0191  0E7E               	swapf	btemp,w
  1406  0192  0009               	retfie
  1407  0193                     __end_of_isr:
  1408                           
  1409                           	psect	intentry
  1410  0004                     __pintentry:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1413                           
  1414  0004                     interrupt_function:
  1415  007E                     saved_w	set	btemp
  1416  0004  00FE               	movwf	btemp
  1417  0005  0E03               	swapf	3,w
  1418  0006  00F2               	movwf	??_isr+1
  1419  0007  080A               	movf	10,w
  1420  0008  00F3               	movwf	??_isr+2
  1421  0009  120A  118A  2956   	ljmp	_isr
  1422                           
  1423                           	psect	text6
  1424  01DB                     __ptext6:	
  1425 ;; *************** function _UARTReadChar *****************
  1426 ;; Defined at:
  1427 ;;		line 73 in file "UART.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      unsigned char 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    1
  1448 ;; This function calls:
  1449 ;;		_UARTDataReady
  1450 ;; This function is called by:
  1451 ;;		_isr
  1452 ;;		_UARTReadString
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _UARTReadChar
  1458  01DB                     _UARTReadChar:
  1459  01DB                     i1l834:	
  1460                           ;incstack = 0
  1461                           ; Regs used in _UARTReadChar: [wreg+status,2+status,0+pclath+cstack]
  1462                           
  1463  01DB                     i1l836:	
  1464                           ;UART.c: 74:     while (!UARTDataReady());
  1465                           
  1466  01DB  120A  118A  21F2  120A  118A  	fcall	_UARTDataReady
  1467  01E0  3A00               	xorlw	0
  1468  01E1  1903               	skipnz
  1469  01E2  29E4               	goto	u9_21
  1470  01E3  29E5               	goto	u9_20
  1471  01E4                     u9_21:
  1472  01E4  29DB               	goto	i1l836
  1473  01E5                     u9_20:
  1474  01E5                     i1l838:
  1475                           
  1476                           ;UART.c: 75:     return RCREG;
  1477  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1478  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1479  01E7  081A               	movf	26,w	;volatile
  1480  01E8                     i1l201:
  1481  01E8  0008               	return
  1482  01E9                     __end_of_UARTReadChar:
  1483                           
  1484                           	psect	text7
  1485  01F2                     __ptext7:	
  1486 ;; *************** function _UARTDataReady *****************
  1487 ;; Defined at:
  1488 ;;		line 65 in file "UART.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      unsigned char 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          1       0       0       0       0
  1505 ;;      Totals:         1       0       0       0       0
  1506 ;;Total ram usage:        1 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_UARTReadChar
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _UARTDataReady
  1517  01F2                     _UARTDataReady:
  1518  01F2                     i1l806:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _UARTDataReady: [wreg+status,2+status,0]
  1521                           
  1522                           
  1523                           ;UART.c: 66:     return PIR1bits.RCIF;
  1524  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1525  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1526  01F4  0E0C               	swapf	12,w	;volatile
  1527  01F5  00F0               	movwf	??_UARTDataReady
  1528  01F6  0C70               	rrf	??_UARTDataReady,w
  1529  01F7  3901               	andlw	1
  1530  01F8                     i1l195:
  1531  01F8  0008               	return
  1532  01F9                     __end_of_UARTDataReady:
  1533  007E                     btemp	set	126	;btemp
  1534  007E                     wtemp0	set	126
  1535                           
  1536                           	psect	config
  1537                           
  1538                           ;Config register CONFIG1 @ 0x2007
  1539                           ;	Oscillator Selection bits
  1540                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1541                           ;	Watchdog Timer Enable bit
  1542                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1543                           ;	Power-up Timer Enable bit
  1544                           ;	PWRTE = OFF, PWRT disabled
  1545                           ;	RE3/MCLR pin function select bit
  1546                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1547                           ;	Code Protection bit
  1548                           ;	CP = OFF, Program memory code protection is disabled
  1549                           ;	Data Code Protection bit
  1550                           ;	CPD = OFF, Data memory code protection is disabled
  1551                           ;	Brown Out Reset Selection bits
  1552                           ;	BOREN = OFF, BOR disabled
  1553                           ;	Internal External Switchover bit
  1554                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1555                           ;	Fail-Safe Clock Monitor Enabled bit
  1556                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1557                           ;	Low Voltage Programming Enable bit
  1558                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1559                           ;	In-Circuit Debugger Mode bit
  1560                           ;	DEBUG = 0x1, unprogrammed default
  1561  2007                     	org	8199
  1562  2007  20D4               	dw	8404
  1563                           
  1564                           ;Config register CONFIG2 @ 0x2008
  1565                           ;	Brown-out Reset Selection bit
  1566                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1567                           ;	Flash Program Memory Self Write Enable bits
  1568                           ;	WRT = OFF, Write protection off
  1569  2008                     	org	8200
  1570  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     26      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UARTSendString@str	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _UARTReadChar->_UARTDataReady

Critical Paths under _main in BANK0

    _main->_UARTInit
    _UARTSendString->_UARTSendChar
    _UARTInit->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1294
                                             23 BANK0      3     3      0
                           _UARTInit
                       _UARTSendChar
                     _UARTSendString
 ---------------------------------------------------------------------------------
 (1) _UARTSendString                                       5     4      1     352
                                              1 BANK0      5     4      1
                       _UARTSendChar
 ---------------------------------------------------------------------------------
 (2) _UARTSendChar                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UARTInit                                             9     4      5     874
                                             14 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      60
                                              1 COMMON     4     4      0
                       _UARTReadChar
 ---------------------------------------------------------------------------------
 (4) _UARTReadChar                                         0     0      0       0
                      _UARTDataReady
 ---------------------------------------------------------------------------------
 (5) _UARTDataReady                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTInit
     ___lldiv
   _UARTSendChar
   _UARTSendString
     _UARTSendChar

 _isr (ROOT)
   _UARTReadChar
     _UARTDataReady

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 17:58:13 2021

       UARTInit@baud_rate 002E                         pc 0002                        _BF 04A0  
                      l55 0122                        _Gx 0077                        _Gy 0075  
                      _Gz 0042                        _Px 0040                        _Py 003E  
                      _Pz 003C                        fsr 0004                       l332 00FD  
                     l181 01D0                       l184 01DA                       l192 01CC  
                     l178 0095                       _GIE 005F                       u510 00BC  
                     u511 00BB                       u600 01CC                       u505 00AD  
                     u601 01CB                       u530 00D7                       u610 0143  
                     u531 00D6                       u611 0142                       u525 00BE  
                     u550 00F5                       u551 00F4                       u535 00D3  
                     u615 013F                       u560 002A                       u480 01D6  
                     u545 00E7                       u561 0029                       u481 01D5  
                     u490 00A8                       u570 0038                       u491 00A7  
                     u580 0067                       _SEN 0488                       u590 01BD  
                     u575 0033                       u591 01BC                       u585 0062  
                     u595 01B9                       _isr 0156                       fsr0 0004  
                    l1200 01A8                      l1202 01B0                      l1210 0113  
                    l1140 01D6                      l1204 01BD                      l1220 011A  
                    l1212 0114                      l1150 00BC                      l1142 0096  
                    l1230 0128                      l1222 011B                      l1214 0115  
                    l1206 00FE                      l1160 00EF                      l1152 00C5  
                    l1144 00A8                      l1232 0134                      l1224 011C  
                    l1216 0118                      l1208 0102                      l1154 00D7  
                    l1146 00AB                      l1162 00F5                      l1170 0057  
                    l1138 01D0                      l1234 0143                      l1226 011F  
                    l1218 0119                      l1156 00E5                      l1148 00B8  
                    l1180 0089                      l1172 0059                      l1236 014E  
                    l1228 0120                      l1158 00E6                      l1190 0090  
                    l1182 008A                      l1174 0086                      l1166 0023  
                    l1192 0091                      l1184 008D                      l1176 0087  
                    l1168 002A                      l1194 0094                      l1186 008E  
                    l1178 0088                      l1188 008F                      l1196 0196  
                    l1198 019B                      ?_isr 0070                      STR_1 01EF  
                    _PEIE 005E                      i1l50 018C                      _RCEN 048B  
                    u9_20 01E5                      u9_21 01E4                      _main 00FE  
                    btemp 007E                      start 000C                     ??_isr 0071  
                   ?_main 0070                     _ACKEN 048C                     _ACKDT 048D  
                   _ANSEL 0188           __end_of___lldiv 00FE                     i1l201 01E8  
                   i1l195 01F8                     i1l900 0174                     i1l806 01F2  
                   i1l902 0178                     i1l904 017E                     i1l834 01DB  
                   i1l906 0182                     i1l836 01DB                     i1l908 0188  
                   i1l838 01E5                     i1l890 0156                     i1l892 015C  
                   i1l894 0164                     i1l896 016A                     i1l898 016E  
                   _RCREG 001A                     u20_20 016A                     u20_21 0169  
                   u21_20 0174                     u21_21 0173                     u22_20 017E  
                   u22_21 017D                     u23_20 0188                     u23_21 0187  
                   _SPBRG 0099                     u19_20 015C                     u19_21 015B  
                   _PORTA 0005                     _SSPIE 0463                     _SSPIF 0063  
                   _TXREG 0019          __end_of_UARTInit 0096                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 0156                    ??_main 0037     __end_of_UARTDataReady 01F9  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
               ??___lldiv 0028   __size_of_UARTSendString 003A                    saved_w 007E  
 __end_of__initialization 001F            __pcstackCOMMON 0070                 ?_UARTInit 002E  
UARTSendString@max_length 0021                __pbssBANK0 003A                __pmaintext 00FE  
              ??_UARTInit 0033                __pintentry 0004             ?_UARTReadChar 0070  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 01E9  
           ?_UARTSendChar 0070                   ___lldiv 0096            _UARTSendString 0193  
                 __ptext1 0193                   __ptext2 01CD                   __ptext3 0023  
                 __ptext4 0096                   __ptext5 0156                   __ptext6 01DB  
                 __ptext7 01F2              __size_of_isr 003D            ??_UARTReadChar 0071  
    end_of_initialization 001F            ??_UARTSendChar 0075           ___lldiv@divisor 0020  
         ___lldiv@counter 002D                 _RCSTAbits 0018    __end_of_UARTSendString 01CD  
               _PORTAbits 0005                 _TRISAbits 0085                 _TRISCbits 0087  
               _TXSTAbits 0098    __size_of_UARTDataReady 0007           ?_UARTSendString 0021  
       __size_of_UARTInit 0073       start_initialization 000F               __end_of_isr 0193  
    __end_of_UARTReadChar 01E9      __end_of_UARTSendChar 01DB               __pbssCOMMON 0075  
               ___latbits 0002             __pcstackBANK0 0020             _UARTDataReady 01F2  
           UARTSendChar@c 0020                  ?___lldiv 0020                 __pstrings 01E9  
          ?_UARTDataReady 0070         interrupt_function 0004                  _PIE1bits 008C  
         UARTSendString@i 0024                  _PIR1bits 000C                  _UARTInit 0023  
             __stringbase 01EE                 main@count 0038          ??_UARTSendString 0022  
   __size_of_UARTReadChar 000E                 isr@rcUART 0074     __size_of_UARTSendChar 000E  
            UARTInit@BRGH 0032          __size_of___lldiv 0068        __end_of__stringtab 01EF  
         ??_UARTDataReady 0070              _UARTReadChar 01DB              _UARTSendChar 01CD  
           __size_of_main 0058                _INTCONbits 000B         UARTSendString@str 0023  
                intlevel1 0000          ___lldiv@dividend 0024                 stringcode 01E9  
             _temperature 003A          ___lldiv@quotient 0029                  stringdir 01E9  
                stringtab 01E9               _SSPCON2bits 0091  
